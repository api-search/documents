openapi: 3.0.1
info:
  title: DocuSign REST API
  description: "The DocuSign REST API provides you with a powerful, convenient, and\
    \ simple Web services API for interacting with DocuSign."
  termsOfService: https://www.docusign.com/company/terms-and-conditions/web
  contact:
    name: DocuSign Developer Center
    url: https://developers.docusign.com/
    email: devcenter@docusign.com
  version: v2
externalDocs:
  description: See the DocuSign REST API Guide for more information.
  url: https://docs.docusign.com/esign
servers:
- url: https://www.docusign.net/restapi
tags:
- name: AccountBrands
  description: |-
    The AcccountBrands resource provides methods that allow you to create and delete the account brand associated with an account.

    Branding allows you to add the look and feel of your organization's
    brand to the sending, signing, and email process making it easier for users to identify envelopes coming from your organization.

    The DocuSign Account Custom Branding feature lets you set the colors, logo, and text for your account. You can create any number of brand profiles with different settings to reflect each of your corporate brands or different internal divisions or departments.

    When you create or change a branding profile, it applies to everyone using that profile and affects all envelopes sent with that profile.
- name: AccountConsumerDisclosures
  description: The AccountConsumerDisclosures resource provides methods that allow
    you to retrieve the consumer disclosures associated with the account.
- name: AccountCustomFields
  description: "The CustomFields resource provides a method that enables you to retrieve\
    \ the custom fields associated with an account.\n\nThese fields can be used with\
    \ your account's envelopes to record information about the envelopes. The fields\
    \ can be searched to find matching envelopes and track information. \n\nThe envelope\
    \ custom fields are shown in the DocuSign member console's Envelope Settings section\
    \ when a user creates an envelope. The envelope custom fields are not seen by\
    \ envelope recipients.\n\nThere are two types of envelope custom fields, text\
    \ and list. A text custom field lets the sender enter the value for the field.\
    \ The list custom field lets the sender select the value of the field from a pre-determined\
    \ list."
- name: EnvelopeCustomFields
  description: "The EnvelopeCustomFields resource provides methods that allow you\
    \ manage custom fields in an envelope. \n\nCustom fields can be used in the envelopes\
    \ for your account to record information about the envelope, help search for envelopes\
    \ and track information. The envelope custom fields are shown in the Envelope\
    \ Settings section when a user is creating an envelope in the DocuSign member\
    \ console. The envelope custom fields are not seen by the envelope recipients.\n\
    \nThere are two types of envelope custom fields, text and list. A text custom\
    \ field lets the sender enter the value for the field. With a list custom field,\
    \ the sender selects the value of the field from a pre-made list."
- name: EnvelopeDocumentFields
  description: "The EnvelopeDocumentFields resource provides methods that allow you\
    \ to manage custom fields on a document.\n\nYou can create custom versions of\
    \ standard fields that combine of field properties, such as font type or size,\
    \ or a validation setting. \n\nNote: Some advanced features and options are supported\
    \ only in certain DocuSign plans. Your account plan might not support some options\
    \ discussed in this help topic. For more information about which options are available\
    \ for your account, check your account plan or contact your Account Manager."
- name: EnvelopeLocks
  description: |-
    The EnvelopeLocks resource provides methods that allow you to manage locks on an envelope.

    You can lock the envelope, and set the time until the lock expires, to prevent users or recipients from accessing and changing the envelope.

    Users must have envelope locking capability enabled to use these functions.
- name: EnvelopeRecipients
  description: |+
    <!-- resources aren't rendered the same way
         as other pages. This is a little hack to
         make the headings work better -->
    <style>
    h1, h2, h3 {
      margin-top: 1em;
    }
    </style>

    The EnvelopeRecipients resource allows you manage the recipients of an
    envelope. There are seven recipient types. All types share
    a [core set of parameters](#core-recipient-parameters).
    Some recipient types have additional parameters.

    <br>

    | Recipient type | Description |
    | :--- | :--- |
    | [Agents](#agents-recipient) | An agent recipient can add name and email information for recipients that appear after the agent in routing order. |
    | [Carbon Copies](#carbon-copies-recipient) | Carbon copy recipients get a copy of the envelope but don't need to sign, initial, date or add information to any of the documents. This type of recipient can be used in any routing order. Carbon copy recipients receive their copy of the envelope when the envelope reaches the recipient's order in the process flow and when the envelope is completed. |
    | [Certified Deliveries](#certified-deliveries-recipient) | Certified delivery recipients must receive the completed documents for the envelope to be completed. However, they don't need to sign, initial, date or add information to any of the documents. |
    | [Editors](#editors-recipient) | Editors have the same management and access rights for the envelope as the sender. They can make changes to the envelope as if they were using the Advanced Correct feature. This recipient can add name and email information, add or change the routing order and set authentication options for the remaining recipients. Additionally, this recipient can edit signature/initial tabs and data fields for the remaining recipients. The recipient must have a DocuSign account to be an editor. |
    | [In-Person Signers](#in-person-signers-recipient) | An in-person recipient is a DocuSign user, acting as a Signing Host, who is in the same physical location as the signer. |
    | [Intermediaries](#intermediaries-recipient) | An intermediary is a recipient who can, but is not required to, add name and email information for recipients at the same or subsequent level in the routing order, unless subsequent agents, editors or intermediaries are added. |
    | [Seals](#seal-recipient) | An electronic seal recipient represents a legal person. Electronic seals can be used by organizations and governments to show evidence of origin and integrity of documents. |
    | [Signers](#signers-recipient) | A signer is a recipient who must sign, initial, date, or add data to form fields on the documents in the envelope. |

    <br>

    Not all recipients are are available to all account types.
    Review your account plan to determine
    which recipient types are available to you.
    All recipient types are available in the Demo environment.


    ## Core Recipient Parameters

    All recipients, regardless of type, have the same common parameters.
    The following table contains the descriptions
    for the core properties for all recipient types.

    <br>

    | Name | Required | Schema Type | Description |
    | :--- | :--- | :--- | :--- |
    | email | Yes | Email | Email of the recipient. Notification will be sent to this email id.<br/>Maximum Length: 100 characters. |
    | name | Yes | String | Full legal name of the recipient.<br/>Maximum Length: 100 characters. |
    | accessCode | No | String | This optional element specifies the access code a recipient has to enter to validate the identity.<br/>Maximum Length: 50 characters. |
    | addAccessCodeToEmail | No | Boolean | This optional attribute indicates that the access code is added to the email sent to the recipient; this nullifies the Security measure of Access Code on the recipient. |
    | clientUserId | No | String | This specifies whether the recipient is embedded or remote.<br/><br/>If the `clientUserId` property is not null then the recipient is embedded. Note that if the `ClientUserId` property is set and either `SignerMustHaveAccount` or `SignerMustLoginToSign` property of the account settings is set to  **true**, an error is generated on sending. |
    | embeddedRecipientStartURL | No | String | This is a sender provided valid URL string for redirecting an embedded recipient. When using this option, the embedded recipient still receives an email from DocuSign, just as a remote recipient would, but when the document link in the email is clicked the recipient is redirected, through DocuSign, to this URL to complete their actions. When routing to the URL, it is up to the sender's system (the server responding to the URL) to then request a recipient token to launch a signing session.<br/><br/>If the value `SIGN_AT_DOCUSIGN` is used for this node, the recipient is directed to an embedded signing or viewing process directly at DocuSign. The signing or viewing action is initiated by the DocuSign system and the transaction activity and Certificate of Completion records will reflect this. In all other ways the process is identical to an embedded signing or viewing operation that would be launched by any partner.<br/><br/>It is important to remember that in a typical embedded workflow the authentication of an embedded recipient is the responsibility of the sending application and DocuSign expects that senders will follow their own process for establishing the recipient's identity. In this workflow the recipient goes through the sending application before the embedded signing or viewing process in initiated. However, when the sending application sets  the `EmbeddedRecipientStartURL` property to `SIGN_AT_DOCUSIGN`, the recipient goes directly to the embedded signing or viewing process bypassing the sending application and any authentication steps the sending application would use. In this case, DocuSign recommends that one of the normal DocuSign authentication features (Access Code, Phone Authentication, SMS Authentication, etc.) be used to verify the identity of the recipient.<br/><br>If the `clientUserId` property is NOT set and the `embeddedRecipientStartURL` property is set, DocuSign ignores the redirect URL and launch the standard signing process for the email recipient. Information can be appended to the `embeddedRecipientStartURL` property using merge fields. The available merge fields items are: envelopeId, recipientId, recipientName, recipientEmail, and customFields. The customFields must be part of the recipient or envelope. The merge fields are enclosed in double brackets.<br/><br/>_Example_:<br/>`http://senderHost/[[mergeField1]]/ beginSigningSession? [[mergeField2]]&[[mergeField3]]` |
    | customFields | No | customField |An optional array of strings that allows the sender to provide custom data about the recipient. This information is returned in the envelope status but otherwise not used by DocuSign. String `customField` properties have a maximum length of 100 characters. |
    | emailNotification | No | emailNotification | An optional complex type that has information for setting the language for the recipient's email information. It is composed of three elements:<br/><br/>*emailBody*: a string with the email message sent to the recipient.<br/>Maximum Length: 10000 characters.<br/><br/>*emailSubject*: a string with the subject of the email sent to the recipient.<br/>Maximum Length: 100 characters.<br/><br/>*supportedLanguage*: The simple type enumeration of the language used. The supported languages, with the language value shown in parenthesis, are: Arabic (ar), Bahasa Indonesia (id), Bahasa Melayu (ms) Bulgarian (bg), Czech (cs), Chinese Simplified (zh_CN), Chinese Traditional (zh_TW), Croatian (hr), Danish (da), Dutch (nl), English US (en), English UK (en_GB), Estonian (et), Farsi (fa), Finnish (fi), French (fr), French Canada (fr_CA), German (de), Greek (el), Hebrew (he), Hindi (hi), Hungarian (hu), Italian (it), Japanese (ja), Korean (ko), Latvian (lv), Lithuanian (lt), Norwegian (no), Polish (pl), Portuguese (pt), Portuguese Brazil (pt_BR), Romanian (ro),Russian (ru), Serbian (sr), Slovak (sk), Slovenian (sl), Spanish (es),Spanish Latin America (es_MX), Swedish (sv), Thai (th), Turkish (tr), Ukrainian (uk) and Vietnamese (vi).<br/><br/>**IMPORTANT**: If this is enabled for one recipient, it overrides the Envelope Subject and `EmailBlurb` property settings. Also, you must set the  `emailNotification` property for all recipients. |
    | excludedDocuments | No | Array of Strings | Specifies the documents that are not visible to this recipient. Document Visibility must be enabled for the account and the enforceSignerVisibility property must be set to true for the envelope to use this.<br/><br/>When the enforceSignerVisibility property is set to **true**, documents with tabs can only be viewed by signers that have a tab on that document. Recipients that have an administrative role (Agent, Editor, or Intermediaries) or informational role (Certified Deliveries or Carbon Copies) can always see all the documents in an envelope, unless they are specifically excluded using this setting when an envelope is sent. Documents that do not have tabs are always visible to all recipients, unless they are specifically excluded using this setting when an envelope is sent. |
    | idCheckConfigurationName | No | String |Specifies authentication check by name. The names used here must be the same as the authentication type names used by the account (these name can also be found in the web console sending interface in the Identify list for a recipient). This overrides any default authentication setting.<br/><br/>_Example_:<br/> Your account has ID Check and SMS Authentication available and in the web console Identify list these appear as 'ID Check $' and 'SMS Auth $'. To use ID check in an envelope, the `idCheckConfigurationName` property must be  set to `ID Check $`. To use SMS, it must be set to `SMS Auth $` and you must add phone number information to the `smsAuthentication` node.|
    | iDCheckInformationInput | No | IdCheckInformationInput | This complex element contains input information related to a recipient ID check. It can include the following information.<br/><br/>*addressInformationInput*: Used to set recipient address information and consists of:<br/><br/>*addressInformation*: consists of six elements, with street2 and zipPlus4 being optional. The elements are: street1, street2, city, state, zip, zipPlus4\. The maximum number of characters in each element are: street1/street2 = 150 characters, city = 50 characters, state = 2 characters, and zip/zipPlus4 = 20 characters.<br/><br/>displayLevelCode: Specifies the display level for the recipient. Values are: ReadOnly, Editable, or DoNotDisplay.<br/><br/>*receiveInResponse*: A Boolean element that specifies if the information needs to be returned in the response.<br/><br/>*dobInformationInput*: Used to set recipient date of birth information and consists of:<br/><br/>*dateOfBirth*: Specifies the recipient's date, month and year of birth.<br/><br/>*displayLevelCode*: Specifies the display level for the recipient. Values are: ReadOnly, Editable, or DoNotDisplay.<br/><br/>*receiveInResponse*: A Boolean element that specifies if the information needs to be returned in the response.<br/><br/>*ssn4InformationInput*: Used to set the last four digits of the recipient's SSN information and consists of:<br/><br/>*ssn4*: Specifies the last four digits of the recipient's SSN.<br/><br/>*displayLevelCode*: Specifies the display level for the recipient. Values are: ReadOnly, Editable, or DoNotDisplay.<br/><br/>*receiveInResponse*: A Boolean element that specifies if the information needs to be returned in the response.<br/><br/>*ssn9InformationInput*: Used to set the recipient's SSN information. Note that the ssn9 information can never be returned in the response. The ssn9 input consists of:<br/><br/><br/><br/>*ssn9*: Specifies the recipient's SSN.<br/><br/>*displayLevelCode*: Specifies the display level for the recipient. Values are: ReadOnly, Editable, or DoNotDisplay. |
    | inheritEmailNotificationConfiguration | No | Boolean | Optional element. If true and the envelope recipient creates a DocuSign account after signing, the Manage Account Email Notification settings are used as the default settings for the recipient's account. |
    | note | No | String | A note that is unique to this recipient. This note is sent to the recipient via the signing email. The note displays in the signing UI near the upper left corner of the document on the signing screen.<br/>Maximum Length: 1000 characters. |
    | phoneAuthentication | No | RecipientPhoneAuthentication | Optional element. Contains the elements: <br/><br/> *recipMayProvideNumber*:Boolean. When set to **true** thenrecipient can use whatever phone number they choose to.<br/><br/> *senderProvidedNumbers*: ArrayOfString. A list of phone numbers the recipient can use. <br/><br/>*recordVoicePrint* - Reserved for DocuSign. <br/><br/>*validateRecipProvidedNumber* - Reserved for DocuSign. | |
    | recipientAttachment | No | Attachment | Reserved for DocuSign. |
    | recipientId | No | String | Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document. |
    | requireIdLookup | No | Boolean | When set to **true**, the recipient is required to use the specified ID check method (including Phone and SMS authentication) to validate their identity. |
    | roleName | No* | String | Optional element. Specifies the role name associated with the recipient.<br/><br/>This is required when working with template recipients. |
    | routingOrder | Yes | String | This element specifies the routing order of the recipient in the envelope. |
    | smsAuthentication | No | senderProvidedNumbers | Optional element. Contains the element:<br/><br/>*senderProvidedNumbers*: Array that contains a list of phone numbers the recipient can use for SMS text authentication. |
    | socialAuthentications | No | Boolean | Lists the social ID type that can be used for recipient authentication. |
    | templateAccessCodeRequired | No | Boolean | Optional element. Used only when working with template recipients. When set to **true** and the `TemplateLocked` parameter is set to **true**, the sender must enter an access code. |
    | templateLocked | No | Boolean | Optional element. Used only when working with template recipients. When set to **true**, the sender cannot change any attributes of the recipient. |
    | templateRequired | No | Boolean | Optional element. Used only when working with template recipients. When set to **true**,  the sender may not remove the recipient. |

    <br>

    **JSON layout**

    ```
    "email": "email.name@company.com",
      "name": "recipient name",
      "accessCode": "",
      "addAccessCodeToEmail": false,
      "clientUserIs": null,
      "embeddedRecipientStartURL": "string",
      "customFields": {
        "sample string 1",
        "sample string 2"
      },
      "emailNotification"{
        "emailBody":"email text",
        "emailSubject":"Subject text",
        "supportedLanguage":"en",
      },
      "excludedDocuments": ["2", "4"],
      "idCheckConfigurationName": null,
      "idCheckInformationInput": {
        "addressInformationInput": {
          "addressInformation": {
            "street1": "sample string 1",
            "street2": "sample string 2",
            "city": "sample string 3",
            "state": "sample string 4",
            "zip": "sample string 5",
            "zipPlus4": "sample string 6"
          },
          "displayLevelCode": "sample string 1",
          "receiveInResponse": "sample string 2"
        },
        "dobInformationInput": {
          "dateOfBirth": "sample string 1",
          "displayLevelCode": "sample string 2",
          "receiveInResponse": "sample string 3"
        },
        "ssn4InformationInput": {
          "ssn4": "sample string 1",
          "displayLevelCode": "sample string 2",
          "receiveInResponse": "sample string 3"
        },
        "ssn9InformationInput": {
          "ssn9": "sample string 1",
          "displayLevelCode": "sample string 2"
        }
      },
      "inheritEmailNotificationConfiguration": false,
      "note": "",
      "phoneAuthentication": {
        "recipMayProvideNumber": "sample string 1",
        "validateRecipProvidedNumber": "sample string 2",
        "recordVoicePrint": "sample string 3",
        "senderProvidedNumbers": [
          "sample string 1",
          "sample string 2"
        ]
      },
      "recipientAttachment": null,
      "recipientCaptiveInfo": null,
      "recipientId": "1",
      "requireIdLookup": false,
      "roleName": "",
      "routingOrder": 1,
      "smsAuthentication": {
        "senderProvidedNumbers":[
          "sample string 1",
          "sample string 2"
        ]
      },
      "socialAuthentications": null,
      "templateAccessCodeRequired": false,
      "templateLocked": false,
      "templateRequired": false,
    ...
    ```


    ## Agents Recipient

    An agent recipient can add name and email information for recipients that appear after the agent in routing order.

    In addition to the [core parameters](#core-recipient-parameters),
    this type adds the following parameters.

    <br>

    | Name | Required | Schema Type | Description |
    | :--- | :--- | :--- | :--- |
    | canEditRecipientEmails | No | Boolean | Optional element. When set to **true**, the Agents Recipient associated with this Recipient can change the Recipient's pre-populated Email address. This element is only active if enabled for the account. |
    | canEditRecipientNames | No | Boolean | Optional element. When set to **true**, the Agents Recipient associated with this recipient can change the recipient's pre-populated name (`UserName`). This element is only active if enabled for the account. |

    <br>

    **JSON layout**

    ```
    "agents": [{
     <core parameters>
      "canEditRecipientEmails": false,
      "canEditRecipientNames": false
    }],
    ```


    ## Carbon Copies Recipient

    Carbon copy recipients get a copy of the envelope but don't need to sign, initial, date or add information to any of the documents. This type of recipient can be used in any routing order. Carbon copy recipients receive their copy of the envelope when the envelope reaches the recipient's order in the process flow and when the envelope is completed.

    This recipient type uses only the [core parameters](#core-recipient-parameters).

    **JSON layout**

    ```
    "carbonCopies": [{
     <core parameters>
    ```


    ## Certified Deliveries Recipient

    Certified delivery recipients must receive the completed documents for the envelope to be completed. However, they don't need to sign, initial, date or add information to any of the documents.

    This recipient type uses only the [core parameters](#core-recipient-parameters).

    **JSON layout**

    ```
    "certifiedDeliveries": [{
    <core parameters>
    }],
    ```

    ## Editors Recipient

    Editors have the same management and access rights for the envelope as the sender. They can make changes to the envelope as if they were using the Advanced Correct feature. This recipient can add name and email information, add or change the routing order and set authentication options for the remaining recipients. Additionally, this recipient can edit signature/initial tabs and data fields for the remaining recipients. The recipient must have a DocuSign account to be an editor.

    In addition to the [core parameters](#core-recipient-parameters),
    this type adds the following parameters.

    <br>

    | Name | Required | Schema Type | Description |
    | :--- | :--- | :--- | :--- |
    | canEditRecipientEmails | No | Boolean | Optional element. When set to **true**, the Editors Recipient associated with this Recipient can change the Recipient's pre-populated Email address. This element is only active if enabled for the account. |
    | canEditRecipientNames | No | Boolean | Optional element. When set to **true**, the Editors Recipient associated with this recipient can change the recipient's pre-populated name (`UserName`). This element is only active if enabled for the account. |

    <br>


    **JSON layout**

    ```
    "editors": [{
     <core parameters>
      "canEditRecipientEmails": false,
      "canEditRecipientNames": false
    }],
    ```


    ## In-Person Signers Recipient

    An in-person recipient is a DocuSign user,
    acting as a Signing Host,
    who is in the same physical location as the signer.

    In addition to the [core parameters](#core-recipient-parameters),
    this type adds the following parameters.

    The following restrictions apply
    to using electronic notary when sending documents:

    * Authentication methods are allowed for the signer but not the notary.
    * The Sign On Paper, Document Markup, Field Markup and Change Signer options cannot be used for the documents.
    * Tabs may be assigned to the signer, but cannot be assigned to the notary.

    Refer to [eNotary Resources][enotary-resources]
    in the DocuSign Support Center for more information
    about how the eNotary feature works.

    <br>

    | Name                | Required                                                          | Schema Type | Description                                                                                                                                                                                                                                                                                                                            |
    | :------------------ | :---------------------------------------------------------------- | :---------- | :------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |
    | inPersonSigningType | No                                                                | String      | Specifies whether the envelope uses the eNotary feature. The accepted values are:<ul markdown=1><li>`inPersonSigner` The envelope uses the normal in-person signing flow.</li><li>`notary`: The envelope uses the eNotary signing flow.</li></ul>                                                                                      |
    | notaryHost          | Yes, when `inPersonSigningType` is `notary`                       | NotaryHost  | Sets the information for the notary host for the notary in person signing flow. The following information is required: <ul markdown=1> <li>`recipientId`: A unique ID number for the notary signing host. </li> <li>`name`: Specifies the notary's full legal name.</li> <li>`email`: Specifies the notary's email address. </li> </ul>|
    | autoNavigation      | No                                                                | Boolean     | Specifies whether auto navigation is set for the recipient.                                                                                                                                                                                                                                                                            |
    | defaultRecipient    | No                                                                | Boolean     | When set to **true**, this is the default recipient for the envelope. This option is used when creating an envelope from a template.                                                                                                                                                                                                   |
    | hostName            | Yes, when `inPersonSigningType` is `inPersonSigner`               | String      | The name of the signing host. This is the DocuSign user that is hosting the in-person signing session.                                                                                                                                                                                                                                 |
    | hostEmail           | Yes, when `inPersonSigningType` is `inPersonSigner`               | String      | The email address of the signing host. This is the DocuSign user that is hosting the in-person signing session.                                                                                                                                                                                                                        |
    | signerName          | Yes, when `inPersonSigningType` is `inPersonSigner`               | String      | The in-person signer's full legal name.                                                                                                                                                                                                                                                                                                |
    | signerEmail         | No, but valid only when `inPersonSigningType` is `inPersonSigner` | String      | The in-person signer's email address.                                                                                                                                                                                                                                                                                                  |
    | name                | Yes, when `inPersonSigningType` is `notary`                       | String      | The full legal name of the signer in an eNotary flow.                                                                                                                                                                                                                                                                                  |
    | email               | Yes, when `inPersonSigningType` is `notary`                       | String      | The signer's email address in an eNotary flow.                                                                                                                                                                                                                                                                                         |
    | signatureInfo       | No                                                                | String      | Optional element only used with recipient types In Person Signers and Signers.<br/><br/>Allows the sender to pre-specify the signature name, signature initials, and signature font used in the signature stamp for the recipient.                                                                                                     |
    | signInEachLocation  | No                                                                | Boolean     | When set to **true** and the feature is enabled in the sender's account, the signing recipient is required to draw signatures and initials at each signature/initial tab (instead of adopting a signature/initial style or only drawing a signature/initial once).                                                                     |
    | tabs                | No                                                                | Tab         | Optional element only used with recipient types In Person Signers and Signers.<br/><br/>Specifies the Tabs associated with the recipient. See the [EnvelopeRecipientTabs resource][envelopeRecipientTabsResource] for more information about tabs.                                                                                     |

    <br>

    **JSON layout**

    ```
    "inPersonSigners": [{
      "hostEmail": "signing.host@company.com",
      "hostName": "Mike Host",
     <core parameters>
      "autoNavigation": false,
      "defaultRecipient": false,
      "signInEachLocation": false,
      "signatureInfo": null,
      "signerEmail": "inperson.signer@company.com",
      "signerName": "Isaac Inperson",
      "email": "notary.signer@example.com",
      "name": "Notary Signer"
      "tabs": {
        "approveTabs": null,
        "checkboxTabs": null,
        "companyTabs": null,
        "dateSignedTabs": null,
        "dateTabs": null,
        "declineTabs": null,
        "emailTabs": null,
        "envelopeIdTabs": null,
        "fullNameTabs": null,
        "initialHereTabs": null,
        "listTabs": null,
        "noteTabs": null,
        "numberTabs": null,
        "radioGroupTabs": null,
        "signHereTabs": [{
        "signerAttachmentTabs": null,
        "ssnTabs": null,
        "textTabs": null,
        "titleTabs": null,
        "zipTabs": null
      }
      "inPersonSigningType": "notary",
      "notaryHost": {
        "email": "notary@example.com",
        "name": "Natalie Notary",
        "recipientId": "string"
      }
    }],
    ```


    ## Intermediaries Recipient

    An intermediary is a recipient who can, but is not required to, add name and email information for recipients at the same or subsequent level in the routing order, unless subsequent agents, editors or intermediaries are added.

    In addition to the [core parameters](#core-recipient-parameters),
    this type adds the following parameters.

    <br>

    | Name | Required | Schema Type | Description |
    | :--- | :--- | :--- | :--- |
    | canEditRecipientEmails | No | Boolean | Optional element. When set to **true**, the Agents Recipient associated with this Recipient can change the Recipient's pre-populated Email address. This element is only active if enabled for the account. |
    | canEditRecipientNames | No | Boolean | Optional element. When set to **true**, the Agents Recipient associated with this recipient can change the recipient's pre-populated name (`UserName`). This element is only active if enabled for the account. |

    <br>

    **JSON layout**

    ```
    "intermediaries": [{
    <core parameters>
      "canEditRecipientEmails": false,
      "canEditRecipientNames": false
    }],
    ```



    ## Seals Recipient

    An electronic seal recipient is not a natural but a legal person. Electronic Seals can be used by organizations and governments to show evidence of origin and integrity of documents.
    Even though electronic seals can be represented by a tab in a document, they do not require user interaction and apply automatically in the order specified by the sender. The sender is therefore the person authorizing usage of the electronic seal in the flow.
    Electronic seal recipients rely on a subset of core properties. They also add a new `recipientSignatureProviders` parameter.


    <br>


    | Name&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; | Required&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; | Schema Type&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; | Description&nbsp;&nbsp;&nbsp;&nbsp; |
    | :--- | :--- | :--- | :--- |
    | recipientId| Yes | String | Indicates the unique ID of the applied electronic seal.<br/>|
    | routingOrder| No (default: 1) | String | Specifies the routing order of the electronic seal in the envelope. <br />The routing order assigned to your electronic seal cannot be shared with another recipient. It is recommended that you set a routing order for your electronic seals.. |
    | recipientSignatureProviders| Yes | String | Indicates which electronic seal to apply on documents when creating an envelope. |

    By default, Electronic Seals apply on all documents in an envelope. However, the sealDocumentsWithTabsOnly property (see recipientSignatureProvider) allows you to seal only documents that have signHere tabs set for the Electronic Seal recipients.



    **JSON layout (Apply Electronic Seals on all documents)**
    ```
    {
            ....

            "recipients": {
              "seals": [            {
                  "recipientId": "10",
                  "routingOrder" : 2,
                  "recipientSignatureProviders": [{
                      "sealName": "ed8f186c-3b12-45cb-9eb3-c8c33dc4f6b0",
                      "sealDocumentsWithTabsOnly": "false"
                    }]
                }]
            },
            "documents": [
                {
                    "documentId": "55",
                    "name": " ACME Contract",
                    "fileExtension": "pdf",
                    "documentBase64": "DOC_IN_BASE64"
                }
            ]
    }
    ```



    **JSON layout (Apply Electronic Seals on specific documents)**
    ```
    {
            ....

            "recipients": {
              "seals": [{
                  "recipientId": "10",
                  "routingOrder" : 2,
                  "recipientSignatureProviders": [{
                      "sealName": "ed8f186c-3b12-45cb-9eb3-c8c33dc4f6b0",
                      "sealDocumentsWithTabsOnly": "true"
                    }],
                   "tabs": {
                        "signHereTabs": [{
                                "documentId": "55",
                                "recipientId": "10",
                                "pageNumber": "1",
                                "xPosition": "272",
                                "yPosition": "98",
                            }]
                    }
                }]
            },
            "documents": [{
                    "documentId": "55",
                    "name": " ACME Contract",
                    "fileExtension": "pdf",
                    "documentBase64": "DOC_EN_BASE64"
                }]
    }
    ```




    ## Signers Recipient

    A signer is a recipient who must sign, initial, date, or add data to form fields on the documents in the envelope.

    In addition to the [core parameters](#core-recipient-parameters),
    this type adds the following parameters.

    <br>


    | Name | Required | Schema Type | Description |
    | :--- | :--- | :--- | :--- |
    | autoNavigation | No | Boolean | Specifies whether auto navigation is set for the recipient.|
    | defaultRecipient | No | Boolean | When set to **true**, this is the default recipient for the envelope. This option is used with the CreateEnvelopeFromTemplatesAndForms method. |
    | signInEachLocation | No | Boolean | When set to **true** and the feature is enabled in the sender's account, the signing recipient is required to draw signatures and initials at each signature/initial tab (instead of adopting a signature/initial style or only drawing a signature/initial once). |
    | signatureInfo | No | String | Optional element only used with recipient types In Person Signers and Signers.<br/><br/>Allows the sender to pre-specify the signature name, signature initials, and signature font used in the signature stamp for the recipient. |
    | signerEmail | No | String | Optional element. The email address for an InPersonSigner recipient Type.<br/>Maximum Length: 100 characters. |
    | signerName | Yes | String | Required element with recipient type In Person Signers.<br/>Maximum Length: 100 characters.<br/><br/>The full legal name of a signer for the envelope. |
    | tabs | No | Tab | Optional element only used with recipient types In Person Signers and Signers.<br/><br/>Specifies the Tabs associated with the recipient. See the the [EnvelopeTabs resource][envelopeTabsResource]  for more information about tabs. |
    | deliveryMethod | No | String | Reserved for DocuSign.|
    | deliveredDateTime | No | DateTime | Reserved for DocuSign. |
    | signedDateTime | No | DateTime | Reserved for DocuSign. |
    | offlineAttributes | No | &nbsp; | Reserved for DocuSign.|

    <br>

    **JSON layout**

    ```
    "Signers": [{
    <core paramters>
      "autoNavigation": false,
      "defaultRecipient": false,
      "signInEachLocation": false,
      "signatureInfo": null,
      "tabs": {
        "approveTabs": null,
        "checkboxTabs": null,
        "companyTabs": null,
        "dateSignedTabs": null,
        "dateTabs": null,
        "declineTabs": null,
        "emailTabs": null,
        "envelopeIdTabs": null,
        "fullNameTabs": null,
        "initialHereTabs": null,
        "listTabs": null,
        "noteTabs": null,
        "numberTabs": null,
        "radioGroupTabs": null,
        "signHereTabs": [{
        "signerAttachmentTabs": null,
        "ssnTabs": null,
        "textTabs": null,
        "titleTabs": null,
        "zipTabs": null
      }
      "deliveryMethod":"",
      "deliveredDateTime":"String Content",
      "signedDateTime":"String Content",
      "offlineAttributes":{
        "deviceName":"String Content",
        "deviceModel":"String Content",
        "gpsLatitude":"String Content",
        "gpsLongitude":"String Content",
        "accountEsignId":"String Content"
      }
    }],
    ```

    [envelopeRecipientTabsResource]:  https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/
    [enotary-resources]:              https://support.docusign.com/en/guides/ndse-user-guide-enotary-resources

- name: EnvelopeRecipientTabs
  description: "<!-- resources aren't rendered the same way\n     as other pages.\
    \ This is a little hack to\n     make the headings work better -->\n<style>\n\
    h1, h2, h3 {\n  margin-top: 1em;\n}\n</style>\n\nThe EnvelopeRecipientTabs resource\
    \ provides methods that let you\nadd,\nupdate,\nand delete tabs\nfrom an envelope.\n\
    Tabs are associated with a specific recipient\nin an envelope\nand are only used\
    \ by the recipient types\nIn Person Signers and Signers.\n\n<!-- START doctoc\
    \ generated TOC please keep comment here to allow auto update -->\n<!-- DON'T\
    \ EDIT THIS SECTION, INSTEAD RE-RUN doctoc TO UPDATE -->\n**On this page**\n\n\
    - [Tab Types](#tab-types)\n- [Sign Here Tab Alignment](#sign-here-tab-alignment)\n\
    - [View Tab](#view-tab)\n- [Requesting Payments](#requesting-payments)\n- [Using\
    \ Custom Tabs in Envelopes and Templates](#using-custom-tabs-in-envelopes-and-templates)\n\
    - [Anchoring Tabs](#anchoring-tabs)\n- [Automatically Populating Tabs](#automatically-populating-tabs)\n\
    \n<!-- END doctoc generated TOC please keep comment here to allow auto update\
    \ -->\n\n\n## Tab Types\n\nSome tabs enable values to be entered by the signer.\
    \ Those tabs' values can be preset either through the web browser or via the API.\
    \ Other tab types use information that is already recognized by the DocuSign platform.\
    \ These tabs cannot have their value updated on a per-tab basis by the API or\
    \ via the browser. In some cases, the info might be settable using a different\
    \ technique. For example, the Full name tab uses the signer's name, which is set\
    \ elsewhere in the request.\n\nHere is the list of tabs and whether you can or\
    \ cannot set their values in the tab definition:\n\n<br>\n\n| Tab Type       \
    \                                            | Description                   \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                              |\n| :---------------------------------------------------------\
    \ |
    \ |\n| Approve ([`approve`][approve])                             | Allows the\
    \ recipient to approve documents without placing a signature or initials on the\
    \ document. If the recipient clicks the tab during the signing process, the recipient\
    \ is considered to have signed the document. No information is shown on the document\
    \ of the approval, but it is recorded as a signature in the envelope history.\
    \ This value **can't** be set.                                               \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                 |\n| Checkbox ([`checkbox`][checkbox])                     \
    \     | Allows the recipient to select a yes/no (on/off) option. This value can\
    \ be set.                                                                    \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                |\n| Company ([`company`][company])\
    \                             | Displays the recipient's company name. This value\
    \ **can't** be set.                                                          \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                       |\n| Date\
    \ Signed ([`dateSigned`][dateSigned])                   | Displays the date that\
    \ the recipient signed the document. This value **can't** be set.            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                      |\n| Date ([`date`][date])                            \
    \          | Allows the recipient to enter a date. Date tabs are one-line fields\
    \ that allow date information to be entered in any format. The tooltip for this\
    \ tab recommends entering the date as MM/DD/YYYY, but this is not enforced. The\
    \ format entered by the signer is retained. If you need a particular date format\
    \ enforced, DocuSign recommends using a Text tab with a validation pattern and\
    \ a validation message to enforce the format. This value can be set.         \
    \                                                                            \
    \                                                                            \
    \                                       |\n| Decline ([`decline`][decline])  \
    \                           | Allows the recipient the option of declining an\
    \ envelope. If the recipient clicks the tab during the signing process, the envelope\
    \ is voided. This value **can't** be set.                                    \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                   |\n| Email\
    \ Address ([`emailAddress`][emailAddress])             | Displays the recipient's\
    \ email as entered in the recipient information. This value **can't** be set.\
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                    |\n| Email ([`email`][email])                           \
    \        | Allows the recipient to enter an email address. This is a one-line\
    \ field that checks that a valid email address is entered. It uses the same parameters\
    \ as a Text tab, with the validation message and pattern set for email information.<br><br>When\
    \ getting information that includes this tab type, the original value of the tab\
    \ when the associated envelope was sent is included in the response. This value\
    \ be set.                                                                    \
    \                                                                            \
    \                                                                            \
    \            |\n| Envelope ID ([`envelopeId`][envelopeId])                   |\
    \ Displays the envelope ID. Recipients cannot enter or change the information\
    \ in this tab.  This value **can't** be set.                                 \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                             |\n| First Name ([`firstName`][firstName])\
    \                      | Displays the recipient's first name. This tab takes the\
    \ recipient's name as entered in the recipient information, splits it into sections\
    \ based on spaces and uses the first section as the first name. This value **can't**\
    \ be set.                                                                    \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                    |\n| Formula Tab ([`formulaTab`][formulaTab])\
    \                   | The value of a formula tab is calculated from the values\
    \ of other number or date tabs in the document. When the recipient completes the\
    \ underlying fields, the formula tab calculates and displays the result. This\
    \ value can be set.The `formula` property of the tab contains the references to\
    \ the underlying tabs. See [Calculated Fields][calculatedfields] in the DocuSign\
    \ Support Center to learn more about formulas. If a formula tab contains a `paymentDetails`\
    \ property, the tab is considered a payment item. See [Requesting Payments Along\
    \ with Signatures][paymentguide] in the DocuSign Support Center to learn more\
    \ about payments. |\n| Full Name ([`fullName`][fullName])                    \
    \     | Displays the recipient's full name. This value **can't** be set.     \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                    |\n| Initial Here ([`initialHere`][initialHere])\
    \                | Allows the recipient to initial the document. May be optional.\
    \ This value **can't** be set.                                               \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                           |\n| Last Name ([`lastName`][lastName])\
    \                         | Displays the recipient's last name. This tab takes\
    \ the recipient's name as entered in the recipient information, splits it into\
    \ sections based on spaces and uses the last section as the last name. This value\
    \ **can't** be set.                                                          \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                  |\n| List ([`list`][list])\
    \                                      | This tab offers a list of options to\
    \ choose from. The `listItems` property is used to specify the selectable options.\
    \ This value can be set,                                                     \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                          |\n\
    | Notarize ([`notarize`][notarize])                          | Place this tab\
    \ on a page to alert Notary recipients that they must take action. Only one notarize\
    \ tab can appear on a page. This value can be set.                           \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                  |\n| Note ([`note`][note])                                \
    \      | Displays additional information, in the form of a note, for the recipient.\
    \ This value can be set.                                                     \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                       |\n| Number ([`number`][number])     \
    \                           | Allows the recipient to enter numbers and decimal\
    \ (.) points. This value can be set.                                         \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                  |\n| Radio\
    \ Group ([`radioGroup`][radioGroup])                   | This group tab is used\
    \ to place radio buttons on a document. The `radios` property is used to add and\
    \ place the radio buttons associated with the group. Only one radio button can\
    \ be selected in a group. This value can be set.                             \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \            |\n| Sign Here ([`signHere`][signHere])                         |\
    \ Allows the recipient to sign a document. May be optional. This value **can't**\
    \ be set. <br/>**Note**: `signHere` tabs can also be used to add a visual representation\
    \ for  an electronic seal in a document.                                     \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                 |\n| Signer\
    \ Attachment ([`signerAttachment`][signerAttachment]) | Allows the recipient to\
    \ attach supporting documents to an envelope. This value **can't** be set.   \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                     |\n| SSN ([`ssn`][ssn])                                \
    \         | A one-line field that allows the recipient to enter a Social Security\
    \ Number. The SSN can be typed with or without dashes. It uses the same parameters\
    \ as a Text tab, with the validation message and pattern set for SSN information.\
    \  This value can be set.                                                    \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                   |\n| Text ([`text`][text])               \
    \                       | Allows the recipient to enter any type of text. This\
    \ value can be set.                                                          \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                              |\n| Title ([`title`][title])\
    \                                   | Displays the recipient's title. This value\
    \ **can't** be set.                                                          \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \  |\n| View ([`view`][view])                                      | The View\
    \ tab is used with the Approve tab to handle supplemental documents. This value\
    \ can be set.                                                                \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                  |\n| Zip ([`zip`][zip])                                   \
    \      | Allows the recipient to enter a ZIP code. The ZIP code can be five digits\
    \ or nine digits in the ZIP+4 format. The zip code can be typed with or without\
    \ dashes. It uses the same parameters as a Text tab, with the validation message\
    \ and pattern set for ZIP code information. This value can be set.           \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                    |\n\n\n[approve]:\t\t      https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/approve\n\
    [checkbox]:\t\t      https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/checkbox\n\
    [company]:\t\t      https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/company\n\
    [dateSigned]:\t\t    https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/dateSigned\n\
    [date]:\t\t          https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/date\n\
    [decline]:\t\t      https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/decline\n\
    [emailAddress]:     https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/emailAddress\n\
    [email]:\t\t        https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/email\n\
    [envelopeId]:\t    \thttps://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/envelopeId\n\
    [firstName]:\t    \thttps://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/firstName\n\
    [formulaTab]:\t    \thttps://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/formulaTab\n\
    [fullName]:\t\t      https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/fullName\n\
    [initialHere]:\t  \thttps://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/initialHere\n\
    [lastName]:\t\t      https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/lastName\n\
    [list]:\t           \thttps://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/list\n\
    [notarize]:         https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/notarize\n\
    [note]:\t\t          https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/note\n\
    [number]:\t\t        https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/number\n\
    [radioGroup]:\t\t    https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/radioGroup\n\
    [signerAttachment]: https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/signerAttachment\n\
    [signHere]:\t      \thttps://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/signHere\n\
    [ssn]:\t          \thttps://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/ssn\n\
    [text]:\t          \thttps://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/text\n\
    [title]:\t        \thttps://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/title\n\
    [view]:\t\t          https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/view\n\
    [zip]:\t          \thttps://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/zip\n\
    \n[calculatedfields]: https://support.docusign.com/en/guides/ndse-user-guide-calculated-fields\n\
    [paymentguide]:     https://support.docusign.com/en/guides/requesting-payments-along-with-signatures\n\
    \n\n## Sign Here Tab Alignment\n\nWhen you provide an x- and y-coordinate for\
    \ the\nsign here tab,\nthe tab appears 21 points *lower*\nthan the value you provide\
    \ for the y-coordinate.\nTo align the tab as expected,\nsubtract 21 from the expected\
    \ y-value.\n\n![Sign Here Tab Alignment](/img/signherealign.png)\n\n\n\n\n\n##\
    \ View Tab\n\nThe View tab is used on supplemental documents.\nTo learn more about\
    \ using the View tab with\nsupplemental documents, see\n[Using Supplemental Documents][usingsupdocs]\n\
    in the [Sending Documents][sendenvelopes] section of\nthe [Envelope: create][envelopecreate]\
    \ method.\n\n[sendenvelopes]:  https://developers.docusign.com/esign-rest-api/reference/Envelopes/Envelopes/create/#sending-envelopes\n\
    [usingsupdocs]:   https://developers.docusign.com/esign-rest-api/reference/Envelopes/Envelopes/create/#using-supplemental-documents\n\
    [envelopecreate]: https://developers.docusign.com/esign-rest-api/reference/Envelopes/Envelopes/create/\n\
    \n<br>\n\n| Name              | Required  | Type    | Description |\n| :---- \
    \            | :----     | :----   | :----       |\n| documentId        | Yes\
    \       | String  | The document ID number that the tab is placed on. This must\
    \ refer to an existing Document's ID attribute. |\n| pageNumber        | Yes \
    \      | String  | Must be set to 1. |\n| recipientId       | Yes       | String\
    \  | The recipient associated with the tab. Must refer to an existing recipient's\
    \ ID attribute. |\n| required          | No        | Boolean | If **true**, the\
    \ recipient is required to select the supplemental document View button during\
    \ signing. |\n| tabLabel          | No        | String  | The label used for the\
    \ tab.  If an empty string is provided for this, an empty sting is used. If no\
    \ value is provided, the tab type is used as the value. Maximum of 500 characters.\
    \ |\n| templateLocked    | No        | Boolean | Optional. Used only when working\
    \ with template tabs. If **true**, the attributes of the tab cannot be changed\
    \ by the sender. |\n| templateRequired  | No        | Boolean | Optional. Used\
    \ only when working with template tabs. If **true**, the tab cannot be removed\
    \ by the sender. |\n| xPosition         | Yes       | String  | Required, but\
    \ can be 0.  |\n| yPosition         | Yes       | String  | Required, but can\
    \ be 0. |\n\n\n## Requesting Payments\n\nThe Payments feature of the DocuSign\
    \ eSignature REST API\nlets you collect payments\nalong with signatures and other\
    \ information.\n\nTo send a request for payment\nand collect payments,\nyou need\
    \ a payment gateway account,\nwhich is the destination for the payments.\nCreate\
    \ a payment account\nwith a supported payment gateway,\nand then connect the payment\
    \ gateway account\nto your DocuSign account.\nTo learn how to connect a payment\
    \ gateway account\nto your DocuSign account\nsee [Managing Payment Gateways][paymentgateways]\n\
    in the DocuSign Support Center.\nYou must connect and manage payment gateway accounts\
    \ manually\nthrough the DocuSign Admin console\nand through your chosen payment\
    \ gateway.\nThere is no public API\nfor connecting payment gateway accounts\n\
    to DocuSign accounts\nor for managing payment gateway accounts.\n\nCurrently\n\
    [Stripe][stripe],\n[Braintree](https://www.braintreepayments.com/), and\n[Authorize.net](https://www.authorize.net/)\n\
    are the supported payment gateways.\n\n### How Payments Work\n\nTo make a request\
    \ for payment,\nuse a [`formulaTab`][formulatab]\nthat has a\n[`paymentDetails`][paymentdetails]\
    \ object.\nThis object includes\na list of [`paymentLineItem`][paymentlineitem]\
    \ objects.\nEach line item refers to a [`number`][numbertab] tab\nthat contains\
    \ the value of the each item.\nThe purpose of the line items\nis to transmit them\
    \ to the payment gateway\nas metadata, so that you can use the information\nin\
    \ the payment processor.\n\n**Note**: If the fileExtension parameter is not added\
    \ in an API call, only base64 converted pdf files will be accepted.\nAny attempt\
    \ to send a non pdf file without using fileExtension results in an error.\n\n\
    This is an example request for two books.\nEach book is specified in the `number`\
    \ tabs\nlabeled \"Hamlet\" and \"Tempest\".\nThe books are referenced as line\
    \ items\nby their tab labels\nwithin the `paymentDetails` object\nof a `formula`\
    \ tab.\nThe formula of the `formula` tab\nadd the values of the same two `number`\
    \ tabs.\n\n```json\n{\n  \"documents\": [\n    {\n      \"documentBase64\": \"\
    <base64-encoded PDF document>\",\n      \"documentId\": \"1\",\n      \"fileExtension\"\
    : \"pdf\",\n      \"name\": \"payment.pdf\"\n    }\n  ],\n  \"emailSubject\":\
    \ \"Order Some Books\",\n  \"recipients\": {\n    \"signers\": [\n      {\n  \
    \      \"email\": \"vreader@example.com\",\n        \"name\": \"Voracious Reader\"\
    ,\n        \"recipientId\": \"1\",\n        \"routingOrder\": \"1\",\n       \
    \ \"tabs\": {\n          . . .\n          \"numberTabs\": [\n            {\n \
    \             \"value\": \"10.00\",\n              \"width\": 78,\n          \
    \    \"required\": \"true\",\n              \"locked\": \"true\",\n          \
    \    \"tabLabel\": \"Hamlet\",\n              \"documentId\": \"1\",\n       \
    \       \"pageNumber\": \"1\",\n              \"xPosition\": \"323\",\n      \
    \        \"yPosition\": \"134\"\n            },\n            {\n             \
    \ \"value\": \"10.00\",\n              \"width\": 78,\n              \"required\"\
    : \"true\",\n              \"locked\": \"true\",\n              \"tabLabel\":\
    \ \"Tempest\",\n              \"documentId\": \"1\",\n              \"pageNumber\"\
    : \"1\",\n              \"xPosition\": \"323\",\n              \"yPosition\":\
    \ \"154\"\n            }\n          ],\n          \"formulaTabs\": [\n       \
    \     {\n              \"required\": \"true\",\n              \"formula\": \"\
    ([Hamlet] + [Tempest]) * 100\",\n              \"roundDecimalPlaces\": \"2\",\n\
    \              \"paymentDetails\": {\n                \"currencyCode\": \"USD\"\
    ,\n                \"lineItems\": [\n                  {\n                   \
    \ \"name\": \"Hamlet\",\n                    \"description\": \"The Danish Play\"\
    ,\n                    \"itemCode\": \"SHAK1\",\n                    \"amountReference\"\
    : \"Hamlet\"\n                  },\n                  {\n                    \"\
    name\": \"Othello\",\n                    \"description\": \"The one with Caliban\
    \ in it\",\n                    \"itemCode\": \"SHAK2\",\n                   \
    \ \"amountReference\": \"Tempest\"\n                  }\n                ],\n\
    \                \"gatewayAccountId\": \"e76668b4-53a9-4413-b551-a208d659e490\"\
    \n              },\n              \"tabLabel\": \"Payment1\",\n              \"\
    documentId\": \"1\",\n              \"pageNumber\": \"1\",\n              \"xPosition\"\
    : 300,\n              \"yPosition\": 200\n            }\n          ]\n       \
    \ }\n      }\n    ]\n  },\n  \"status\": \"sent\"\n}\n```\n\nUse the\n[EnvelopeRecipients:\
    \ list][enveloperecipientslist] method\nto check the status of a payment.\nWhen\
    \ the payment is successful,\nthe `status` property of\nthe [`paymentDetails`][paymentdetails]\
    \ object\nis `payment_complete`.\n\n```json\n{\n  \"signers\": [\n    {\n    \
    \  \"tabs\": {\n        . . .\n        \"numberTabs\": [\n          {\n      \
    \      \"value\": \"10.00\",\n            \"tabLabel\": \"Hamlet\",\n        \
    \    \"documentId\": \"1\",\n            \"recipientId\": \"1\",\n           \
    \ \"pageNumber\": \"1\",\n            \"xPosition\": \"323\",\n            \"\
    yPosition\": \"134\",\n          },\n          {\n            \"value\": \"10.00\"\
    ,\n            \"tabLabel\": \"Tempest\",\n            \"documentId\": \"1\",\n\
    \            \"recipientId\": \"1\",\n            \"pageNumber\": \"1\",\n   \
    \       }\n        ],\n        \"formulaTabs\": [\n          {\n            \"\
    formula\": \"([Hamlet] + [Tempest]) * 100\",\n            \"roundDecimalPlaces\"\
    : \"2\",\n            \"paymentDetails\": {\n              \"status\": \"payment_complete\"\
    ,\n              \"currencyCode\": \"USD\",\n              \"lineItems\": [\n\
    \                {\n                  \"name\": \"Hamlet\",\n                \
    \  \"description\": \"The Danish Play\",\n                  \"itemCode\": \"SHAK1\"\
    ,\n                  \"amountReference\": \"Hamlet\"\n                },\n   \
    \             {\n                  \"name\": \"Tempest\",\n                  \"\
    description\": \"The one with Caliban in it\",\n                  \"itemCode\"\
    : \"SHAK2\",\n                  \"amountReference\": \"Tempest\"\n           \
    \     }\n              ],\n              \"gatewayAccountId\": \"e76668b4-53a9-4413-b551-a208d659e490\"\
    \n            },\n            \"value\": \"20\",\n            \"required\": \"\
    true\",\n            \"locked\": \"false\",\n            \"tabLabel\": \"Payment1\"\
    ,\n            \"documentId\": \"1\",\n            \"recipientId\": \"1\",\n \
    \           \"pageNumber\": \"1\",\n          }\n        ]\n      },\n      \"\
    creationReason\": \"sender\",\n      \"email\": \"vreader@example.com\",\n   \
    \   \"name\": \"Voracious Reader\",\n      \"recipientId\": \"1\",\n      \"requireIdLookup\"\
    : \"false\",\n      \"status\": \"completed\",\n    }\n  ],\n  . . .\n}\n```\n\
    \n### Some Things to Keep in Mind About Payments\n\n* An envelope is not completed\
    \ until all payments are completed.\n\n* If a DocuSign account Administrator\n\
    \  deletes a payment gateway account connection\n  DocuSign cancels all in-process\
    \ envelopes\n  that reference the deleted payment gateway account.\n\n* If the\
    \ sender voids an envelope,\n  all payment authorizations are canceled.\n\n* If\
    \ a required recipient refuses to sign,\n  all authorized payments are canceled.\n\
    \n* If a required recipient's payment fails authorization,\n  DocuSign attempts\
    \ to recover\n  by sending the recipient\n  notification about the failed payment\
    \ authorization.\n  The recipient has the opportunity\n  to correct the payment\
    \ method information.\n\n* Each recipient's payment is authorized separately.\n\
    \  Accounts are charged and payment made\n  after all required tabs are completed,\n\
    \  and all payments in an envelope for all recipients are authorized.\n\n* Refunds\
    \ are not supported.\n  Conduct refunds or payment changes\n  with the payment\
    \ gateway separately from DocuSign.\n\n* At this time, DocuSign does not charge\
    \ a per-transaction fee.\n\n\n[enveloperecipientslist]: https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipients/list/\n\
    [formulatab]:             https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/formulaTab\n\
    [ISO4217]:                https://en.wikipedia.org/wiki/ISO_4217\n[numbertab]:\
    \              https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/number\n\
    [paymentgateways]:        https://support.docusign.com/en/guides/managing-payment-gateways\n\
    [paymentguide]:           https://support.docusign.com/en/guides/requesting-payments-along-with-signatures\n\
    [paymentlineitem]:        https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/paymentLineItem\n\
    [paymentdetails]:         https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/paymentDetails\n\
    [stripe]:                 https://stripe.com/\n\n\n## Using Custom Tabs in Envelopes\
    \ and Templates\n\nCustom Tabs can be added to envelopes and templates\nby setting\
    \ the `customTabId` property\nwhen creating an envelope or template recipient\n\
    or when adding a new tab for an existing recipient.\nThe custom tab must be added\
    \ as the correct tab type.\nFor example if the custom tab type is text, it cannot\
    \ be used as a number tab.\n\nWhen the `customTabId` property is set,\nthe new\
    \ tab inherits all the custom tab properties.\nRequired information that is not\
    \ included in the custom tab,\nsuch as document ID and page ID, must be included\
    \ when adding the tab.\nIf the custom tab does not have anchor settings, the X\
    \ and Y positions must be included.\n\nAfter the tab is created,\nit is treated\
    \ as any other tab for updating or deleting.\n\n## Anchoring Tabs\n\nThe tab anchoring\
    \ option\nallows you to send documents for signature\nthat do not have a fixed\
    \ layout or format.\nIn these documents you might not know\nthe absolute location\
    \ of the tabs\nwhen you design your API client application because the tabs must\
    \ move with text.\nAs an alternative to sending X and Y coordinates for tabs,\n\
    the DocuSign Service can derive an anchor location for the tab\nby correlating\
    \ anchor information to data within the document.\n\nWhen the DocuSign Service\
    \ receives a request that contains tabs\nwith anchor information,\nit searches\
    \ the document for instances of the `anchorString` property.\nWhen found,\nit\
    \ places a tab of the specified type for the designated recipient.\nTab positions\
    \ are established by setting offsets for the tab.\n\nWhen you apply tabs to the\
    \ document,\nDocuSign does not remove or replace the text in the `anchorString`\
    \ property. You can hide codified anchors by using the same font color as the\
    \ background of the document. So the anchor can be used by DocuSign processes\
    \ and it will not be visible on the document.\n\nTo use an anchoring option:\n\
    \n1. Identify the location in the document by text string. You can use a pre-existing\
    \ text string or add a new one.\nFor best performance DocuSign recommends using\
    \ single word anchor strings when possible, especially when there are a large\
    \ number of pages in the envelope.\nFor example, you might want to add a Sign\
    \ Here tab to the \"Borrower's Signature\" lines in a document, but that phrase\
    \ might occur in places in the document where you don't want to tab to appear.\
    \ In this case, you could add the text \"BorrowerSignHere\" in white font color\
    \ (so that isn't visible in the document) to all the places you want Sign Here\
    \ tabs to appear and use \"BorrowerSignHere\" as the anchor string.\n1. Reference\
    \ the anchor through the `anchorString` property of the tab.\n1. Determine the\
    \ offset from the anchor string location to where the tab should be placed.\n\n\
    Setting a positive value in the `anchorXOffset` property moves the tab right on\
    \ the page and positive values in the  `anchorYoffset` prove moves the tab down\
    \ the page. The `anchorUnits` property specifies the units used for the offsets.\n\
    For Sign Here and Initial Here tabs the bottom-left of the anchor string is equivalent\
    \ to position (0,0), and the bottom-left of the tab graphic is placed relative\
    \ to that.\nFor all other tabs the bottom-left of the anchor string is equivalent\
    \ to position (0,0), and the top-left of the tab graphic is placed relative to\
    \ that.\nDocuSign does not currently provide tools to derive the offset values.\
    \ Determination of the proper offset will likely require some trial-and-error.\n\
    \n### Rules for working with anchor tags\n\nWhen anchor tabs are used, all documents\
    \ in the envelope are searched for the `anchorString` property.\n\n* You set the\
    \ text of the anchor string in the `anchorString` property. DocuSign tabs are\
    \ created for each instance of the `anchorString` property within the document,\
    \ so special care must be taken to establish unique anchor strings that do not\
    \ result in unintentional tabs.\n* You cannot use the same anchored tab for different\
    \ recipients for the same document.\n* The DocuSign system cannot search for text\
    \ that is embedded in an image when checking for anchor strings.\n* X or Y offsets\
    \ supplied for a tab apply to all instances of the tab in the document. To use\
    \ different offsets at different locations in the document for the same recipient,\
    \ create multiple, unique anchor tabs.\n* If the Y offset value of an anchor string\
    \ would force a tab outside of the page boundaries, the tag is placed at the page\
    \ boundary. If the X offset value places a tab outside of the page boundaries,\
    \ the error message `Invalid_User_Offset` is sent. The error message includes\
    \ the X offset that resulted in the error.\n* The system does not support an anchor\
    \ string embedded in the form of a PDF X-object in the document.\n* The system\
    \ does not re-flow the text that surrounds the anchor tabs. It is the responsibility\
    \ of the document author to provide sufficient white space to contain the potential\
    \ width of the ultimate tab value.\n\n### Tips and Tricks\n\nThe following are\
    \ tips for effective use of anchor tags:\n* In order to avoid unintentional conflicts\
    \ between text contained in an `anchorString` property and the text that naturally\
    \ exists in documents, establish a codified syntax for the anchor string text\
    \ that is unlikely to appear elsewhere in a document.\n* Develop an extensible\
    \ and consistent syntax that can be used across multiple document types.\n* Especially\
    \ for documents that have variable numbers of tabs or signers, author the source\
    \ document to include hidden anchor tabs for all potential signers/permutations.\
    \ Then, control the tabs that are actually placed by including/excluding the anchor\
    \ tabs in the request. This approach allows a single document to be used for all\
    \ use cases instead of maintaining separate documents for each scenario.\n\n##\
    \ Automatically Populating Tabs\n\nIf you want similar tab types\nto automatically\
    \ populate with the same data,\nyou must follow these guidelines:\n\n* Each `tabLabel`\
    \ entry must have the characters\n  `\\\\*` in front of the label.\n  If you omit\
    \ the `\\\\*` prefix,\n  only the first occurrence of the tab is populated.\n\n\
    \  When automatically populating tabs,\n  the `tabLabel` must not contain any\
    \ spaces.\n  In the JSON example below,\n  the Text tabs  properties `StudentLastName`\
    \ and `StudentFirstName`\n  will be auto-populated as specified (\"Doe\" and \"\
    John\")\n  each place they appear throughout the envelope.\n\n  ```\n  \"tabs\"\
    : {\n    \"textTabs\": [\n    {\n      \"tabLabel\": \"\\\\*StudentLastName\"\
    ,\n      \"value\": \"Doe\"\n    },\n    {\n      \"tabLabel\": \"\\\\*StudentFirstName\"\
    ,\n      \"value\": \"John\"\n    }]\n  }\n  ```\n\n* Each occurrence of the tab\
    \ must have identical properties.\n\n  For example, suppose there are two Text\
    \ tabs in a document,\n  each with `tabLabel` set to `Name`.\n  If one tab has\
    \ the `bold` property set to **true**,\n  and the other has the `bold` property\
    \ set to **false**,\n  only the first one will be populated.\n  In order to automatically\
    \ populate both occurrences\n  of the `Name` Text tabs,\n  the `bold` property\
    \ must be set to the same value for both tabs.\n"
- name: EnvelopeDocumentTabs
  description: The EnvelopeDocumentTabs resource provides methods that allow you to
    manage various tabs in envelopes. For a complete list of options see the following
    Properties section.
- name: TemplateDocumentTabs
  description: ""
- name: EnvelopeViews
  description: "The EnvelopeViews provides methods that return URLs that you can embed\
    \ into your application to provide access to the DocuSign UI.\n\nThe following\
    \ views are available:\n\n* Console View - The authentication view of the DocuSign\
    \ UI.\n* Correct View - The correction view of the DocuSign UI.\n* Edit View -\
    \ The editing view of the DocuSign UI. \n###### Note: This provides the same functionality\
    \ as the sender view.\n* Recipient View -  The view the recipient sees in the\
    \ DocuSign UI.\n* Sender View - The sending view of the DocuSign UI."
- name: AccountSealProviders
  description: ""
- name: Accounts
  description: "The Accounts resource provides methods that allow you to create, delete,\
    \ and manage your accounts."
- name: AccountSignatureProviders
  description: This resource provides information on the Standards Based Signature
    providers that have been provisioned for this account.
- name: Authentication
  description: |
    **Note:**  This information is provided for legacy reference only. Please see our supported forms of authentication referenced below and use our [REST API Authentication Guides](https://developers.docusign.com/esign-rest-api/guides/authentication) for more information.

    The Authentication resource provides access to methods that allow you to authenticate user credentials and change a user's password.

    The methods in this resource are suitable
    only for [service integrations](https://developers.docusign.com/esign-rest-api/guides/common-terms)
    that use [Legacy Header Authentication](https://developers.docusign.com/esign-rest-api/guides/authentication/legacy).
    For authentication methods for
    [user applications](https://developers.docusign.com/esign-rest-api/guides/common-terms)
    and to learn more about
    DocuSign authentication
    see [Authentication Overview](https://developers.docusign.com/esign-rest-api/guides/authentication).

    When accessing the API resources
    and Legacy Header Authentication,
    the GET [Authentication:login method](https://developers.docusign.com/esign-rest-api/reference/Authentication/Authentication/login) allows you to determine whether a user is authenticated and provides the information you will need to make subsequent API requests.
- name: UserSocialAccountLogins
  description: 'The UserSocialAccountLogins resource provides methods that allow you
    to manage the social login accounts for a user.  '
- name: BillingPlans
  description: "The Billing resource provides methods that allow you to manage the\
    \ billing plans,associated with an account."
- name: Invoices
  description: The Invoices resource provides methods that allow you to manage the
    invoices for an account.
- name: Payments
  description: |-
    The Payments resource provides methods that allow you to manage payments for an account.

    These calls can only be used by users with account administrator privileges.
- name: CloudStorage
  description: The CloudStorage resource provides methods that allow you to list files
    stored on your cloud storage provider.
- name: CloudStorageProviders
  description: |-
    The CloudStorageProviders resource provides methods that allow you to manage the cloud storage providers associate with an account.

    The following providers are supported:

    * Google Drive
    * Dropbox
    * Box
    * Evernote
    * OneDrive

    To use cloud storage files, you must first give DocuSign access to your cloud storage provider. You can disconnect authorized a cloud storage provider at any time.
- name: ConnectConfigurations
  description: The ConnectConfigurations resource methods enable you to configure
    the DocuSign Connect service associated with an account.
- name: ConnectEvents
  description: "The ConnectEvents resource provides methods that allow you to read,\
    \ delete, and republish the connect logs associated with an envelope."
- name: CustomTabs
  description: |-
    The CustomTabs resource provides methods that allow you create and manage custom tabs based on the existing DocuSign tabs.

    You can create a tab with pre-defined properties, such as a text tab with a certain font type and validation pattern. Users can access the custom tabs when sending documents through the DocuSign web application.

    Custom tabs can be created based on the  approve, checkbox, company, date, date signed, decline, email, email address, envelope ID, first name, formula, full name, initial here, last name, list, note, number, radio, sign here, signer attachment, SSN, text, title, and zip tabs.
- name: RequestLogs
  description: "The RequestLogs resource provide methods that allow you to retrieve\
    \ and delete the API request log files.\n\nThe log files contain the API requests\
    \ associated with your integration. They can aid you in troubleshooting specific\
    \ issues within an integration, or if DocuSign Support requests an API trace log. "
- name: Resources
  description: The Resources resource provides a method which retrieves the base resources
    that are available.
- name: Services
  description: The Services resource provides a method that allow you to retrieve
    the available service versions.
- name: EnvelopeConsumerDisclosures
  description: The EnvelopeConsumerDisclosures resource provides a method that allows
    you to retrieve the consumer disclosure for an envelope.
- name: EnvelopeDocuments
  description: "<!-- resources aren't rendered the same way\n     as other pages.\
    \ This is a little hack to\n     make the headings work better -->\n<style>\n\
    h1, h2, h3 {\n  margin-top: 1em;\n}\n</style>\n\nThe EnvelopeDocuments resource\
    \ provides methods\nthat manage documents in an envelope.\nYou can:\n* add one\
    \ or more documents to the envelope\n* retrieve one or more documents from the\
    \ envelope\n* delete documents from the envelope\n\nAll of the methods in this\
    \ resource\noperate on on an existing envelope.\nBefore you can add documents\n\
    to an envelope,\nyou must first create it\nwith the [Envelopes: create][envelopescreate]\
    \ method. \n\n\n[envelopescreate]: https://developers.docusign.com/esign-rest-api/reference/Envelopes/Envelopes/create/\n\
    \n"
- name: EnvelopeEmailSettings
  description: |-
    The EnvelopeEmailSettings provide methods that allow you to manage the email override settings for an envelope.

    Email override settings change the reply to email address, name, or the BCC for email archive information, for the envelope. Note that changing email settings will only affect email communications that occur after the addition was made.

    The BCC Email address feature is designed to provide a copy of all email communications for external archiving purposes. DocuSign recommends that envelopes sent using the BCC for Email Archive feature, including the BCC Email Override option, include additional signer authentication options. To send a copy of the envelope to a recipient who does not need to sign, use a Carbon Copies or Certified Deliveries Recipient Type.
- name: Envelopes
  description: "The Envelope resource provides methods that allow you to manipulate\
    \ and monitor envelopes. \n\nOnce you have authenticated the user you can use\
    \ the Envelopes: createEnvelope method to create an envelope. You can call the\
    \ EnvelopeDocuments: update or EnvelopeDocuments: updateList method to add additional\
    \ documents.\n\nSetting the `status` property on the envelope to `sent` allows\
    \ you to send it or `created` to save it as a draft.\n\nYou can receive envelope\
    \ event notifications by setting the `eventNotification` properties. When the\
    \ envelope or recipient status changes to one of the specified status codes, a\
    \ notification is sent to a URL that you specify.\n\nIf you have an envelope that\
    \ you have previously saved, you can modify the subject and message, send it,\
    \ void it, or place it in the purge queue using the Envelope: update method.\n\
    \nIn addition to receiving notifications you can monitor the status of the envelopes\
    \ using the following methods:\n* Envelope: getEnvelope - To get the status of\
    \ a envelope. \n* Envelope: listStatus - To get the envelope status for a set\
    \ of envelopes.\n* Envelope: listStatusChanges - To get status changes information\
    \ for one or more envelopes. \n\nIf you need to delete a page from a document\
    \ in an envelope, use the Envelope: deleteDocumentPage method.\n\nThe resource\
    \ also includes a number of methods that allow you to retrieve and set the initials\
    \ and signature for certain types of recipients on the document."
- name: EnvelopeTemplates
  description: The EnvelopeTemplates resource provides methods that allow you to add
    and delete templates on envelopes and documents.
- name: Folders
  description: The Folders resource provides methods that allow you to view contents
    of folders on the account and move envelopes between folders.
- name: GroupBrands
  description: 'The GroupBrands resource provides methods that allow you to manage '
- name: Groups
  description: |-
    The Groups resource provides methods that allow you to manage groups for the account.

    Groups can be used to help manage users by associating users with a group. A group can be associated with a Permission Profile, which sets the user permissions for users in that group without having to set the `userSettings` property for each user. You are not required to set Permission Profiles for a group, but this makes it easier to manage user permissions for a large number of users. Groups can also be used with template sharing to limit user access to templates.
- name: GroupUsers
  description: The GroupUsers resource provides methods that allow you to manage the
    users in a group.
- name: SigningGroups
  description: "The SigningGroups resource provides methods that allow you manage\
    \ signing groups.\n\nSigning Groups allow you to create a group of people to which\
    \ an envelope is sent. Any member of that group can open an envelope and sign\
    \ the documents in the envelope with their own signature, even though a signature\
    \ field was not directly assigned to them. When the Signing Group option is used,\
    \ group members that open and sign the envelope are tracked in the envelope history\
    \ and certificate.\n\nWhen one group member opens the envelope, it is temporarily\
    \ locked and if other members try to open the envelope they will see a message\
    \ saying the envelope is currently opened. If the group member exits the envelope\
    \ without finishing the lock expires, allowing other group members to open and\
    \ complete the envelope.\n\nWhen the envelope is complete, all members of the\
    \ group will receive a completed notification and can access the completed envelope.\
    \ \nThe envelope history and Certificate of Completion will show that the envelope\
    \ was sent to a signing group and record which members viewed and signed the envelope.\n\
    \nAn account can have a maximum of 50 signing groups. Each signing group can have\
    \ a maximum of 50 group members.\n\nThe Signing Groups feature is only supported\
    \ in certain DocuSign Enterprise and System Automated Premium plans. Your account\
    \ might not support this option. To access this functionality, contact your Account\
    \ Manager or DocuSign Support (support@docusign.com) for assistance."
- name: SigningGroupUsers
  description: The SigningGroupUsers resource provides methods that allow you to manage
    users in Signing Groups.
- name: TemplateRecipients
  description: "The TemplateRecipients resource allows you manage the recipients of\
    \ an template.\n\nThe exact parameters associated with a recipient depend on the\
    \ recipient type. There are seven recipient types: Agents, Carbon Copies, Certified\
    \ Deliveries, Editors, In Person Signers, Intermediaries, and Signers. \n\nNot\
    \ all recipients are are available to all account types, review you account plan\
    \ to determine which recipient types are available to you. If you are working\
    \ in the Demo environment, all recipient types are available.\n\nEach recipient\
    \ type is described below:\n\n[Agents](#agents): This recipient can add name and\
    \ email information for recipients that appear after the recipient in routing\
    \ order.\n\n[Carbon Copies](#carboncopies): Use this action if the recipient should\
    \ get a copy of the template, but the recipient does not need to sign, initial,\
    \ date or add information to any of the documents. This type of recipient can\
    \ be placed in any order in the recipient list. The recipient receives a copy\
    \ of the template when the template reaches the recipient's order in the process\
    \ flow and when the template is completed.\n\n[Certified Deliveries](#certifiedDeliveries):\
    \ Use this action if the recipient must receive the completed documents for the\
    \ template to be completed, but the recipient does not need to sign, initial,\
    \ date or add information to any of the documents.\n\n[Editors](#editors): This\
    \ recipient has the same management and access rights for the template as the\
    \ sender and can make changes to the template as if they were using the Advanced\
    \ Correct feature. This recipient can add name and email information, add or change\
    \ the routing order and set authentication options for the remaining recipients.\
    \ Additionally, this recipient can edit signature/initial tabs and data fields\
    \ for the remaining recipients. The recipient must have a DocuSign account to\
    \ be an editor.\n\n[In Person Signers](#inPerson): Use this action if the signer\
    \ is in the same physical location as a DocuSign user who will act as a Signing\
    \ Host for the transaction. The recipient added is the Signing Host and new separate\
    \ Signer Name field appears after Sign in person is selected.\n\n[Intermediaries](#intermediaries):\
    \ This recipient can, but is not required to, add name and email information for\
    \ recipients at the same or subsequent level in the routing order (until subsequent\
    \ Agents, Editors or Intermediaries recipient types are added).\n\n[Signers](#signers):\
    \ Use this action if your recipient must sign, initial, date or add data to form\
    \ fields on the documents in the template.\n\n### Core JSON Layout\n\nThe following\
    \ shows the core JSON layout for a recipient.\n\n```\n\"email\": \"email.name@company.com\"\
    ,\n  \"name\": \"recipient name\",\n  \"accessCode\": \"\",\n  \"addAccessCodeToEmail\"\
    : false,\n  \"clientUserIs\": null,\n  \"embeddedRecipientStartURL\": \"string\"\
    ,\n  \"customFields\": {\n    \"sample string 1\",\n    \"sample string 2\"\n\
    \  },\n  \"emailNotification\"{\n    \"emailBody\":\"email text\",\n    \"emailSubject\"\
    :\"Subject text\",\n    \"supportedLanguage\":\"en\",\n  },\n  \"excludedDocuments\"\
    : [\"2\", \"4\"],\n  \"idCheckConfigurationName\": null,\n  \"idCheckInformationInput\"\
    : {\n    \"addressInformationInput\": {\n      \"addressInformation\": {\n   \
    \     \"street1\": \"sample string 1\",\n        \"street2\": \"sample string\
    \ 2\",\n        \"city\": \"sample string 3\",\n        \"state\": \"sample string\
    \ 4\",\n        \"zip\": \"sample string 5\",\n        \"zipPlus4\": \"sample\
    \ string 6\"\n      },\n      \"displayLevelCode\": \"sample string 1\",\n   \
    \   \"receiveInResponse\": \"sample string 2\"\n    },\n    \"dobInformationInput\"\
    : {\n      \"dateOfBirth\": \"sample string 1\",\n      \"displayLevelCode\":\
    \ \"sample string 2\",\n      \"receiveInResponse\": \"sample string 3\"\n   \
    \ },\n    \"ssn4InformationInput\": {\n      \"ssn4\": \"sample string 1\",\n\
    \      \"displayLevelCode\": \"sample string 2\",\n      \"receiveInResponse\"\
    : \"sample string 3\"\n    },\n    \"ssn9InformationInput\": {\n      \"ssn9\"\
    : \"sample string 1\",\n      \"displayLevelCode\": \"sample string 2\"\n    }\n\
    \  },\n  \"inheritEmailNotificationConfiguration\": false,\n  \"note\": \"\",\n\
    \  \"phoneAuthentication\": {\n    \"recipMayProvideNumber\": \"sample string\
    \ 1\",\n    \"validateRecipProvidedNumber\": \"sample string 2\",\n    \"recordVoicePrint\"\
    : \"sample string 3\",\n    \"senderProvidedNumbers\": [\n      \"sample string\
    \ 1\",\n      \"sample string 2\"\n    ]\n  },\n  \"recipientAttachment\": null,\n\
    \  \"recipientCaptiveInfo\": null,\n  \"recipientId\": \"1\",\n  \"requireIdLookup\"\
    : false,\n  \"roleName\": \"\",\n  \"routingOrder\": 1,\n  \"samlAuthentication\"\
    : {\n    \"samlAssertionAttributes\": [\n      {\n        \"name\": \"string\"\
    ,\n        \"value\": \"string\"\n      },\n      {\n        \"name\": \"string\"\
    ,\n        \"value\": \"string\"\n      }\n    ]\n  },\n  \"smsAuthentication\"\
    : {\n    \"senderProvidedNumbers\":[\n      \"sample string 1\",\n      \"sample\
    \ string 2\"\n    ]\n  },\n  \"socialAuthentications\": null,\n  \"templateAccessCodeRequired\"\
    : false,\n  \"templateLocked\": false,\n  \"templateRequired\": false,\n...\n\
    ```\n\n### Core Recipient Parameters\n\nThe following table contains the descriptions\
    \ for the core properties for a recipient.\n\n| Name | Required? | Schema Type\
    \ | Description |\n| --- | --- | --- | --- |\n| email | Yes | Email | Email of\
    \ the recipient. Notification will be sent to this email id.<br/>Maximum Length:\
    \ 100 characters. |\n| name | Yes | String | Full legal name of the recipient.<br/>Maximum\
    \ Length: 100 characters. |\n| accessCode | No | String | This optional element\
    \ specifies the access code a recipient has to enter to validate the identity.<br/>Maximum\
    \ Length: 50 characters. |\n| addAccessCodeToEmail | No | Boolean | This optional\
    \ attribute indicates that the access code is added to the email sent to the recipient;\
    \ this nullifies the Security measure of Access Code on the recipient. |\n| clientUserId\
    \ | No | String | This specifies whether the recipient is embedded or remote.<br/><br/>If\
    \ the `clientUserId` property is not null then the recipient is embedded. Note\
    \ that if the `ClientUserId` property is set and either `SignerMustHaveAccount`\
    \ or `SignerMustLoginToSign` property of the account settings is set to  **true**,\
    \ an error is generated on sending. |\n| embeddedRecipientStartURL | No | String\
    \ | This is a sender provided valid URL string for redirecting an embedded recipient.\
    \ When using this option, the embedded recipient still receives an email from\
    \ DocuSign, just as a remote recipient would, but when the document link in the\
    \ email is clicked the recipient is redirected, through DocuSign, to this URL\
    \ to complete their actions. When routing to the URL, it is up to the sender's\
    \ system (the server responding to the URL) to then request a recipient token\
    \ to launch a signing session.<br/><br/>If the value `SIGN_AT_DOCUSIGN` is used\
    \ for this node, the recipient is directed to an embedded signing or viewing process\
    \ directly at DocuSign. The signing or viewing action is initiated by the DocuSign\
    \ system and the transaction activity and Certificate of Completion records will\
    \ reflect this. In all other ways the process is identical to an embedded signing\
    \ or viewing operation that would be launched by any partner.<br/><br/>It is important\
    \ to remember that in a typical embedded workflow the authentication of an embedded\
    \ recipient is the responsibility of the sending application and DocuSign expects\
    \ that senders will follow their own process for establishing the recipient's\
    \ identity. In this workflow the recipient goes through the sending application\
    \ before the embedded signing or viewing process in initiated. However, when the\
    \ sending application sets  the `EmbeddedRecipientStartURL` property to `SIGN_AT_DOCUSIGN`,\
    \ the recipient goes directly to the embedded signing or viewing process bypassing\
    \ the sending application and any authentication steps the sending application\
    \ would use. In this case, DocuSign recommends that one of the normal DocuSign\
    \ authentication features (Access Code, Phone Authentication, SMS Authentication,\
    \ etc.) be used to verify the identity of the recipient.<br/><br>If the `clientUserId`\
    \ property is NOT set and the `embeddedRecipientStartURL` property is set, DocuSign\
    \ ignores the redirect URL and launch the standard signing process for the email\
    \ recipient. Information can be appended to the `embeddedRecipientStartURL` property\
    \ using merge fields. The available merge fields items are: templateId, recipientId,\
    \ recipientName, recipientEmail, and customFields. The customFields must be part\
    \ of the recipient or template. The merge fields are enclosed in double brackets.<br/><br/>_Example_:<br/>`http://senderHost/[[mergeField1]]/\
    \ beginSigningSession? [[mergeField2]]&[[mergeField3]]` |\n| customFields | No\
    \ | customField |An optional array of strings that allows the sender to provide\
    \ custom data about the recipient. This information is returned in the template\
    \ status but otherwise not used by DocuSign. String `customField` properties have\
    \ a maximum length of 100 characters. |\n| emailNotification | No | emailNotification\
    \ | An optional complex type that has information for setting the language for\
    \ the recipient's email information. It is composed of three elements:<br/><br/>*emailBody*:\
    \ a string with the email message sent to the recipient.<br/>Maximum Length: 10000\
    \ characters.<br/><br/>*emailSubject*: a string with the subject of the email\
    \ sent to the recipient.<br/>Maximum Length: 100 characters.<br/><br/>*supportedLanguage*:\
    \ The simple type enumeration of the language used. The supported languages, with\
    \ the language value shown in parenthesis, are: Arabic (ar), Bahasa Indonesia\
    \ (id), Bahasa Melayu (ms) Bulgarian (bg), Czech (cs), Chinese Simplified (zh_CN),\
    \ Chinese Traditional (zh_TW), Croatian (hr), Danish (da), Dutch (nl), English\
    \ US (en), English UK (en_GB), Estonian (et), Farsi (fa), Finnish (fi), French\
    \ (fr), French Canada (fr_CA), German (de), Greek (el), Hebrew (he), Hindi (hi),\
    \ Hungarian (hu), Italian (it), Japanese (ja), Korean (ko), Latvian (lv), Lithuanian\
    \ (lt), Norwegian (no), Polish (pl), Portuguese (pt), Portuguese Brazil (pt_BR),\
    \ Romanian (ro),Russian (ru), Serbian (sr), Slovak (sk), Slovenian (sl), Spanish\
    \ (es),Spanish Latin America (es_MX), Swedish (sv), Thai (th), Turkish (tr), Ukrainian\
    \ (uk) and Vietnamese (vi).<br/><br/>**IMPORTANT**: If this is enabled for one\
    \ recipient, it overrides the Template Subject and `EmailBlurb` property settings.\
    \ Also, you must set the  `emailNotification` property for all recipients. |\n\
    | excludedDocuments | No | Array of Strings | Specifies the documents that are\
    \ not visible to this recipient. Document Visibility must be enabled for the account\
    \ and the enforceSignerVisibility property must be set to true for the template\
    \ to use this.<br/><br/>When the enforceSignerVisibility property is set to **true**,\
    \ documents with tabs can only be viewed by signers that have a tab on that document.\
    \ Recipients that have an administrative role (Agent, Editor, or Intermediaries)\
    \ or informational role (Certified Deliveries or Carbon Copies) can always see\
    \ all the documents in an template, unless they are specifically excluded using\
    \ this setting when an template is sent. Documents that do not have tabs are always\
    \ visible to all recipients, unless they are specifically excluded using this\
    \ setting when an template is sent. |\n| idCheckConfigurationName | No | String\
    \ |Specifies authentication check by name. The names used here must be the same\
    \ as the authentication type names used by the account (these name can also be\
    \ found in the web console sending interface in the Identify list for a recipient).\
    \ This overrides any default authentication setting.<br/><br/>_Example_:<br/>\
    \ Your account has ID Check and SMS Authentication available and in the web console\
    \ Identify list these appear as 'ID Check $' and 'SMS Auth $'. To use ID check\
    \ in an template, the `idCheckConfigurationName` property must be  set to `ID\
    \ Check $`. To use SMS, it must be set to `SMS Auth $` and you must add phone\
    \ number information to the `smsAuthentication` node.|\n| iDCheckInformationInput\
    \ | No | IdCheckInformationInput | This complex element contains input information\
    \ related to a recipient ID check. It can include the following information.<br/><br/>*addressInformationInput*:\
    \ Used to set recipient address information and consists of:<br/><br/>*addressInformation*:\
    \ consists of six elements, with street2 and zipPlus4 being optional. The elements\
    \ are: street1, street2, city, state, zip, zipPlus4\\. The maximum number of characters\
    \ in each element are: street1/street2 = 150 characters, city = 50 characters,\
    \ state = 2 characters, and zip/zipPlus4 = 20 characters.<br/><br/>displayLevelCode:\
    \ Specifies the display level for the recipient. Values are: ReadOnly, Editable,\
    \ or DoNotDisplay.<br/><br/>*receiveInResponse*: A Boolean element that specifies\
    \ if the information needs to be returned in the response.<br/><br/>*dobInformationInput*:\
    \ Used to set recipient date of birth information and consists of:<br/><br/>*dateOfBirth*:\
    \ Specifies the recipient's date, month and year of birth.<br/><br/>*displayLevelCode*:\
    \ Specifies the display level for the recipient. Values are: ReadOnly, Editable,\
    \ or DoNotDisplay.<br/><br/>*receiveInResponse*: A Boolean element that specifies\
    \ if the information needs to be returned in the response.<br/><br/>*ssn4InformationInput*:\
    \ Used to set the last four digits of the recipient's SSN information and consists\
    \ of:<br/><br/>*ssn4*: Specifies the last four digits of the recipient's SSN.<br/><br/>*displayLevelCode*:\
    \ Specifies the display level for the recipient. Values are: ReadOnly, Editable,\
    \ or DoNotDisplay.<br/><br/>*receiveInResponse*: A Boolean element that specifies\
    \ if the information needs to be returned in the response.<br/><br/>*ssn9InformationInput*:\
    \ Used to set the recipient's SSN information. Note that the ssn9 information\
    \ can never be returned in the response. The ssn9 input consists of:<br/><br/><br/><br/>*ssn9*:\
    \ Specifies the recipient's SSN.<br/><br/>*displayLevelCode*: Specifies the display\
    \ level for the recipient. Values are: ReadOnly, Editable, or DoNotDisplay. |\n\
    | inheritEmailNotificationConfiguration | No | Boolean | Optional element. If\
    \ true and the template recipient creates a DocuSign account after signing, the\
    \ Manage Account Email Notification settings are used as the default settings\
    \ for the recipient's account. |\n| note | No | String | A note that is unique\
    \ to this recipient. This note is sent to the recipient via the signing email.\
    \ The note displays in the signing UI near the upper left corner of the document\
    \ on the signing screen.<br/>Maximum Length: 1000 characters. |\n| phoneAuthentication\
    \ | No | RecipientPhoneAuthentication | Optional element. Contains the elements:\
    \ <br/><br/> *recipMayProvideNumber*:Boolean. When set to **true** thenrecipient\
    \ can use whatever phone number they choose to.<br/><br/> *senderProvidedNumbers*:\
    \ ArrayOfString. A list of phone numbers the recipient can use. <br/><br/>*recordVoicePrint*\
    \ - Reserved <br/><br/>*validateRecipProvidedNumber* - Reserved| |\n| recipientAttachment\
    \ | No | Attachment | Reserved |\n| recipientId | No | String | Unique for the\
    \ recipient. It is used by the tab element to indicate which recipient is to sign\
    \ the Document. |\n| requireIdLookup | No | Boolean | When set to **true**, the\
    \ recipient is required to use the specified ID check method (including Phone\
    \ and SMS authentication) to validate their identity. |\n| roleName | No* | String\
    \ | Optional element. Specifies the role name associated with the recipient.<br/><br/>This\
    \ is required when working with template recipients. |\n| routingOrder | Yes |\
    \ String | This element specifies the routing order of the recipient in the template.\
    \ |\n| samlAuthentication | No | samlAssertionAttributes | Optional element, account\
    \ must be set up to use SSO to use this. Contains the name/value pair information\
    \ for the SAML assertion attributes:<br/><br/>*name*: The name of the SAML assertion\
    \ attribute.<br/><br/>*value*: The value associated with the named SAML assertion\
    \ attribute. |\n| smsAuthentication | No | senderProvidedNumbers | Optional element.\
    \ Contains the element:<br/><br/>*senderProvidedNumbers*: Array that contains\
    \ a list of phone numbers the recipient can use for SMS text authentication. |\n\
    | socialAuthentications | No | Boolean | Lists the social ID type that can be\
    \ used for recipient authentication. |\n| templateAccessCodeRequired | No | Boolean\
    \ | Optional element. Used only when working with template recipients. When set\
    \ to **true** and the `TemplateLocked` parameter is set to **true**, the sender\
    \ must enter an access code. |\n| templateLocked | No | Boolean | Optional element.\
    \ Used only when working with template recipients. When set to **true**, the sender\
    \ cannot change any attributes of the recipient. |\n| templateRequired | No |\
    \ Boolean | Optional element. Used only when working with template recipients.\
    \ When set to **true**,  the sender may not remove the recipient. |\n\n## <a name=\"\
    agents\"></a> Agents Recipient\n\nThis recipient can add name and email information\
    \ for recipients that appear after the recipient in routing order.\n\n#### Example\
    \ Agents layout\n\n```\n\"agents\": [{\n <core parameters>\n  \"canEditRecipientEmails\"\
    : false,\n  \"canEditRecipientNames\": false\n}],\n```\n\nThe additional parameters\
    \ for Agents recipient are shown below:\n\n| Name | Required? | Schema Type |\
    \ Description |\n| --- | --- | --- | --- |\n| canEditRecipientEmails | No | Boolean\
    \ | Optional element. When set to **true**, the Agents Recipient associated with\
    \ this Recipient can change the Recipient's pre-populated Email address. This\
    \ element is only active if enabled for the account. |\n| canEditRecipientNames\
    \ | No | Boolean | Optional element. When set to **true**, the Agents Recipient\
    \ associated with this recipient can change the recipient's pre-populated name\
    \ (`UserName`). This element is only active if enabled for the account. |\n\n\
    ## <a name=\"carbonCopies\"></a>Carbon Copies Recipient\n\nUse this type if the\
    \ recipient should get a copy of the template, but the recipient does not need\
    \ to sign, initial, date, or add information to any of the documents. This type\
    \ of recipient can be placed in any order in the recipient list. The recipient\
    \ receives a copy of the template when the template reaches the recipient's order\
    \ in the process flow and when the template is completed.\n\n#### Example Carbon\
    \ Copies layout\n\n```\n\"carbonCopies\": [{\n <core parameters>\n```\n\nThe Carbon\
    \ Copies recipient uses only the core parameters.\n\n## <a name=\"certifiedDeliveries\"\
    ></a>Certified Deliveries Recipient\n\nUse this action if the recipient must receive\
    \ the completed documents for the template to be completed, but the recipient\
    \ does not need to sign, initial, date, or add information to any of the documents.\n\
    \n#### Example Certified Deliveries layout\n\n```\n\"certifiedDeliveries\": [{\n\
    <core parameters>\n}],\n```\nThe Certified Deliveries recipient uses only the\
    \ core parameters.\n\n## <a name=\"editors\"></a>Editors Recipient\n\nThis recipient\
    \ has the same management and access rights for the template as the sender and\
    \ can make changes to the template as if they were using the Advanced Correct\
    \ feature. This recipient can add name and email information, add or change the\
    \ routing order and set authentication options for the remaining recipients. Additionally,\
    \ this recipient can edit signature/initial tabs and data fields for the remaining\
    \ recipients. The recipient must have a DocuSign account to be an editor.\n\n\
    #### Example Editors layout\n\n```\n\"editors\": [{\n <core parameters>\n  \"\
    canEditRecipientEmails\": false,\n  \"canEditRecipientNames\": false\n}],\n```\n\
    \nThe additional parameters for Editors recipient are shown below:\n\n| Name |\
    \ Required? | Schema Type | Description |\n| --- | --- | --- | --- |\n| canEditRecipientEmails\
    \ | No | Boolean | Optional element. When set to **true**, the Editors Recipient\
    \ associated with this Recipient can change the Recipient's pre-populated Email\
    \ address. This element is only active if enabled for the account. |\n| canEditRecipientNames\
    \ | No | Boolean | Optional element. When set to **true**, the Editors Recipient\
    \ associated with this recipient can change the recipient's pre-populated name\
    \ (`UserName`). This element is only active if enabled for the account. |\n\n\
    ## <a name=\"inPerson\"></a>In Person Signers Recipient\n\nUse this type if the\
    \ signer is in the same physical location as a DocuSign user who will act as a\
    \ Signing Host for the transaction. The recipient added is the Signing Host and\
    \ new separate Signer Name field appears after Sign in person is selected.\n\n\
    #### Example In Person Signers layout\n\n```\n\"inPersonSigners\": [{\n  \"hostEmail\"\
    : \"signing.host@company.com\",\n  \"hostName\": \"Mike Host\",\n <core parameters>\n\
    \  \"autoNavigation\": false,\n  \"defaultRecipient\": false,\n  \"signInEachLocation\"\
    : false,\n  \"signatureInfo\": null,\n  \"signerEmail\": \"signer.name@company.com\"\
    ,\n  \"signerName\": \"MC Clap Your Hands\",\n  \"tabs\": {\n    \"approveTabs\"\
    : null,\n    \"checkboxTabs\": null,\n    \"companyTabs\": null,\n    \"dateSignedTabs\"\
    : null,\n    \"dateTabs\": null,\n    \"declineTabs\": null,\n    \"emailTabs\"\
    : null,\n    \"templateIdTabs\": null,\n    \"fullNameTabs\": null,\n    \"initialHereTabs\"\
    : null,\n    \"listTabs\": null,\n    \"noteTabs\": null,\n    \"numberTabs\"\
    : null,\n    \"radioGroupTabs\": null,\n    \"signHereTabs\": [{\n    \"signerAttachmentTabs\"\
    : null,\n    \"ssnTabs\": null,\n    \"textTabs\": null,\n    \"titleTabs\": null,\n\
    \    \"zipTabs\": null\n  }\n}],\n```\n\nThe additional and changed parameters\
    \ for In Person Signers recipient are shown below:\n\n| Name | Required? | Schema\
    \ Type | Description |\n| --- | --- | --- | --- |\n| hostEmail | Yes | Email |\
    \ Required element for In Person Signers recipient Type.<br/>Maximum Length: 100\
    \ characters.<br/><br/>Specifies the email for the signing host. |\n| hostName\
    \ | Yes | String | Required element for In Person Signers recipient Type.<br/>Maximum\
    \ Length: 100 characters.<br/><br/>Specifies the email for the signing host.|\n\
    | autoNavigation | No | Boolean | Specifies whether auto navigation is set for\
    \ the recipient.|\n| defaultRecipient | No | Boolean | When set to **true**, this\
    \ is the default recipient for the template. This option is used with the CreateTemplateFromTemplatesAndForms\
    \ method. |\n| signInEachLocation | No | Boolean | When set to **true** and the\
    \ feature is enabled in the sender's account, the signing recipient is required\
    \ to draw signatures and initials at each signature/initial tab (instead of adopting\
    \ a signature/initial style or only drawing a signature/initial once). |\n| signatureInfo\
    \ | No | String | Optional element only used with recipient types In Person Signers\
    \ and Signers.<br/><br/>Allows the sender to pre-specify the signature name, signature\
    \ initials, and signature font used in the signature stamp for the recipient.\
    \ |\n| signerEmail | No | String | Optional element. The email address for an\
    \ InPersonSigner recipient Type.<br/>Maximum Length: 100 characters. |\n| signerName\
    \ | Yes | String | Required element with recipient type In Person Signers.<br/>Maximum\
    \ Length: 100 characters.<br/><br/>The full legal name of a signer for the template.\
    \ |\n| tabs | No | Tab | Optional element only used with recipient types In Person\
    \ Signers and Signers.<br/><br/>Specifies the Tabs associated with the recipient.\
    \ See the [ML:Tab Parameters] section for more information about tabs. |\n\n##\
    \ <a name=\"intermediaries\"></a>Intermediaries Recipient\n\nThis recipient can,\
    \ but is not required to, add name and email information for recipients at the\
    \ same or subsequent level in the routing order (until subsequent Agents, Editors\
    \ or Intermediaries recipient types are added).\n\n#### Example Intermediaries\
    \ layout\n\n```\n\"intermediaries\": [{\n<core parameters>\n  \"canEditRecipientEmails\"\
    : false,\n  \"canEditRecipientNames\": false\n}],\n```\n\nThe parameters for Intermediaries\
    \ recipient are shown below:\n\n| Name | Required? | Schema Type | Description\
    \ |\n| --- | --- | --- | --- |\n| canEditRecipientEmails | No | Boolean | Optional\
    \ element. When set to **true**, the Agents Recipient associated with this Recipient\
    \ can change the Recipient's pre-populated Email address. This element is only\
    \ active if enabled for the account. |\n| canEditRecipientNames | No | Boolean\
    \ | Optional element. When set to **true**, the Agents Recipient associated with\
    \ this recipient can change the recipient's pre-populated name (`UserName`). This\
    \ element is only active if enabled for the account. |\n\n## <a name=\"signers\"\
    ></a>Signers Recipient\n\nUse this action if your recipient must sign, initial,\
    \ date, or add data to form fields on the documents in the template.\n\n#### Example\
    \ Signers layout\n\n```\n\"Signers\": [{\n<core paramters>\n  \"autoNavigation\"\
    : false,\n  \"defaultRecipient\": false,\n  \"signInEachLocation\": false,\n \
    \ \"signatureInfo\": null,\n  \"tabs\": {\n    \"approveTabs\": null,\n    \"\
    checkboxTabs\": null,\n    \"companyTabs\": null,\n    \"dateSignedTabs\": null,\n\
    \    \"dateTabs\": null,\n    \"declineTabs\": null,\n    \"emailTabs\": null,\n\
    \    \"templateIdTabs\": null,\n    \"fullNameTabs\": null,\n    \"initialHereTabs\"\
    : null,\n    \"listTabs\": null,\n    \"noteTabs\": null,\n    \"numberTabs\"\
    : null,\n    \"radioGroupTabs\": null,\n    \"signHereTabs\": [{\n    \"signerAttachmentTabs\"\
    : null,\n    \"ssnTabs\": null,\n    \"textTabs\": null,\n    \"titleTabs\": null,\n\
    \    \"zipTabs\": null\n  }\n  \"deliveryMethod\":\"\",\n  \"deliveredDateTime\"\
    :\"String Content\",\n  \"signedDateTime\":\"String Content\",\n  \"offlineAttributes\"\
    :{\n    \"deviceName\":\"String Content\",\n    \"deviceModel\":\"String Content\"\
    ,\n    \"gpsLatitude\":\"String Content\",\n    \"gpsLongitude\":\"String Content\"\
    ,\n    \"accountEsignId\":\"String Content\"\n  }\n}],\n```\n\nThe additional\
    \ parameters for Signers recipient are shown below:\n\n| Name | Required? | Schema\
    \ Type | Description |\n| --- | --- | --- | --- |\n| autoNavigation | No | Boolean\
    \ | Specifies whether auto navigation is set for the recipient.|\n| defaultRecipient\
    \ | No | Boolean | When set to **true**, this is the default recipient for the\
    \ template. This option is used with the CreateTemplateFromTemplatesAndForms method.\
    \ |\n| signInEachLocation | No | Boolean | When set to **true** and the feature\
    \ is enabled in the sender's account, the signing recipient is required to draw\
    \ signatures and initials at each signature/initial tab (instead of adopting a\
    \ signature/initial style or only drawing a signature/initial once). |\n| signatureInfo\
    \ | No | String | Optional element only used with recipient types In Person Signers\
    \ and Signers.<br/><br/>Allows the sender to pre-specify the signature name, signature\
    \ initials, and signature font used in the signature stamp for the recipient.\
    \ |\n| signerEmail | No | String | Optional element. The email address for an\
    \ InPersonSigner recipient Type.<br/>Maximum Length: 100 characters. |\n| signerName\
    \ | Yes | String | Required element with recipient type In Person Signers.<br/>Maximum\
    \ Length: 100 characters.<br/><br/>The full legal name of a signer for the template.\
    \ |\n| tabs | No | Tab | Optional element only used with recipient types In Person\
    \ Signers and Signers.<br/><br/>Specifies the Tabs associated with the recipient.\
    \ See the [ML:Tab Parameters] section for more information about tabs. |\n| deliveryMethod\
    \ | No | String | Reserved: For DocuSign use only.|\n| deliveredDateTime | No\
    \ | DateTime | Reserved: For DocuSign use only. |\n| signedDateTime | No | DateTime\
    \ | Reserved: For DocuSign use only. |\n| offlineAttributes | No | &nbsp; | Reserved:\
    \ For DocuSign use only.|"
- name: TemplateBulkRecipients
  description: "The TemplateBulkRecipients resource provide methods that allow you\
    \ manage the bulk recipient file for an template.\n\nThe bulk recipient CSV (Comma\
    \ Separated Value) file contains the list of recipient names and email addresses\
    \ that you can add to an template to send the same document to a large number\
    \ of recipients.\n \nThe required and optional information that can be included\
    \ the file is described in the BulkEnvelope: updateRecipients method"
- name: TemplateCustomFields
  description: "The TemplateCustomFields resource provides methods that allow you\
    \ manage custom fields in an template. \n\nCustom fields can be used in the templates\
    \ for your account to record information about the template, help search for templates\
    \ and track information. The template custom fields are shown in the Template\
    \ Settings section when a user is creating an template in the DocuSign member\
    \ console. The template custom fields are not seen by the template recipients.\n\
    \nThere are two types of template custom fields, text and list. A text custom\
    \ field lets the sender enter the value for the field. With a list custom field,\
    \ the sender selects the value of the field from a pre-made list."
- name: TemplateDocumentFields
  description: "The TemplateDocumentFields resource provides methods that allow you\
    \ to manage custom fields on a document.\n\nYou can create custom versions of\
    \ standard fields that combine of field properties, such as font type or size,\
    \ or a validation setting. \n\nNote: Some advanced features and options are supported\
    \ only in certain DocuSign plans. Your account plan might not support some options\
    \ discussed in this help topic. For more information about which options are available\
    \ for your account, check your account plan or contact your Account Manager."
- name: TemplateDocuments
  description: "<!-- resources aren't rendered the same way\n     as other pages.\
    \ This is a little hack to\n     make the headings work better -->\n<style>\n\
    h1, h2, h3 {\n  margin-top: 1em;\n}\n</style>\n\nThe TemplateDocuments resource\
    \ provides methods\nthat manage documents in a template.\nYou can:\n* add one\
    \ or more documents to the template\n* retrieve one or more documents from the\
    \ template\n* delete documents from the template\n\nAll of the methods in this\
    \ resource\noperate on on an existing template.\nBefore you can add documents\n\
    to a template,\nyou must first create it\nwith the [Templates: create][templatescreate]\
    \ method. \n\n[templatescreate]: https://developers.docusign.com/esign-rest-api/reference/Templates/Templates/create/\n"
- name: TemplateLocks
  description: |-
    The TemplateLocks resource provides methods that allow you to manage locks on an template.

    You can lock the template, and set the time until the lock expires, to prevent users from accessing and changing the template.

    Users must have envelope locking capability enabled to use these functions.
- name: Templates
  description: "The Template resource provides methods that allow you to manipulate\
    \ and monitor templates. \n\nOnce you have authenticated the user you can use\
    \ the Templates: createTemplate method to create an template. You can call the\
    \ TemplateDocuments: update or TemplateDocuments: updateList method to add additional\
    \ documents.\n\nIf you have an template that you have previously saved, you can\
    \ modify the subject and message, send it, void it, or purge it from the DocuSign\
    \ system using the Template: update.\n\nIn addition to receiving notifications\
    \ you can monitor the status of the templates using the following methods:\n*\
    \ Template: getTemplate - To get the status of a template. \n* Template: listStatus\
    \ - To get the template status for a set of templates.\n* Template: listStatusChanges\
    \ - To get status changes information for one or more templates. \n\nIf you need\
    \ to delete a page from a document in an template, use the Template: deleteDocumentPage\
    \ method.\n\nThe resource also includes a number of methods that allow you to\
    \ retrieve and set the initials and signature for certain types of recipients\
    \ on the document."
- name: TemplateRecipientTabs
  description: "<!-- resources aren't rendered the same way\n     as other pages.\
    \ This is a little hack to\n     make the headings work better -->\n<style>\n\
    h1, h2, h3 {\n  margin-top: 1em;\n}\n</style>\n\nThe TemplateRecipientTabs resource\
    \ provides methods that let you\nadd,\nupdate,\nand delete tabs\nfrom an envelope.\n\
    Tabs are associated with a specific recipient\nin an envelope\nand are only used\
    \ by the recipient types\nIn Person Signers and Signers. \n\n\n## Tab Types\n\n\
    This table lists the available tab types.\n\n<br>\n\n\n| Tab Type            \
    \  | Description |\n| :-------              | :---------- |\n| Approve Tab   \
    \        | Place this tab on the document if you want the recipient to approve\
    \ documents in an envelope without placing a signature or initials on the document.\
    \ If the recipient clicks the Approve tab during the signing process, the recipient\
    \ is considered to have signed the document. No information is shown on the document\
    \ for the approval, but it is recorded as a signature in the envelope history.\
    \ |\n| Checkbox Tab          | Place this tab on the document in a location where\
    \ the recipient can select a yes/no (on/off) type option. |\n| Company Tab   \
    \        | Place this tab on the document where you want the recipient's company\
    \ name to appear. |\n| Date Signed Tab       | Place this tab on the document\
    \ where you want the date the recipient signed the document to appear. |\n| Date\
    \ Tab              | Place this tab on the document where you want the recipient\
    \ to enter a date. Date tabs are single-line fields that allow date information\
    \ to be entered in any format. The tooltip for this tab recommends entering the\
    \ date as MM/DD/YYYY, but this is not enforced. The format entered by the signer\
    \ is retained. If you need a particular date format enforced, DocuSign recommends\
    \ using a Text tab with a Validation Pattern and Validation Message to enforce\
    \ the format. |\n| Decline Tab           | Place this tab on the document where\
    \ you want to give the recipient the option of declining an envelope. If the recipient\
    \ clicks the Decline tab during the signing process, the envelope is voided. |\n\
    | Email Address Tab     | Place this tab on a document where you want the recipient's\
    \ email, as entered in the recipient information, to appear. |\n| Email Tab  \
    \           | This is a single-line field that accepts any characters. |\n| Envelope\
    \ ID Tab       | Place this tab on the document where you want the envelope ID\
    \ for to appear. Recipients cannot enter or change the information in this tab.\
    \ It is for informational purposes only. |\n| First Name Tab        | Place this\
    \ tab on a document where you want the recipient's first name to appear. This\
    \ tab takes the recipient's name, as entered in the recipient information, splits\
    \ it into sections based on spaces and uses the first section as the first name.\
    \ |\n| Formula Tab           | This tab is used to add a calculated field to a\
    \ document. Envelope recipients cannot directly enter information into the tab.\
    \ The formula tab calculates and displays a new value when changes are made to\
    \ the reference tab values. The reference tab information and calculation operations\
    \ are entered in the \"formula\" element. See the Using the Calculated Fields\
    \ Feature quick start guide or DocuSign Service User Guide for more information\
    \ about formulas.  |\n| Full Name Tab         | Place this tab on the document\
    \ where you want the recipient's full name to appear. |\n| Initial Here Tab  \
    \    | Place this tab where the recipient must initial the document. This tab\
    \ can be set to be optional.  |\n| Last Name Tab         | Place this tab on a\
    \ document where you want the recipient's last name to appear. This tab takes\
    \ the recipient's name, as entered in the recipient information, splits it into\
    \ sections based on spaces and uses the last section as the last name. |\n| List\
    \ Tab              | This tab has a list of options that a recipient can select.\
    \ The `listItems` parameter is used to set the options that can be selected. \
    \ |\n| Note Tab              | Place this tab on the document where you want to\
    \ add a note for the recipient on a document. |\n| Number Tab            | This\
    \ tab is a field where the recipient can enter numbers and decimal (.) points.\
    \  |\n| Radio Group Tab       | This group tab is used to place radio buttons\
    \ on a document. The `radios` parameter is used to add and place the radio buttons\
    \ associated with the group. Only one radio button can be selected in a group.\
    \  |\n| Sign Here Tab         | Place this tab where the recipient must sign the\
    \ document. This tab can be set to be optional.  |\n| Signer Attachment Tab |\
    \ The signer attachment is where the recipient initiates the process of adding\
    \ supporting documents to an envelope. |\n| SSN Tab               | This tab is\
    \ a single-line field where the recipient can enter numbers. A Social Security\
    \ Number can be typed with or without dashes. |\n| Text Tab              | This\
    \ tab is a field where the recipient can enter any type of characters.  |\n| Title\
    \ Tab             | Place this tab on the document where you want the recipient's\
    \ title to appear. |\n| Zip Tab               | This tab is a single-line field\
    \ where the recipient can enter numbers. |\n\n\n## Using Custom Tabs in Envelopes\
    \ and Templates \n\nCustom Tabs can be added to envelopes and templates\nby setting\
    \ the `customTabId` property\nwhen creating an envelope or template recipient\n\
    or when adding a new tab for an existing recipient.\nThe custom tab must be added\
    \ as the correct tab type.\nFor example if the custom tab type is text, it cannot\
    \ be used as a number tab.\n\nWhen the `customTabId` property is set,\nthe new\
    \ tab inherits all the custom tab properties.\nRequired information that is not\
    \ included in the custom tab,\nsuch as document ID and page ID, must be included\
    \ when adding the tab.\nIf the custom tab does not have anchor settings, the X\
    \ and Y positions must be included.\n\nAfter the tab is created,\nit is treated\
    \ as any other tab for updating or deleting. \n\n## Anchoring Tabs\n\nThe tab\
    \ anchoring option\nallows you to send documents for signature\nthat do not have\
    \ a fixed layout or format.\nIn these documents you might not know\nthe absolute\
    \ location of the tabs\nwhen you design your API client application because the\
    \ tabs must move with text.\nAs an alternative to sending X and Y coordinates\
    \ for tabs,\nthe DocuSign Service can derive an anchor location for the tab\n\
    by correlating anchor information to data within the document.\n\nWhen the DocuSign\
    \ Service receives a request that contains tabs\nwith anchor information,\nit\
    \ searches the document for instances of the `anchorString` property.\nWhen found,\n\
    it places a tab of the specified type for the designated recipient.\nTab positions\
    \ are established by setting offsets for the tab.\n\nWhen you apply tabs to the\
    \ document,\nDocuSign does not remove or replace the text in the `anchorString`\
    \ property. You can hide codified anchors by using the same font color as the\
    \ background of the document. So the anchor can be used by DocuSign processes\
    \ and it will not be visible on the document.\n\nTo use an anchoring option:\n\
    \n1. Identify the location in the document by text string. You can use a pre-existing\
    \ text string or add a new one.\nFor best performance DocuSign recommends using\
    \ single word anchor strings when possible, especially when there are a large\
    \ number of pages in the envelope. \nFor example, you might want to add a Sign\
    \ Here tab to the \"Borrower's Signature\" lines in a document, but that phrase\
    \ might occur in places in the document where you don't want to tab to appear.\
    \ In this case, you could add the text \"BorrowerSignHere\" in white font color\
    \ (so that isn't visible in the document) to all the places you want Sign Here\
    \ tabs to appear and use \"BorrowerSignHere\" as the anchor string. \n1. Reference\
    \ the anchor through the `anchorString` property of the tab.\n1. Determine the\
    \ offset from the anchor string location to where the tab should be placed. \n\
    \nSetting a positive value in the `anchorXOffset` property moves the tab right\
    \ on the page and positive values in the  `anchorYoffset` prove moves the tab\
    \ down the page. The `anchorUnits` property specifies the units used for the offsets.\n\
    For Sign Here and Initial Here tabs the bottom-left of the anchor string is equivalent\
    \ to position (0,0), and the bottom-left of the tab graphic is placed relative\
    \ to that.\nFor all other tabs the bottom-left of the anchor string is equivalent\
    \ to position (0,0), and the top-left of the tab graphic is placed relative to\
    \ that.\nDocuSign does not currently provide tools to derive the offset values.\
    \ Determination of the proper offset will likely require some trial-and-error.\n\
    \n### Rules for working with anchor tags\n\nWhen anchor tabs are used, all documents\
    \ in the envelope are searched for the `anchorString` property.\n\n* You set the\
    \ text of the anchor string in the `anchorString` property. DocuSign tabs are\
    \ created for each instance of the `anchorString` property within the document,\
    \ so special care must be taken to establish unique anchor strings that do not\
    \ result in unintentional tabs.\n* You cannot use the same anchored tab for different\
    \ recipients for the same document.\n* The DocuSign system cannot search for text\
    \ that is embedded in an image when checking for anchor strings.\n* X or Y offsets\
    \ supplied for a tab apply to all instances of the tab in the document. To use\
    \ different offsets at different locations in the document for the same recipient,\
    \ create multiple, unique anchor tabs.\n* If the Y offset value of an anchor string\
    \ would force a tab outside of the page boundaries, the tag is placed at the page\
    \ boundary. If the X offset value places a tab outside of the page boundaries,\
    \ the error message `Invalid_User_Offset` is sent. The error message includes\
    \ the X offset that resulted in the error.\n* The system does not support an anchor\
    \ string embedded in the form of a PDF X-object in the document.\n* The system\
    \ does not re-flow the text that surrounds the anchor tabs. It is the responsibility\
    \ of the document author to provide sufficient white space to contain the potential\
    \ width of the ultimate tab value.\n\n### Tips and Tricks\n\nThe following are\
    \ tips for effective use of anchor tags:\n* In order to avoid unintentional conflicts\
    \ between text contained in an `anchorString` property and the text that naturally\
    \ exists in documents, establish a codified syntax for the anchor string text\
    \ that is unlikely to appear elsewhere in a document.\n* Develop an extensible\
    \ and consistent syntax that can be used across multiple document types.\n* Especially\
    \ for documents that have variable numbers of tabs or signers, author the source\
    \ document to include hidden anchor tabs for all potential signers/permutations.\
    \ Then, control the tabs that are actually placed by including/excluding the anchor\
    \ tabs in the request. This approach allows a single document to be used for all\
    \ use cases instead of maintaining separate documents for each scenario.\n\n##\
    \ Automatically Populating Tabs\n\nIf you want similar tab types\nto automatically\
    \ populate with the same data,\nyou must follow these guidelines:\n\n* Each `tabLabel`\
    \ entry must have the characters\n  `\\\\*` in front of the label.\n  If you omit\
    \ the `\\\\*` prefix,\n  only the first occurrence of the tab is populated.\n\n\
    \  When automatically populating tabs,\n  the `tabLabel` must not contain any\
    \ spaces.\n  In the JSON example below,\n  the Text tabs  properties `StudentLastName`\
    \ and `StudentFirstName`\n  will be auto-populated as specified (\"Doe\" and \"\
    John\")\n  each place they appear throughout the envelope.\n\n  ```\n  \"tabs\"\
    : {\n    \"textTabs\": [\n    {\n      \"tabLabel\": \"\\\\*StudentLastName\"\
    ,\n      \"value\": \"Doe\"\n    },\n    {\n      \"tabLabel\": \"\\\\*StudentFirstName\"\
    ,\n      \"value\": \"John\"\n    }]\n  }\n  ```\n\n* Each occurrence of the tab\
    \ must have identical properties.\n\n  For example, suppose there are two Text\
    \ tabs in a document,\n  each with `tabLabel` set to `Name`.\n  If one tab has\
    \ the `bold` property set to **true**,\n  and the other has the `bold` property\
    \ set to **false**,\n  only the first one will be populated.\n  In order to automatically\
    \ populate both occurrences\n  of the `Name` Text tabs,\n  the `bold` property\
    \ must be set to the same value for both tabs.\n"
- name: TemplateViews
  description: |
    The TemplateViews resource
    provides a method returns a URL
    that you can embed into your application
    to provide access to the DocuSign UI.

    One template view is available:

    * Edit View - the DocuSign UI for editing a template.

    This resource is related to the [EnvelopeViews][envelopeviews] resource.
    Both enable you to embed the DocuSign UI into your application.


    [envelopeviews]: https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeViews/
- name: UserCustomSettings
  description: |-
    The UserCustomSettings resource provides methods that allow you to manage the custom settings for a user.

    Custom settings are a flexible way to store and retrieve custom user information that can be used in your own system.

    There is a limit on the size for all the custom user settings for a single user. All the custom user settings for a single user is limited to 4,000 characters, which includes the xml and json structure for the settings.
- name: UserProfiles
  description: The UserProfiles resource provides methods that allow you to manage
    a user's profile.
- name: Users
  description: "The Users resource provides methods that allow you to manage users\
    \ for an account. The \"title\" field in the Users object – used in the Users:create,\
    \ delete, deleteProfile Image, get, getProfileImage, getSettings, list, update,\
    \ updateList, updateProfileImage, updateSettings calls is not used. Instead, the\
    \ user's job title may be retrieved and set using the UserProfiles: get and update\
    \ methods. See [UserProfiles](https://developers.docusign.com/esign-rest-api/reference/Users/UserProfiles)\
    \ for more information."
- name: UserSignatures
  description: The UserSignatures resource provides methods that allow you manage
    the  intials and signature images for a user.
- name: Contacts
  description: |
    The Contacts resource provides methods that allow you to manage contacts.
- name: EnvelopeAttachments
  description: |
    The EnvelopeAttachments resource provides methods that allow you to manage attachments.
- name: AccountPermissionProfiles
  description: |
    The AccountPermissionProfiles resource provides methods that allow you to manage permission profiles.
- name: PowerForms
  description: |
    The PowerForms resource provides methods that allow you to manage power forms.
- name: PowerFormData
  description: |
    The PowerFormData resource provides a method to access power form data.
- name: AccountTabSettings
  description: |
    The AccountTabSettings resource provides methods that allow you to manage
    tab settings for an account.
- name: ENoteConfigurations
  description: |
    The ENoteConfigurations resource provides methods that allow you to manage
    information for the eNote eOriginal integration.
- name: WorkspaceItems
  description: |
    The WorkspaceItems resource provides methods that allow you to manage
    workspace items.
- name: Workspaces
  description: |
    The Workspaces resource provides methods that allow you to manage workspaces.
- name: ChunkedUploads
  description: "The ChunkedUploads resource provides methods to complete integrity\
    \ checks, and to add, commit, retrieve, initiate and delete chunked uploads."
- name: EnvelopeFormData
  description: 'The EnvelopeFormData resource provides methods that manage forms in
    an envelope. '
- name: EnvelopeDocumentVisibility
  description: "The Envelope Documents Visibility resource provides methods that manage\
    \ document views and insights in an envelope. \n"
- name: TemplateDocumentVisibility
  description: 'The Template Document Visibility resource provides methods that allow
    views into envelope templates. '
- name: AccountPasswordRules
  description: "The AccountPasswordRules resource provides methods that allow you\
    \ to obtain and update account password rules, as well as membership and account\
    \ rules."
- name: AccountWatermarks
  description: "The AccountWatermarks resource provides methods that allow you to\
    \ obtain, preview and update watermark information."
- name: PaymentGatewayAccounts
  description: ""
- name: NotaryJournals
  description: ""
- name: IdentityVerifications
  description: ""
- name: EnvelopeDocumentHtmlDefinitions
  description: ""
- name: DocumentResponsiveHtmlPreview
  description: ""
- name: EnvelopeHtmlDefinitions
  description: ""
- name: ResponsiveHtmlPreview
  description: ""
- name: TemplateDocumentResponsiveHtmlPreview
  description: ""
- name: TemplateResponsiveHtmlPreview
  description: ""
- name: TemplateDocumentHtmlDefinitions
  description: ""
- name: TemplateHtmlDefinitions
  description: ""
- name: Comments
  description: ""
- name: ConnectSecret
  description: ""
- name: Signature
  description: ""
paths:
  /service_information:
    get:
      tags:
      - Services
      summary: Retrieves the available REST API versions.
      description: |-
        Retrieves the available REST API versions.

        DocuSign Production system: https://www.docusign.net/restapi/service_information
        DocuSign Demo system: https://demo.docusign.net/restapi/service_information

        You do not need an integrator key to view the REST API versions and resources.
      operationId: ServiceInformation_GetServiceInformation
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/serviceInformation'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: getService
      x-ds-method: get
      x-ds-service: Diagnostics
      x-ds-in-sdk: true
  /v2:
    get:
      tags:
      - Resources
      summary: Lists resources for REST version specified
      description: |-
        Retrieves the base resources available for the DocuSign REST APIs.

        You do not need an integrator key to view the REST API versions and resources.

        Example: https://demo.docusign.net/restapi/v2 lists all of the base resources available in version 2 of the REST API on the DocuSign Demo system.

        To view descriptions and samples of the service operations for all versions, remove the version number and add /help to the URL.

        Example: https://demo.docusign.net/restapi/help lists the REST API operations on the DocuSign Demo system with XML and JSON request and response samples.
      operationId: ServiceInformation_GetResourceInformation
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/resourceInformation'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: getResources
      x-ds-method: get
      x-ds-service: Diagnostics
      x-ds-in-sdk: true
  /v2/accounts:
    post:
      tags:
      - Accounts
      summary: Creates new accounts.
      description: "Creates new DocuSign accounts.\nYou can use this method to create\n\
        a single account\nor up to 100 accounts at a time.\n\nWhen creating a single\
        \ account,\nthe body of the request is a\n[`newAccountDefinition`][newAccountDefinition]\n\
        object.\n\nIf the request succeeds.\nit returns a\n201 (Created) code.\nThe\
        \ response returns the new account ID, password and the default user\ninformation\
        \ for each newly created account.\n\n\nWhen creating multiple accounts,\n\
        the body of the request is a\n`newAccountRequests`\nobject,\nwhich contains\
        \ one or more \n[`newAccountDefinition`][newAccountDefinition]\nobjects.\n\
        You can create up to 100 new accounts\nat a time this way.\n\nThe body for\
        \ a multi-account\ncreation request\nlooks like this in JSON:\n\n```\n{\n\
        \  \"newAccountRequests\": [\n    {\n      \"accountName\": \"accountone\"\
        ,\n      . . .\n    },\n    {\n      \"accountName\": \"accounttwo\",\n  \
        \    . . .\n    }\n  ]\n}\n```\n\nA multi-account request\nlooks like this\
        \ in XML:\n\n```\n<newAccountsDefinition xmlns:i=\"http://www.w3.org/2001/XMLSchema-instance\"\
        \ xmlns=\"http://www.docusign.com/restapi\">\n  <newAccountRequests>\n   \
        \ <newAccountDefinition>\n      . . .\n    </newAccountDefinition>\n    <newAccountDefinition>\n\
        \      . . .\n    </newAccountDefinition>\n  </newAccountRequests>\n</newAccountsDefinition>\n\
        ```\n\nA multi-account creation request\nmay succeed (report a 201 code)\n\
        even if some accounts could not be created.\nIn this case, the `errorDetails`\
        \ property\nin the response contains specific information\nabout the failure.\n\
        \n\n### Account Settings\n\nThe `accountSettings` property\nis a [name/value][nameValue]\n\
        list that can contain the following settings:\n\n| Name                  \
        \                             | Type    | Authorization Required         \
        \                             | Description                              \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                    |  \n| :-------------------------------------------------\
        \ | :------ | :----------------------------------------------------------\
        \ |
        \ |  \n| adoptSigConfig                                     | Boolean | Admin\
        \                                                       | When **true**, the\
        \ Signature Adoption Configuration page is available to account administrators.\
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                     |  \n| allowAccessCodeFormat       \
        \                       | Boolean | Admin                                \
        \                       | When **true**, the Access Code Format page is available\
        \ to account administrators.                                             \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \      |  \n| allowAccountManagementGranular                     | Boolean\
        \ | Admin                                                       | When **true**,\
        \ the Delegated Administration functionality is available to account.    \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                               |  \n| allowBulkSend     \
        \                                 | Boolean | Admin                      \
        \                                 | When **true**, the account can set if\
        \ the bulk send feature can be used.                                     \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                        |  \n| allowCDWithdraw                          \
        \          | Boolean | Admin                                             \
        \          | When **true**, signers can withdraw their consent to use electronic\
        \ signatures.                                                            \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                  |  \n|\
        \ allowConnectSendFinishLater                        | Boolean | Reserved\
        \                                                    | Reserved for DocuSign.\
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                       |  \n| allowDataDownload         \
        \                         | Boolean | Admin                              \
        \                         | When **true**, the account can download envelope\
        \ data.                                                                  \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \             |  \n| allowEnvelopeCorrect                               |\
        \ Boolean | Admin                                                       |\
        \ When **true**, the account allows in process envelopes to be corrected.\
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                              |  \n| allowEnvelopePublishReporting\
        \                      | Boolean | Admin                                 \
        \                      | When **true**, the account can access the Envelope\
        \ Publish section in Classic DocuSign Experience Account Administration. \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \           |  \n| allowExpressSignerCertificate                      | Boolean\
        \ | Admin                                                       | When **true**,\
        \ senders are allowed to use the DocuSign Express digital signatures.    \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                               |  \n| allowExternalSignaturePad\
        \                          | Boolean | Admin                             \
        \                          | When **true**, an external signature pad can\
        \ be used for signing. The signature pad type is set by the externalSignaturePadType\
        \ property.                                                              \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \      |  \n| allowInPerson                                      | Boolean\
        \ | SysAdmin                                                    | When **true**,\
        \ the account allows In Person Signing.                                  \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                               |  \n| allowMarkup       \
        \                                 | Boolean | Admin                      \
        \                                 | When **true**, the document markup feature\
        \ is enabled for the account.                                            \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                   |  \n| allowMemberTimezone                           \
        \     | Boolean | Admin                                                  \
        \     | When **true**, account users can set their own time zones.       \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                    |  \n\
        | allowMergeFields                                   | Boolean | Admin   \
        \                                                    | When **true**, the\
        \ account can use merge fields in conjunction with DocuSign for Salesforce.\
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                         |  \n| allowMultipleSignerAttachments\
        \                     | Boolean | Admin                                  \
        \                     | When **true**, multiple signer attachments are allowed\
        \ for an envelope.                                                       \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \       |  \n| allowOfflineSigning                                | Boolean\
        \ | Admin                                                       | When **true**,\
        \ the account can use Offline Signing and envelopes signed using offline signing\
        \ on mobile devices are synchronized with this account. This option and the\
        \ inSessionEnabled option must both be enabled (**true**) for a caller to\
        \ use offline signing.                                                   \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                      |  \n| allowOpenTrustSignerCertificate\
        \                    | Boolean | Admin                                   \
        \                    | When **true**, senders are allowed to use the OpenTrust\
        \ digital signatures.                                                    \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \      |  \n| allowPaymentProcessing                             | Boolean\
        \ | Admin                                                       | When **true**,\
        \ the account can access the Payment Processing set up page.             \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                               |  \n| allowPersonalSignerCertificate\
        \                     | Boolean | Admin                                  \
        \                     | When **true**, the account can specify that signers\
        \ must use personal signer certificates during signing.                  \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \          |  \n| allowPrivateSigningGroups                          | Boolean\
        \ | SysAdmin Read Only                                          | Reserved\
        \ for DocuSign. This currently returns false in a response. This setting is\
        \ only shown in the response when listing account settings.              \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                   |  \n| allowReminders\
        \                                     | Boolean | Admin                  \
        \                                     | When **true**, the reminder and expiration\
        \ functionality is available when sending envelops.                      \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                   |  \n| allowSafeBioPharmaSignerCertificate           \
        \     | Boolean | Admin                                                  \
        \     | When **true**, senders are allowed to use the SAFE BioPharma digital\
        \ signatures.                                                            \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                 |  \n| allowSharedTabs\
        \                                    | Boolean | Admin                   \
        \                                    | When **true**, the account allows users\
        \ to share custom tabs (fields). <br>   This setting is only shown when getting\
        \ account settings. It cannot be modified.                               \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                |  \n| allowSignDocumentFromHomePage                    \
        \  | Boolean | Admin                                                     \
        \  | When **true**, the Sign a Document Now button is available on the Home\
        \ tab.                                                                   \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                               |  \n| allowSignatureStamps\
        \                               | Boolean | Reserved                     \
        \                               | Reserved for DocuSign.                 \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                      |  \n| allowSignerReassign                        \
        \        | Boolean | Admin                                               \
        \        | When **true**, the account allows signers to reassign an envelope.\
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                   |  \n\
        | allowSignerReassignOverride                        | Boolean | Admin   \
        \                                                    | When **true**, the\
        \ sender has the option override the default account setting for reassigning\
        \ recipients.                                                            \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                        |  \n| allowSigningGroups       \
        \                          | Boolean | SysAdmin Read Only                \
        \                          | When **true**, the account can use signing groups.\
        \ This setting is only shown in the response when listing account settings.\
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \         |  \n| allowTabOrder                                      | Boolean\
        \ | Admin                                                       | When **true**,\
        \ the Tab Order field is available for use when creating tabs.           \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                               |  \n| allowWorkspaceComments\
        \                             | Boolean | Reserved                       \
        \                             | Reserved for DocuSign.                   \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                    |  \n| allowWorkspaceCreate                         \
        \      | Boolean | Admin                                                 \
        \      | When **true**, account users can create DocuSign Rooms.         \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                     |  \n\
        | attachCompletedEnvelope                            | Boolean | SysAdmin\
        \                                                    | When **true**, envelope\
        \ documents are included as a PDF file attachment for signing completed emails.\
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                |  \n| authenticationCheck              \
        \                  | String  | Admin                                     \
        \                  | Sets when authentication checks are applied for recipient\
        \ envelope access. This setting only applies to the following ID checks: <ul>\
        \ <li>Phone Authentication</li> <li>SMS Authentication</li> <li>Knowledge-Based\
        \ ID</li> </ul> This setting takes one of the following options: <ul> <li><p><code>initial_access</code>:\
        \ The authentication check always applies the first time a recipient accesses\
        \ the documents. Recipients are not asked to authenticate again when they\
        \ access the documents from the same browser on the same device. If the recipient\
        \ attempts to access the documents from a different browser or a different\
        \ device, the recipient must pass authentication again. Once authenticated,\
        \ that recipient is not challenged again on the new device or browser. The\
        \ ability for a recipient to skip authentication for documents is limited\
        \ to documents sent from the same sending account.</p></li> <li><p><code>each_access</code>:\
        \ Authentication checks apply every time a recipient attempts to access the\
        \ envelope. However, you can configure the Authentication Expiration setting\
        \ to allow recipients to skip authentication when they have recently passed\
        \ authentication by setting a variable timeframe.</p></li> </ul> |  \n| autoNavRule\
        \                                        | String  | Admin               \
        \                                        | The auto-navigation rule for the\
        \ account. Enumeration values are: <ul> <li><code>off</li></code> <li><code>required_fields</li></code>\
        \ <li><code>required_and_blank_fields</li></code> <li><code>all_fields</li></code>\
        \ <li><code>page_then_required_fields</li></code> <li><code>page_then_required_and_blank_fields</li></code>\
        \ <li><code>page_then_all_fields</li></code> </ul>                       \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                            |  \n| bulkSend                             \
        \              | Boolean | Admin                                         \
        \              | When **true**, the account allows bulk sending of envelopes.\
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \ |  \n| canSelfBrandSend                                   | Boolean | SysAdmin\
        \                                                    | When **true**, account\
        \ administrators can self-brand their sending console through the DocuSign\
        \ Console.                                                               \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                      |  \n| canSelfBrandSign           \
        \                        | Boolean | SysAdmin                            \
        \                        | When **true**, account administrators can self-brand\
        \ their signing console through the DocuSign Console.                    \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \         |  \n| conditionalFieldsEnabled                           | Boolean\
        \ | Admin                                                       | When **true**,\
        \ conditional fields can be used by the account.                         \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                               |  \n| consumerDisclosureFrequency\
        \                        | enum    | Admin                               \
        \                        | Possible values are: <ul> <li> <code>once</code>:\
        \ Per account, the supplemental document is displayed once only per userId.\
        \ </li> <li> <code>always</code>: Per envelope, the supplemental document\
        \ is displayed once only per userId. </li> <li> <code>each_access</code>:\
        \ - Per envelope, the supplemental document is displayed once only per recipientId.\
        \ </li> </ul>                                                            \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        |\
        \  \n| dataFieldRegexEnabled                              | Boolean | Admin\
        \                                                       | When **true**, the\
        \ Regex field is available for tabs with that property.                  \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                           |  \n| dataFieldSizeEnabled  \
        \                             | Boolean | Admin                          \
        \                             | When **true**, the maximum number of characters\
        \ field is available for tabs with that property.                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \              |  \n| dataPopulationScope                                |\
        \ String  | Admin                                                       |\
        \ Specifies how data is shared for tabs with the same tabLabel. There are\
        \ two possible values: <ul> <li> <code>document</code>: Tabs in a document\
        \ with the same label populate with the same data. </li> <li> <code>envelope</code>:\
        \ Tabs in all documents in the envelope with the same label populate with\
        \ the same data. </li> </ul> This setting applies to the following tab types:\
        \ <ul> <li> Check box </li> <li> Company </li> <li> Data Field </li> <li>\
        \ Dropdown List </li> <li> Full Name </li> <li> Formula </li> <li> Note </li>\
        \ <li> Title </li> </ul> Changing this setting affects envelopes that have\
        \ been sent but not completed.                                           \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                         |  \n| disableMobilePushNotifications\
        \                     | Boolean | Admin                                  \
        \                     | When **true**, mobile push notifications are disabled\
        \ on the account.                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \        |  \n| disableMobileSending                               | Boolean\
        \ | Admin                                                       | When **true**,\
        \ sending from mobile applications is disabled.                          \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                               |  \n| disableMultipleSessions\
        \                            | Boolean | Admin                           \
        \                            | When **true**, account users cannot be logged\
        \ into multiple sessions at once.                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                |  \n| disableUploadSignature                           \
        \  | Boolean | Admin                                                     \
        \  | When **true**, signers cannot use the upload signature/initials image\
        \ option when signing a document.                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                |  \n| documentConversionRestrictions\
        \                     | String  | Admin                                  \
        \                     | Sets the account document upload restriction for non-account\
        \ administrators. There are three possible values: <ul> <li> <code>no_restrictions</code>\
        \ : there are no restrictions on the type of documents that can be uploaded.\
        \ </li> <li> <code>allow_pdf_only</code> : only: non-administrators can only\
        \ upload PDF files. </li> <li> <code>no_upload</code> : Non-administrators\
        \ cannot upload files. </li> </ul>                                       \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                  |  \n| enableAutoNav  \
        \                                    | Boolean | SysAdmin  or EnableAutoNavByDSAdmin\
        \ is set                  | When **true**, the auto-navigation is enabled\
        \ for the account.                                                       \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                |  \n| enableCalculatedFields                           \
        \  | Boolean | Admin & AllowExpression is set                            \
        \  | When **true**, this account can use the Calculated Fields feature.  \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                 |  \n| enableDSPro\
        \                                        | Boolean | SysAdmin            \
        \                                        | When **true**, this account can\
        \ send and manage envelopes from the DocuSign Desktop Client.            \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                              |  \n| enableEnvelopeStampingByAccountAdmin\
        \               | Boolean | SysAdmin or account has EnableEnvelopeStampingByDSAdmin\
        \ set | When **true**, senders for this account can choose to have the envelope\
        \ ID stamped in the document margins.                                    \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                              |  \n| enablePaymentProcessing\
        \                            | Boolean | Admin & AllowPaymentProcessing is\
        \ set.                      | When **true**, Payment Processing is enabled\
        \ for the account.                                                       \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                 |  \n| enablePowerForm                                 \
        \   | Boolean | SysAdmin                                                 \
        \   | When **true**, PowerForm access is enabled for the account.        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                  |  \n|\
        \ enablePowerFormDirect                              | Boolean | Admin   \
        \                                                    | When **true**, direct\
        \ PowerForms are enabled for the account.                                \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                        |  \n| enableRecipientDomainValidation\
        \                    | Boolean | Admin                                   \
        \                    | When **true**, validation on recipient email domains\
        \ for DocuSign Access feature is enabled.                                \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \         |  \n| enableRequireSignOnPaper                           | Boolean\
        \ | Admin                                                       | When **true**,\
        \ the account can use the requireSignOnPaper option.                     \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                               |  \n| enableReservedDomain\
        \                               | Boolean | SysAdmin                     \
        \                               | When **true**, an account administrator\
        \ can reserve web domain and users.                                      \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                      |  \n| enableSMSAuthentication                    \
        \        | Boolean | Admin                                               \
        \        | When **true**, the account can use SMS authentication.        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                       |\
        \  \n| enableSendToAgent                                  | Boolean | SysAdmin\
        \                                                    | When **true**, this\
        \ account can use the Agent Recipient Type.                              \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                          |  \n| enableSendToIntermediary\
        \                           | Boolean | Admin & AllowSendToIntermediary is\
        \ set                      | When **true**, this account can use the Intermediary\
        \ Recipient Type.                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \         |  \n| enableSendToManage                                 | Boolean\
        \ | Admin                                                       | When **true**,\
        \ this account can use the Editor Recipient Type.                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                               |  \n| enableSequentialSigningAPI\
        \                         | Boolean | SysAdmin                           \
        \                         | When **true**, the account can define the routing\
        \ order of recipients for envelopes sent using the DocuSign API.         \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \            |  \n| enableSequentialSigningUI                          | Boolean\
        \ | SysAdmin                                                    | When **true**,\
        \ the account can define the routing order of recipients for envelopes sent\
        \ using the DocuSign console.                                            \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                             |  \n| enableSignOnPaper   \
        \                               | Boolean | Admin                        \
        \                               | When **true**, a user can allow signers\
        \ to use the sign on paper option.                                       \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                      |  \n| enableSignOnPaperOverride                  \
        \        | Boolean | Admin                                               \
        \        | When **true**, a user can override the default account setting\
        \ for the sign on paper option.                                          \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                       |\
        \  \n| enableSignerAttachments                            | Boolean | Admin\
        \                                                       | When **true**, a\
        \ user can request attachments from a signer.                            \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                             |  \n| enableTransactionPoint\
        \                             | Boolean | SysAdmin                       \
        \                             | When **true**, Transaction Point is enabled\
        \ for this account.                                                      \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                  |  \n| enableVaulting                                 \
        \    | Boolean | SysAdmin                                                \
        \    | When **true**, this account can use electronic vaulting for documents.\
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                               |  \n| enableWorkspaces\
        \                                   | Boolean | Admin                    \
        \                                   | When **true**, DocuSign Rooms is enabled\
        \ for the account.                                                       \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                     |  \n| envelopeIntegrationAllowed                  \
        \       | String  | SysAdmin                                             \
        \       | Shows the envelope integration rule for the account. <br> Enumeration\
        \ values are: NotAllowed, Full, IntegrationSendOnly.                     \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                |  \n| envelopeIntegrationEnabled\
        \                         | Boolean | Admin & EnvelopeIntegrationAllowed is\
        \ set                   | When **true**, envelope integration is enabled for\
        \ the account.                                                           \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \           |  \n| envelopeStamplingDefaultValue                      | Boolean\
        \ | (GET only)                                                  | When **true**,\
        \ envelopes sent by this account automatically have the envelope ID stamped\
        \ in the margins, unless the sender selects not to have them stamped.    \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                             |  \n| externalSignaturePadType\
        \                           | String  | Admin                            \
        \                           | Sets the type of signature pad that can be used.\
        \ Possible values are: <ul> <li> <code>none</code> </li> <li> <code>topaz</code>\
        \ </li> <li> <code>e_padv9</code> </li> <li> <code>e_pad_integrisign</code>\
        \ </li> </ul>                                                            \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \    |  \n| faxOutEnabled                                      | Boolean |\
        \ Admin                                                       | When **true**,\
        \ the account can use the fax out feature.                               \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                               |  \n| idCheckExpire     \
        \                                 | String  | Admin                      \
        \                                 | Indicates when a user's authentication\
        \ expires. Possible values are: <ul> <li> <code>always</code> </li> <li> <code>never</code>\
        \ </li> <li> <code>variable</code>: Use the value in <code>idCheckExpireDays</code>\
        \ </li> </ul>                                                            \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                   |  \n\
        | idCheckExpireDays                                  | Integer | Admin   \
        \                                                    | The number of days\
        \ before a user's authentication expires.  Valid only if the `IDCheckExpire`\
        \ value is Variable.                                                     \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                        |  \n| idCheckRequired          \
        \                          | String  | Admin                             \
        \                          | Indicates if authentication is required by envelope\
        \ signers. Possible values are: <ul> <li> <code>always</code> </li> <li> <code>never</code>\
        \ </li> <li> <code>optional</code>: Authentication is determined by the sender.\
        \ </li> </ul>                                                            \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                          |  \n| inPersonIDCheckQuestion\
        \                            | String  | Admin                           \
        \                            | The default question used by the In Person\
        \ signing host for an In Person signing session.                         \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                   |  \n| inSessionEnabled                              \
        \     | Boolean | Admin                                                  \
        \     | When **true**, the account can use In Session (embedded) and offline\
        \ signing. This option and the allowOfflineSigning option must both be enabled\
        \ (**true**) for a caller to use offline signing.                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                            |  \n| inSessionSuppressEmails\
        \                            | Boolean | Admin                           \
        \                            | When **true**, emails are not sent to the embedded\
        \ recipients on an envelope for the account.                             \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \           |  \n| maximumSigningGroups                               | String\
        \  | SysAdmin Read Only                                          | The maximum\
        \ number of signing groups an account can have. The default value for this\
        \ is 50. This setting is only shown in the response when listing account settings.\
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                        |  \n| maximumUsersPerSigningGroup\
        \                        | String  | SysAdmin Read Only                  \
        \                        | The maximum number of members in a signing group.\
        \ The default value for this is 50. This setting is only shown in the response\
        \ when listing account settings.                                         \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \       |  \n| mobileSessionTimeout                               | String\
        \  | Admin                                                       | Sets the\
        \ amount of idle activity time, in minutes, before a mobile user is automatically\
        \ logged off of the system. If the setting is 0, then DocuSign mobile application\
        \ users are never automatically logged off the system. The minimum setting\
        \ is 1 minute and the maximum setting is 120 minutes. <br> This setting only\
        \ applies to the DocuSign for iOS v2.8.2 or later mobile app.            \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                 |  \n| phoneAuthRecipientMayProvidePhoneNumber\
        \            | Boolean | Admin                                           \
        \            | When **true**, senders can select to allow the recipient to\
        \ provide a phone number for the Phone Authentication process.           \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \  |  \n| pkiSignDownloadedPDFDocs                           | String  | Admin\
        \                                                       | The policy for adding\
        \ a digital certificate to downloaded, printed and emailed documents. Possible\
        \ values are: <ul> <li> <code>no_sign</code> </li> <li> <code>no_sign_allow_user_override</code>\
        \ </li> <li> <code>yes_sign</code> </li> </ul>                           \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \            |  \n| recipientsCanSignOffline                           | Boolean\
        \ | Admin                                                       | When **true**,\
        \ envelopes signed using offline signing on mobile devices are synchronized\
        \ with this account.                                                     \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                             |  \n| requireDeclineReason\
        \                               | Boolean | Admin                        \
        \                               | When **true**, recipients that decline to\
        \ sign an envelope must provide a reason.                                \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                    |  \n| requireSignerCertificateType                 \
        \      | String  | Admin                                                 \
        \      | Sets which Digital Signature certificate is required when sending\
        \ envelopes. There are three possible values: <ul> <li> <code>none</code>:\
        \ a Digital Signature certificate is not required. </li> <li> <code>docusign_express</code>:\
        \ signers must use a DocuSign Express certificate. </li> <li> <code>docusign_personal</code>:\
        \ signers must use a DocuSign personal certificate. </li> <li> <code>open_trust</code>:\
        \ signers must use an OpenTrust certificate. </li> </ul>                 \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \              |  \n| rsaVeridAccountName                                |\
        \ String  | Admin                                                       |\
        \ The RSA account name.<br> Modifying this value might inadvertently disrupt\
        \ your ID Check capability. Ensure you have the correct value before changing\
        \ this.                                                                  \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                       |  \n| rsaVeridPassword\
        \                                   | String  | Admin                    \
        \                                   | The password used with the RSA account.<br>Modifying\
        \ this value might inadvertently disrupt your ID Check capability. Ensure\
        \ you have the correct value before changing this.                       \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \         |  \n| rsaVeridRuleset                                    | String\
        \  | Admin                                                       | The RSA\
        \ rule set used with the account. <br>Modifying this value might inadvertently\
        \ disrupt your ID Check capability. Ensure you have the correct value before\
        \ changing this.                                                         \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                              |  \n| rsaVeridUserId     \
        \                                | String  | Admin                       \
        \                                | The user ID for the RSA account. <br>Modifying\
        \ this value might inadvertently disrupt your ID Check capability. Ensure\
        \ you have the correct value before changing this.                       \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \               |  \n| savingCustomTabsEnabled                           \
        \ | Boolean | Admin                                                      \
        \ | When **true**, account users can save custom tabs.                   \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                |  \n| selfSignedRecipientEmailDocument\
        \                   | String  | Admin                                    \
        \                   | Sets how self-signed documents are presented to the\
        \ email recipients. Possible values are: <ul> <li><code>include_pdf</code>:\
        \ A PDF of the completed document is attached to the email</li> <li><code>include_link</code>:\
        \ A secure link to the self-signed documents is included in the email.</li>\
        \ </ul>                                                                  \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                         |  \n| selfSignedRecipientEmailDocumentRights\
        \             | Boolean | Admin                                          \
        \             | When **true**, account administrators can set the selfSignedRecipientEmailDocument\
        \ option.                                                                \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                   |  \n| selfSignedRecipientEmailDocumentUserOverride\
        \       | Boolean | Admin                                                \
        \       | When **true** the selfSignedRecipientEmailDocument userSetting can\
        \ be set for an individual user.  The userSetting will override the account\
        \ setting.                                                               \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                 |  \n| selfSignedRecipientEmailDocumentUserOverrideRights\
        \ | Boolean | Admin                                                      \
        \ | When **true**, account administrators can set the selfSignedRecipientEmailDocumentOverride\
        \ option.                                                                \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                           |  \n| sendToCertifiedDeliveryEnabled\
        \                     | Boolean | Admin                                  \
        \                     | When **true**, the Certified Deliveries Recipient\
        \ type can be used by the account.                                       \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \            |  \n| senderMustAuthenticateSigning                      | Boolean\
        \ | Admin                                                       | When **true**,\
        \ a sender that is also a recipient of an envelope must follow the authentication\
        \ requirements for the envelope.                                         \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                       |  \n| sessionTimeout            \
        \                         | Integer | Admin                              \
        \                         | The amount of idle activity time, in minutes,\
        \ before a user is automatically logged out of the system. The minimum setting\
        \ is 20 minutes and the maximum setting is 120 minutes.                  \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \           |  \n| setRecipEmailLang                                  | Boolean\
        \ | Admin                                                       | When **true**,\
        \ senders can set the email languages for each recipient.                \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                               |  \n| setRecipSignLang  \
        \                                 | Boolean | Admin                      \
        \                                 | When **true**, senders can set the signing\
        \ language used for each recipient.                                      \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                   |  \n| sharedCustomTabsEnabled                       \
        \     | Boolean | Admin                                                  \
        \     | When **true**, saved custom tabs can be shared with account users.\
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                   |  \n\
        | signDateFormat                                     | String  | Admin   \
        \                                                    | The date/time format\
        \ applied to Date Signed fields for the account.                         \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                         |  \n| signTimeShowAmPm        \
        \                           | Boolean | Admin                            \
        \                           | When **true**, AM or PM is shown as part of\
        \ the time for signDateFormat.                                           \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                  |  \n| signerAttachCertificateToEnvelopePDF           \
        \    | Boolean | AccountAdmin & account is selected in AccountSigningSettings|\
        \ When **true**, the Certificate of Completion is included in the envelope\
        \ documents PDF when it is downloaded.                                   \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                             |  \n| signerAttachConcat\
        \                                 | Boolean | Admin                      \
        \                                 | When **true**, signer attachments are\
        \ added to the parent document that the attachment tab is located on, instead\
        \ of the default behavior that creates a new document in the envelope for\
        \ every signer attachment.                                               \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                    |  \n| signerCanCreateAccount                       \
        \      | Boolean | AccountAdmin & account is selected in AccountSigningSettings|\
        \ When **true**, the signer without a DocuSign account can create a DocuSign\
        \ account after signing.                                                 \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                           |  \n| signerCanSignOnMobile\
        \                              | Boolean | AccountAdmin & account is selected\
        \ in AccountSigningSettings| When **true**, signers can use the DocuSign mobile\
        \ signing user interface.                                                \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \           |  \n| signerInSessionUseEnvelopeCompleteEmail            | Boolean\
        \ | Admin                                                       | When **true**,\
        \ an envelope complete email is sent to an In Session (embedded) or offline\
        \ signer after DocuSign processes the envelope.                          \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                             |  \n| signerLoginRequirements\
        \                            | String  | Admin                           \
        \                            | Sets the Login requirements for the signer.\
        \ There are four options: <ul> <li> <code>login_not_required</code>: The signer\
        \ is not required to log on to the system. </li> <li> <code>login_required_if_account_holder</code>:\
        \ If the signer has a DocuSign account, they must log on to sign the document.\
        \ </li> <li> <code>login_required_per_session</code>: The sender cannot send\
        \ an envelope to anyone who does not have a DocuSign account. </li> <li> <code>login_required_per_envelope</code>:\
        \ The sender cannot send an envelope to anyone who does not have a DocuSign\
        \ account and the signer must log on the system for each envelope they will\
        \ sign. </li> </ul> If you use Direct PowerForms or captive/embedded signers,\
        \ the \"Account required\" settings are bypassed for those signers. If your\
        \ workflow requires that the signer have an account, you should not use those\
        \ methods.                                                               \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                    |  \n\
        | signerMustHaveAccount                              | Boolean | AccountAdmin\
        \ & account is selected in AccountSigningSettings| When **true**, senders\
        \ can only send an envelope to a recipient that has a DocuSign account.  \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                       |  \n| signerMustLoginToSign     \
        \                         | Boolean | AccountAdmin & account is selected in\
        \ AccountSigningSettings| When **true**, an envelope signer must log in to\
        \ the DocuSign console to sign an envelope.                              \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \             |  \n| signerShowSecureFieldInitialValues                 |\
        \ Boolean | AccountAdmin & account is selected in AccountSigningSettings|\
        \ When **true**, the initial value of all SecureFields is written to the document\
        \ when sent.                                                             \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                      |  \n| tabDataLabelEnabled\
        \                                | Boolean | Admin                       \
        \                                | When **true**, senders can change the default\
        \ tabLabel for tabs.                                                     \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                |  \n| tabLockingEnabled                                \
        \  | Boolean | Admin                                                     \
        \  | When **true**, the locked option is available for tabs with that property.\
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                           |  \n| tabTextFormattingEnabled\
        \                           | Boolean | Admin                            \
        \                           | When **true**, the formatting options (font\
        \ type, font size, font color, bold, italic, and underline) are available\
        \ for tabs with those properties.                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                  |  \n| universalSignatureOptIn                        \
        \    | Boolean | Reserved                                                \
        \    | Reserved for DocuSign.                                            \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                   |  \n\
        | universalSignatureOptOut                           | Boolean | Reserved\
        \                                                    | Reserved for DocuSign.\
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                       |  \n| useAccountLevelEmail      \
        \                         | Boolean | AccountAdmin & account is selected in\
        \ AccountSigningSettings| When **true**, the content of notification emails\
        \ is determined at the account level.                                    \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \            |  \n| useConsumerDisclosure                              | Boolean\
        \ | Admin                                                       | When **true**,\
        \ the account  can use supplemental documents.                           \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                               |  \n| usesAPI           \
        \                                 | Boolean | SysAdmin                   \
        \                                 | When **true**, the account can use the\
        \ DocuSign API.                                                          \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                       |  \n\n\n\n\n\n[newAccountDefinition]: #/definitions/newAccountDefinition\n\
        [nameValue]: #/definitions/nameValue\n"
      operationId: Accounts_PostAccounts
      parameters:
      - name: preview_billing_plan
        in: query
        description: "When set to **true**, creates the account using a preview billing\
          \ plan."
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/newAccountDefinition'
          application/xml:
            schema:
              $ref: '#/components/schemas/newAccountDefinition'
        required: false
      responses:
        "201":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/newAccountSummary'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: create
      x-ds-method: create
      x-ds-service: Accounts
      x-ds-in-sdk: true
      x-codegen-request-body-name: newAccountDefinition
  /v2/accounts/{accountId}:
    get:
      tags:
      - Accounts
      summary: Retrieves the account information for the specified account.
      description: "Retrieves the account information for the specified account.\n\
        \n**Response**\nThe `canUpgrade` property contains is a Boolean that indicates\
        \ whether the account can be upgraded through the API. "
      operationId: Accounts_GetAccount
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: include_account_settings
        in: query
        description: "When set to **true**, includes the account settings for the\
          \ account in the response."
        schema:
          type: string
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/accountInformation'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: GetAccountInformation
      x-ds-method: get
      x-ds-service: Accounts
      x-ds-in-sdk: true
    delete:
      tags:
      - Accounts
      summary: Deletes the specified account.
      description: "This closes the specified account. You must be an account admin\
        \ to close your account. Once closed, an account must be reopened by DocuSign."
      operationId: Accounts_DeleteAccount
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful response.
          content: {}
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: delete
      x-ds-method: delete
      x-ds-service: Accounts
      x-ds-in-sdk: true
  /v2/accounts/{accountId}/billing_charges:
    get:
      tags:
      - Accounts
      summary: Gets list of recurring and usage charges for the account.
      description: "Retrieves the list of recurring and usage charges for the account.\
        \ This can be used to determine the charge structure and usage of charge plan\
        \ items. \n\nPrivileges required: account administrator "
      operationId: BillingCharges_GetAccountBillingCharges
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: include_charges
        in: query
        description: |
          Specifies which billing charges to return.
          Valid values are:

          * envelopes
          * seats
        schema:
          type: string
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/billingChargeResponse'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: getBillingCharges
      x-ds-method: getBillingCharges
      x-ds-service: Accounts
      x-ds-in-sdk: true
  /v2/accounts/{accountId}/billing_invoices:
    get:
      tags:
      - Invoices
      summary: Get a List of Billing Invoices
      description: "Retrieves a list of invoices for the account. If the from date\
        \ or to date queries are not specified, the response returns invoices for\
        \ the last 365 days.\n\nPrivileges required: account administrator "
      operationId: BillingInvoices_GetBillingInvoices
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: from_date
        in: query
        description: Specifies the date/time of the earliest invoice in the account
          to retrieve.
        schema:
          type: string
      - name: to_date
        in: query
        description: Specifies the date/time of the latest invoice in the account
          to retrieve.
        schema:
          type: string
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/billingInvoicesResponse'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: listInvoices
      x-ds-method: list
      x-ds-service: Billing
      x-ds-in-sdk: true
  /v2/accounts/{accountId}/billing_invoices/{invoiceId}:
    get:
      tags:
      - Invoices
      summary: Retrieves a billing invoice.
      description: "Retrieves the specified invoice. \n\n###### Note: If the `pdfAvailable`\
        \ property in the response is set to *true*, you can download a PDF version\
        \ of the invoice. To download the PDF, make the call again and change the\
        \ value of the `Accept` property in the header to `Accept: application/pdf`.\n\
        \nPrivileges required: account administrator\n\nThe response returns a list\
        \ of charges and information about the charges. Quantities are usually shown\
        \ as 'unlimited' or an integer. Amounts are shown in the currency set for\
        \ the account.\n\n**Response**\nThe following table provides a description\
        \ of the different `chargeName` property values. The information will grow\
        \ as more chargeable items are added to the system.\n\n| chargeName | Description\
        \ |\n| --- | --- |\n| id_check | ID Check Charge |\n| in_person_signing |\
        \ In Person Signing charge |\n| envelopes Included | Sent Envelopes for the\
        \ account |\n| age_verify | Age verification check |\n| ofac | OFAC Check\
        \ |\n| id_confirm | ID confirmation check |\n| student_authentication | STAN\
        \ PIN authentication check |\n| wet_sign_fax | Pages for returning signed\
        \ documents by fax |\n| attachment_fax | Pages for returning attachments by\
        \ fax |\n| phone_authentication | Phone authentication charge |\n| powerforms\
        \ | PowerForm envelopes sent |\n| signer_payments | Payment processing charge\
        \ |\n| outbound_fax | Send by fax charge |\n| bulk_recipient_envelopes | Bulk\
        \ Recipient Envelopes sent |\n| sms_authentications | SMS authentication charge\
        \ |\n| saml_authentications | SAML authentication charge |\n| express_signer_certificate\
        \ | DocuSign Express Certificate charge |\n| personal_signer_certificate |\
        \ Personal Signer Certificate charge |\n| safe_certificate | SAFE BioPharma\
        \ Signer Certificate charge |\n| seats | Included active seats charge |\n\
        | open_trust_certificate | OpenTrust Signer Certificate charge | "
      operationId: BillingInvoices_GetBillingInvoice
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: invoiceId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/billingInvoice'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: getInvoice
      x-ds-method: get
      x-ds-service: Billing
      x-ds-in-sdk: true
  /v2/accounts/{accountId}/billing_invoices_past_due:
    get:
      tags:
      - Invoices
      summary: Get a list of past due invoices.
      description: "Returns a list past due invoices for the account and notes if\
        \ payment can be made through the REST API. \n\nPrivileges Required: account\
        \ administrator"
      operationId: BillingInvoices_GetBillingInvoicesPastDue
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/billingInvoicesSummary'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: listInvoicesPastDue
      x-ds-method: listPastDue
      x-ds-service: Billing
      x-ds-in-sdk: true
  /v2/accounts/{accountId}/billing_payments:
    get:
      tags:
      - Payments
      summary: Gets payment information for one or more payments.
      description: "Retrieves a list containing information about one or more payments.\
        \ If the from date or to date queries are not used, the response returns payment\
        \ information for the last 365 days. \n\nPrivileges required: account administrator "
      operationId: BillingPayments_GetPaymentList
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: from_date
        in: query
        description: Specifies the date/time of the earliest payment in the account
          to retrieve.
        schema:
          type: string
      - name: to_date
        in: query
        description: Specifies the date/time of the latest payment in the account
          to retrieve.
        schema:
          type: string
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/billingPaymentsResponse'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: listPayments
      x-ds-method: list
      x-ds-service: Billing
      x-ds-in-sdk: true
    post:
      tags:
      - Payments
      summary: Posts a payment to a past due invoice.
      description: "Posts a payment to a past due invoice. \n\n###### Note: This can\
        \ only be used if the `paymentAllowed` value for a past due invoice is true.\
        \ This can be determined calling [ML:GetBillingInvoicesPastDue].\n\nThe response\
        \ returns information for a single payment, if a payment ID was used in the\
        \ endpoint, or a list of payments. If the from date or to date queries or\
        \ payment ID are not used, the response returns payment information for the\
        \ last 365 days. If the request was for a single payment ID, the `nextUri`\
        \ and `previousUri` properties are not returned.\n\nPrivileges required: account\
        \ administrator"
      operationId: BillingPayments_PostPayment
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/billingPaymentRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/billingPaymentRequest'
        required: false
      responses:
        "201":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/billingPaymentResponse'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: makePayment
      x-ds-method: create
      x-ds-service: Billing
      x-ds-in-sdk: true
      x-codegen-request-body-name: billingPaymentRequest
  /v2/accounts/{accountId}/billing_payments/{paymentId}:
    get:
      tags:
      - Payments
      summary: Gets billing payment information for a specific payment.
      description: "Retrieves the information for a specified payment. \n\nPrivileges\
        \ required: account administrator "
      operationId: BillingPayments_GetPayment
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: paymentId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/billingPaymentItem'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: getPayment
      x-ds-method: get
      x-ds-service: Billing
      x-ds-in-sdk: true
  /v2/accounts/{accountId}/billing_plan:
    get:
      tags:
      - BillingPlans
      summary: Get Account Billing Plan
      description: "Retrieves the billing plan information for the specified account,\
        \ including the current billing plan, successor plans, billing address, and\
        \ billing credit card.\n\nBy default the successor plan and credit card information\
        \ is included in the response. This information can be excluded from the response\
        \ by adding the appropriate optional query string with the `setting` set to\
        \ **false**. \n\nResponse\n\nThe response returns the billing plan information,\
        \ including the currency code, for the plan. The `billingPlan` and `succesorPlans`\
        \ property values are the same as those shown in the [ML:Get Billing Plan\
        \ Details] reference. the `billingAddress` and `creditCardInformation` property\
        \ values are the same as those shown in the [ML:Update Billing Plan] reference.\n\
        \n###### Note: When credit card number information is shown, a mask is applied\
        \ to the response so that only the last 4 digits of the card number are visible. "
      operationId: BillingPlan_GetBillingPlan
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: include_credit_card_information
        in: query
        description: "When set to **true**, payment information including credit card\
          \ information will show in the return."
        schema:
          type: string
      - name: include_metadata
        in: query
        description: "When set to **true**, the `canUpgrade` and `renewalStatus` properities\
          \ are included the response and an array of `supportedCountries` property\
          \ is added to the `billingAddress` information. "
        schema:
          type: string
      - name: include_successor_plans
        in: query
        description: "When set to **true**, excludes successor information from the\
          \ response."
        schema:
          type: string
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/accountBillingPlanResponse'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: getPlan
      x-ds-method: getAccountPlan
      x-ds-service: Billing
      x-ds-in-sdk: true
    put:
      tags:
      - BillingPlans
      summary: Updates the account billing plan.
      description: "Updates the billing plan information, billing address, and credit\
        \ card information for the specified account."
      operationId: BillingPlan_PutBillingPlan
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: preview_billing_plan
        in: query
        description: "When set to **true**, updates the account using a preview billing\
          \ plan."
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/billingPlanInformation'
          application/xml:
            schema:
              $ref: '#/components/schemas/billingPlanInformation'
        required: false
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/billingPlanUpdateResponse'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: updatePlan
      x-ds-method: update
      x-ds-service: Billing
      x-ds-in-sdk: true
      x-codegen-request-body-name: billingPlanInformation
  /v2/accounts/{accountId}/billing_plan/credit_card:
    get:
      tags:
      - BillingPlans
      summary: Get metadata for a given credit card.
      operationId: BillingPlan_GetCreditCardInfo
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/creditCardInformation'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: getCreditCardInfo
      x-ds-method: getCreditCard
      x-ds-service: Billing
      x-ds-in-sdk: true
  /v2/accounts/{accountId}/billing_plan/purchased_envelopes:
    put:
      tags:
      - BillingPlans
      summary: "Reserverd: Purchase additional envelopes."
      description: "Reserved: At this time, this endpoint is limited to DocuSign internal\
        \ use only. Completes the purchase of envelopes for your account. The actual\
        \ purchase is done as part of an internal workflow interaction with an envelope\
        \ vendor."
      operationId: PurchasedEnvelopes_PutPurchasedEnvelopes
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/purchasedEnvelopesInformation'
          application/xml:
            schema:
              $ref: '#/components/schemas/purchasedEnvelopesInformation'
        required: false
      responses:
        "200":
          description: Successful response.
          content: {}
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: purchaseEnvelopes
      x-ds-method: purchaseEnvelopes
      x-ds-service: Billing
      x-ds-in-sdk: true
      x-codegen-request-body-name: purchasedEnvelopesInformation
  /v2/accounts/{accountId}/brands:
    get:
      tags:
      - AccountBrands
      summary: Gets a list of brand profiles.
      description: Retrieves the list of brand profiles associated with the account
        and the default brand profiles. The Account Branding feature (accountSettings
        properties `canSelfBrandSend` and `canSelfBrandSend`)  must be set to **true**
        for the account to use this call.
      operationId: Brands_GetBrands
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: exclude_distributor_brand
        in: query
        description: "When set to **true**, excludes distributor brand information\
          \ from the response set."
        schema:
          type: string
      - name: include_logos
        in: query
        description: "When set to **true**, returns the logos associated with the\
          \ brand."
        schema:
          type: string
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AccountBrands'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: listBrands
      x-ds-method: list
      x-ds-service: Accounts
      x-ds-in-sdk: true
    post:
      tags:
      - AccountBrands
      summary: Creates one or more brand profile files for the account.
      description: |-
        Creates one or more brand profile files for the account. The Account Branding feature (accountSettings properties `canSelfBrandSend` and `canSelfBrandSig`) must be set to **true** for the account to use this call.

        An error is returned if `brandId` property for a brand profile is already set for the account. To upload a new version of an existing brand profile, you must delete the profile and then upload the newer version.

        When brand profile files are being uploaded, they must be combined into one zip file and the `Content-Type` must be `application/zip`.
      operationId: Brands_PostBrands
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/brand'
          application/xml:
            schema:
              $ref: '#/components/schemas/brand'
        required: false
      responses:
        "201":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AccountBrands'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: createBrand
      x-ds-method: create
      x-ds-service: Accounts
      x-ds-in-sdk: true
      x-codegen-request-body-name: brand
    delete:
      tags:
      - AccountBrands
      summary: Deletes one or more brand profiles.
      description: Deletes one or more brand profiles from an account. The Account
        Branding feature (accountSettings properties `canSelfBrandSend` and `canSelfBrandSend`)
        must be set to **true** to use this call.
      operationId: Brands_DeleteBrands
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/brandsRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/brandsRequest'
        required: false
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AccountBrands'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: deleteBrands
      x-ds-method: deleteList
      x-ds-service: Accounts
      x-ds-in-sdk: true
      x-codegen-request-body-name: brandsRequest
  /v2/accounts/{accountId}/brands/{brandId}:
    get:
      tags:
      - AccountBrands
      summary: Get information for a specific brand.
      operationId: Brand_GetBrand
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: brandId
        in: path
        description: The unique identifier of a brand.
        required: true
        schema:
          type: string
      - name: include_external_references
        in: query
        schema:
          type: string
      - name: include_logos
        in: query
        schema:
          type: string
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/brand'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: getBrand
      x-ds-method: get
      x-ds-service: Accounts
      x-ds-in-sdk: true
    put:
      tags:
      - AccountBrands
      summary: Updates an existing brand.
      operationId: Brand_PutBrand
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: brandId
        in: path
        description: The unique identifier of a brand.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/brand'
          application/xml:
            schema:
              $ref: '#/components/schemas/brand'
        required: false
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/brand'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: updateBrand
      x-ds-method: update
      x-ds-service: Accounts
      x-ds-in-sdk: true
      x-codegen-request-body-name: brand
    delete:
      tags:
      - AccountBrands
      summary: Removes a brand.
      operationId: Brand_DeleteBrand
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: brandId
        in: path
        description: The unique identifier of a brand.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful response.
          content: {}
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: deleteBrand
      x-ds-method: delete
      x-ds-service: Accounts
      x-ds-in-sdk: true
  /v2/accounts/{accountId}/brands/{brandId}/file:
    get:
      tags:
      - AccountBrands
      summary: Export a specific brand.
      operationId: BrandExport_GetBrandExportFile
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: brandId
        in: path
        description: The unique identifier of a brand.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful response.
          content: {}
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: getBrandExportFile
      x-ds-method: getExportFile
      x-ds-service: Accounts
      x-ds-in-sdk: true
  /v2/accounts/{accountId}/brands/{brandId}/logos/{logoType}:
    get:
      tags:
      - AccountBrands
      summary: Obtains the specified image for a brand.
      operationId: BrandLogo_GetBrandLogo
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: brandId
        in: path
        description: The unique identifier of a brand.
        required: true
        schema:
          type: string
      - name: logoType
        in: path
        description: "One of **Primary**, **Secondary** or **Email**."
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful response.
          content:
            image/png:
              schema:
                type: string
                format: binary
        "400":
          description: Error encountered.
          content:
            image/png:
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: getBrandLogoByType
      x-ds-method: getLogo
      x-ds-service: Accounts
      x-ds-in-sdk: true
    put:
      tags:
      - AccountBrands
      summary: Put one branding logo.
      operationId: BrandLogo_PutBrandLogo
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: brandId
        in: path
        description: The unique identifier of a brand.
        required: true
        schema:
          type: string
      - name: logoType
        in: path
        description: "One of **Primary**, **Secondary** or **Email**."
        required: true
        schema:
          type: string
      requestBody:
        description: "Brand logo binary Stream. Supported formats: JPG, GIF, PNG.\
          \ Maximum file size: 300 KB. Recommended dimensions: 296 x 76 pixels (larger\
          \ images will be resized). Changes may take up to one hour to display in\
          \ all places"
        content:
          image/png:
            schema:
              type: string
              format: binary
        required: true
      responses:
        "200":
          description: Successful response.
          content: {}
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: updateBrandLogoByType
      x-ds-method: updateLogo
      x-ds-service: Accounts
      x-ds-in-sdk: true
      x-codegen-request-body-name: logoFileBytes
    delete:
      tags:
      - AccountBrands
      summary: Delete one branding logo.
      operationId: BrandLogo_DeleteBrandLogo
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: brandId
        in: path
        description: The unique identifier of a brand.
        required: true
        schema:
          type: string
      - name: logoType
        in: path
        description: "One of **Primary**, **Secondary** or **Email**."
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful response.
          content: {}
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: deleteBrandLogoByType
      x-ds-method: deleteLogo
      x-ds-service: Accounts
      x-ds-in-sdk: true
  /v2/accounts/{accountId}/brands/{brandId}/resources:
    get:
      tags:
      - AccountBrands
      summary: Returns the specified account's list of branding resources (metadata).
      operationId: BrandResources_GetBrandResourcesList
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: brandId
        in: path
        description: The unique identifier of a brand.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/brandResourcesList'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: getBrandResources
      x-ds-method: listResources
      x-ds-service: Accounts
      x-ds-in-sdk: true
  /v2/accounts/{accountId}/brands/{brandId}/resources/{resourceContentType}:
    get:
      tags:
      - AccountBrands
      summary: Returns the specified branding resource file.
      operationId: BrandResources_GetBrandResources
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: brandId
        in: path
        description: The unique identifier of a brand.
        required: true
        schema:
          type: string
      - name: resourceContentType
        in: path
        required: true
        schema:
          type: string
      - name: langcode
        in: query
        schema:
          type: string
      - name: return_master
        in: query
        schema:
          type: string
      responses:
        "200":
          description: Successful response.
          content: {}
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: getBrandResourcesByContentType
      x-ds-method: getResource
      x-ds-service: Accounts
      x-ds-in-sdk: true
    put:
      tags:
      - AccountBrands
      summary: Uploads a branding resource file.
      operationId: BrandResources_PutBrandResources
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: brandId
        in: path
        description: The unique identifier of a brand.
        required: true
        schema:
          type: string
      - name: resourceContentType
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
              - file.xml
              type: object
              properties:
                file.xml:
                  type: string
                  description: Brand resource XML file.
                  format: binary
        required: true
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/brandResources'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: updateBrandResourcesByContentType
      x-ds-method: updateResource
      x-ds-service: Accounts
      x-ds-in-sdk: true
  /v2/accounts/{accountId}/captive_recipients/{recipientPart}:
    delete:
      tags:
      - Accounts
      summary: Deletes the signature for one or more captive recipient records.
      description: Deletes the signature for one or more captive recipient records;
        it is primarily used for testing. This provides a way to reset the signature
        associated with a client user ID so that a new signature can be created the
        next time the client user ID is used.
      operationId: CaptiveRecipients_DeleteCaptiveRecipientsPart
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: recipientPart
        in: path
        description: 'Signature is the only supported value. '
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/captiveRecipientInformation'
          application/xml:
            schema:
              $ref: '#/components/schemas/captiveRecipientInformation'
        required: false
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/captiveRecipientInformation'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: deleteCaptiveRecipient
      x-ds-method: deleteCaptiveRecipient
      x-ds-service: Accounts
      x-ds-in-sdk: true
      x-codegen-request-body-name: captiveRecipientInformation
  /v2/accounts/{accountId}/chunked_uploads:
    post:
      tags:
      - ChunkedUploads
      summary: Initiate a new ChunkedUpload.
      operationId: ChunkedUploads_PostChunkedUploads
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/chunkedUploadRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/chunkedUploadRequest'
        required: false
      responses:
        "201":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/chunkedUploadResponse'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: createChunkedUpload
      x-ds-api-status: beta
      x-ds-method: create
      x-ds-service: Envelopes
      x-ds-in-sdk: true
      x-codegen-request-body-name: chunkedUploadRequest
  /v2/accounts/{accountId}/chunked_uploads/{chunkedUploadId}:
    get:
      tags:
      - ChunkedUploads
      summary: Retrieves the current metadata of a ChunkedUpload.
      operationId: ChunkedUploads_GetChunkedUpload
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: chunkedUploadId
        in: path
        required: true
        schema:
          type: string
      - name: include
        in: query
        description: "A comma-separated list of additional information to include\
          \ in the response. Valid values are: \n\n- `recipients`: Includes information\
          \ about template recipients.\n- `folders`: Includes information about the\
          \ folder that holds the template. \n- `documents` : Includes information\
          \ about template documents.\n- `custom_fields`: Includes information about\
          \ template custom fields.\n- `notifications`: Includes information about\
          \ the notification settings for templates.\n- `advanced_templates`: Includes\
          \ advanced templates in the response. For example, these include templates\
          \ that use advanced recipient routing. We recommend that you use this option\
          \ to ensure that the response includes all relevant templates. "
        schema:
          type: string
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/chunkedUploadResponse'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: getChunkedUpload
      x-ds-api-status: beta
      x-ds-method: get
      x-ds-service: Envelopes
      x-ds-in-sdk: true
    put:
      tags:
      - ChunkedUploads
      summary: "Integrity-Check and Commit a ChunkedUpload, readying it for use elsewhere."
      operationId: ChunkedUploads_PutChunkedUploads
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: chunkedUploadId
        in: path
        required: true
        schema:
          type: string
      - name: action
        in: query
        schema:
          type: string
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/chunkedUploadResponse'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: updateChunkedUpload
      x-ds-api-status: beta
      x-ds-method: commit
      x-ds-service: Envelopes
      x-ds-in-sdk: true
    delete:
      tags:
      - ChunkedUploads
      summary: Delete an existing ChunkedUpload.
      operationId: ChunkedUploads_DeleteChunkedUpload
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: chunkedUploadId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/chunkedUploadResponse'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: deleteChunkedUpload
      x-ds-api-status: beta
      x-ds-method: delete
      x-ds-service: Envelopes
      x-ds-in-sdk: true
  /v2/accounts/{accountId}/chunked_uploads/{chunkedUploadId}/{chunkedUploadPartSeq}:
    put:
      tags:
      - ChunkedUploads
      summary: "Add a chunk, a chunk 'part', to an existing ChunkedUpload."
      operationId: ChunkedUploads_PutChunkedUploadPart
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: chunkedUploadId
        in: path
        required: true
        schema:
          type: string
      - name: chunkedUploadPartSeq
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/chunkedUploadRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/chunkedUploadRequest'
        required: false
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/chunkedUploadResponse'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: updateChunkedUploadPart
      x-ds-api-status: beta
      x-ds-method: update
      x-ds-service: Envelopes
      x-ds-in-sdk: true
      x-codegen-request-body-name: chunkedUploadRequest
  /v2/accounts/{accountId}/connect:
    get:
      tags:
      - ConnectConfigurations
      summary: Get Connect Configuration Information
      description: |-
        Retrieves all the DocuSign Custom Connect definitions for the specified account.

        ###### Note: Connect must be enabled for your account to use this function. This does not retrieve information for Connect configurations for Box, eOriginal, or Salesforce.
      operationId: Connect_GetConnectConfigs
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/connectConfigResults'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: listConfigurations
      x-ds-method: list
      x-ds-service: Connect
      x-ds-in-sdk: true
    put:
      tags:
      - ConnectConfigurations
      summary: Updates a specified Connect configuration.
      description: |-
        Updates the specified DocuSign Connect configuration in your account.

        ###### Note: Connect must be enabled for your account to use this function. This cannot be used to update Connect configurations for Box, eOriginal, or Salesforce.
      operationId: Connect_PutConnectConfiguration
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/connectCustomConfiguration'
          application/xml:
            schema:
              $ref: '#/components/schemas/connectCustomConfiguration'
        required: false
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/connectCustomConfiguration'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: updateConfiguration
      x-ds-method: update
      x-ds-service: Connect
      x-ds-in-sdk: true
      x-codegen-request-body-name: connectCustomConfiguration
    post:
      tags:
      - ConnectConfigurations
      summary: Creates a connect configuration for the specified account.
      description: |-
        Creates a DocuSign Custom Connect definition for your account. DocuSign Connect enables the sending of real-time data updates to external applications. These updates are generated by user transactions as the envelope progresses through actions to completion. The Connect Service provides updated information about the status of these transactions and returns updates that include the actual content of document form fields. Be aware that, these updates might or might not include the document itself. For more information about Connect, see the [ML:DocuSign Connect Service Guide].

        ###### Note: Connect must be enabled for your account to use this function. This cannot be used to set up Connect configurations for Salesforce or eOriginal.
      operationId: Connect_PostConnectConfiguration
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/connectCustomConfiguration'
          application/xml:
            schema:
              $ref: '#/components/schemas/connectCustomConfiguration'
        required: false
      responses:
        "201":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/connectCustomConfiguration'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: createConfiguration
      x-ds-method: create
      x-ds-service: Connect
      x-ds-in-sdk: true
      x-codegen-request-body-name: connectCustomConfiguration
  /v2/accounts/{accountId}/connect/{connectId}:
    get:
      tags:
      - ConnectConfigurations
      summary: Get information on a Connect Configuration
      description: |
        Retrieves the information for the specified DocuSign Connect configuration.

        ###### Note: Connect must be enabled for your account to use this function.
      operationId: Connect_GetConnectConfig
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: connectId
        in: path
        description: The ID of the custom Connect configuration being accessed.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/connectConfigResults'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: getConfiguration
      x-ds-method: get
      x-ds-service: Connect
      x-ds-in-sdk: true
    delete:
      tags:
      - ConnectConfigurations
      summary: Deletes the specified connect configuration.
      description: "Deletes the specified DocuSign Connect configuration.\n\n######\
        \ Note: Connect must be enabled for your account to use this function.\n\n\
        \ \n"
      operationId: Connect_DeleteConnectConfig
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: connectId
        in: path
        description: The ID of the custom Connect configuration being accessed.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful response.
          content: {}
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: deleteConfiguration
      x-ds-method: delete
      x-ds-service: Connect
      x-ds-in-sdk: true
  /v2/accounts/{accountId}/connect/{connectId}/users:
    get:
      tags:
      - ConnectConfigurations
      summary: Returns users from the configured Connect service.
      description: Returns users from the configured Connect service.
      operationId: Connect_GetConnectUsers
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: connectId
        in: path
        description: The ID of the custom Connect configuration being accessed.
        required: true
        schema:
          type: string
      - name: count
        in: query
        description: |
          Optional. Number of items to return.
        schema:
          type: string
      - name: email_substring
        in: query
        description: Filters the returned user records by the email address or a sub-string
          of email address.
        schema:
          type: string
      - name: list_included_users
        in: query
        schema:
          type: string
      - name: start_position
        in: query
        description: The position within the total result set from which to start
          returning values. The value **thumbnail** may be used to return the page
          image.
        schema:
          type: string
      - name: status
        in: query
        description: "Filters the results by user status.\nYou can specify a comma-separated\n\
          list of the following statuses:\n\n* ActivationRequired \n* ActivationSent\
          \ \n* Active\n* Closed \n* Disabled\n"
        schema:
          type: string
      - name: user_name_substring
        in: query
        description: Filters the user records returned by the user name or a sub-string
          of user name.
        schema:
          type: string
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/integratedUserInfoList'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: connectUsers
      x-ds-method: listUsers
      x-ds-service: Connect
      x-ds-in-sdk: true
  /v2/accounts/{accountId}/connect/envelopes/{envelopeId}/retry_queue:
    put:
      tags:
      - ConnectEvents
      summary: Republishes Connect information for the specified envelope.
      description: Republishes Connect information for the specified envelope.
      operationId: ConnectPublish_PutConnectRetryByEnvelope
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: envelopeId
        in: path
        description: 'The envelope''s GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec '
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/connectFailureResults'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: retryEventForEnvelope
      x-ds-method: retryForEnvelope
      x-ds-service: Connect
      x-ds-in-sdk: true
  /v2/accounts/{accountId}/connect/envelopes/retry_queue:
    put:
      tags:
      - ConnectEvents
      summary: Republishes Connect information for multiple envelopes.
      description: "Republishes Connect information for the  specified set of envelopes.\
        \ The primary use is to republish Connect post failures by including envelope\
        \ IDs for the envelopes that failed to post in the request. The list of envelope\
        \ IDs that failed to post correctly can be retrieved by calling to [ML:GetConnectLog]\
        \ retrieve the failure log."
      operationId: ConnectPublish_PutConnectRetry
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/connectFailureFilter'
          application/xml:
            schema:
              $ref: '#/components/schemas/connectFailureFilter'
        required: false
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/connectFailureResults'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: retryEventForEnvelopes
      x-ds-method: retryForEnvelopes
      x-ds-service: Connect
      x-ds-in-sdk: true
      x-codegen-request-body-name: connectFailureFilter
  /v2/accounts/{accountId}/connect/failures:
    get:
      tags:
      - ConnectEvents
      summary: Gets the Connect failure log information.
      description: "Retrieves the Connect Failure Log information. It can be used\
        \ to determine which envelopes failed to post, so a republish request can\
        \ be created."
      operationId: ConnectFailures_GetConnectLogs
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: from_date
        in: query
        description: "Start of the search date range. Only returns templates created\
          \ on or after this date/time. If no value is specified, there is no limit\
          \ on the earliest date created."
        schema:
          type: string
      - name: to_date
        in: query
        description: "End of the search date range. Only returns templates created\
          \ up to this date/time. If no value is provided, this defaults to the current\
          \ date."
        schema:
          type: string
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/connectLogs'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: listEventFailureLogs
      x-ds-method: listFailures
      x-ds-service: Connect
      x-ds-in-sdk: true
  /v2/accounts/{accountId}/connect/failures/{failureId}:
    delete:
      tags:
      - ConnectEvents
      summary: Deletes a Connect failure log entry.
      description: Deletes the Connect failure log information for the specified entry.
      operationId: ConnectFailures_DeleteConnectFailureLog
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: failureId
        in: path
        description: The ID of the failed connect log entry.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful response.
          content: {}
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: deleteEventFailureLog
      x-ds-method: deleteFailure
      x-ds-service: Connect
      x-ds-in-sdk: true
  /v2/accounts/{accountId}/connect/logs:
    get:
      tags:
      - ConnectEvents
      summary: Gets the Connect log.
      description: "Retrieves a list of connect log entries for your account.\n\n\
        ###### Note: The `enableLog` setting in the Connect configuration must be\
        \ set to true to enable logging. If logging is not enabled, then no log entries\
        \ are recorded. "
      operationId: ConnectLog_GetConnectLogs
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: from_date
        in: query
        description: "Start of the search date range. Only returns templates created\
          \ on or after this date/time. If no value is specified, there is no limit\
          \ on the earliest date created."
        schema:
          type: string
      - name: to_date
        in: query
        description: "End of the search date range. Only returns templates created\
          \ up to this date/time. If no value is provided, this defaults to the current\
          \ date."
        schema:
          type: string
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/connectLogs'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: listEventLogs
      x-ds-method: list
      x-ds-service: Connect
      x-ds-in-sdk: true
    delete:
      tags:
      - ConnectEvents
      summary: Gets a list of Connect log entries.
      description: |-
        Retrieves a list of connect log entries for your account.

        ###### Note: The `enableLog` property in the Connect configuration must be set to **true** to enable logging. If logging is not enabled, then no log entries are recorded.
      operationId: ConnectLog_DeleteConnectLogs
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful response.
          content: {}
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: deleteEventLogs
      x-ds-method: deleteList
      x-ds-service: Connect
      x-ds-in-sdk: true
  /v2/accounts/{accountId}/connect/logs/{logId}:
    get:
      tags:
      - ConnectEvents
      summary: Get the specified Connect log entry.
      description: "Retrieves the specified Connect log entry for your account.\n\n\
        ###### Note: The `enableLog` setting in the Connect configuration must be\
        \ set to true to enable logging. If logging is not enabled, then no log entries\
        \ are recorded. "
      operationId: ConnectLog_GetConnectLog
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: logId
        in: path
        description: The ID of the connect log entry
        required: true
        schema:
          type: string
      - name: additional_info
        in: query
        description: "When true, the connectDebugLog information is included in the\
          \ response."
        schema:
          type: string
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/connectLog'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: getEventLog
      x-ds-method: get
      x-ds-service: Connect
      x-ds-in-sdk: true
    delete:
      tags:
      - ConnectEvents
      summary: Deletes a specified Connect log entry.
      description: |
        Deletes a specified entry from the Connect Log.
      operationId: ConnectLog_DeleteConnectLog
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: logId
        in: path
        description: The ID of the connect log entry
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful response.
          content: {}
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: deleteEventLog
      x-ds-method: delete
      x-ds-service: Connect
      x-ds-in-sdk: true
  /v2/accounts/{accountId}/connect/secret:
    post:
      tags:
      - ConnectSecret
      operationId: ConnectHMAC_CreateConnectSecret
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      responses:
        "201":
          description: Successful response.
          content: {}
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: createConnectSecret
      x-ds-method: createConnectSecret
      x-ds-service: Uncategorized
      x-ds-in-sdk: true
  /v2/accounts/{accountId}/connect/secret/{keyId}:
    delete:
      tags:
      - ConnectSecret
      operationId: ConnectHMAC_DeleteConnectSecret
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: keyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful response.
          content: {}
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: deleteConnectSecret
      x-ds-method: deleteConnectSecret
      x-ds-service: Uncategorized
      x-ds-in-sdk: true
  /v2/accounts/{accountId}/consumer_disclosure:
    get:
      tags:
      - AccountConsumerDisclosures
      summary: Gets the Electronic Record and Signature Disclosure for the account.
      description: "Retrieves the Electronic Record and Signature Disclosure, with\
        \ HTML formatting, associated with the account. You can use an optional query\
        \ string to set the language for the disclosure."
      operationId: ConsumerDisclosure_GetConsumerDisclosure
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: langCode
        in: query
        description: "Specifies the language used in the response. The supported languages,\
          \ with the language value shown in parenthesis, are: Arabic (ar), Bulgarian\
          \ (bg), Czech (cs), Chinese Simplified (zh_CN), Chinese Traditional (zh_TW),\
          \ Croatian (hr), Danish (da), Dutch (nl), English US (en), English UK (en_GB),\
          \ Estonian (et), Farsi (fa), Finnish (fi), French (fr), French Canada (fr_CA),\
          \ German (de), Greek (el), Hebrew (he), Hindi (hi), Hungarian (hu), Bahasa\
          \ Indonesia (id), Italian (it), Japanese (ja), Korean (ko), Latvian (lv),\
          \ Lithuanian (lt), Bahasa Melayu (ms), Norwegian (no), Polish (pl), Portuguese\
          \ (pt), Portuguese Brazil (pt_BR), Romanian (ro), Russian (ru), Serbian\
          \ (sr), Slovak (sk), Slovenian (sl), Spanish (es),Spanish Latin America\
          \ (es_MX), Swedish (sv), Thai (th), Turkish (tr), Ukrainian (uk), and Vietnamese\
          \ (vi).\n\nAdditionally, the value can be set to `browser` to automatically\
          \ detect the browser language being used by the viewer and display the disclosure\
          \ in that language. \n"
        schema:
          type: string
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AccountConsumerDisclosures'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: getConsumerDisclosureDefault
      x-ds-method: getDefault
      x-ds-service: Accounts
      x-ds-in-sdk: true
  /v2/accounts/{accountId}/consumer_disclosure/{langCode}:
    get:
      tags:
      - AccountConsumerDisclosures
      summary: Gets the Electronic Record and Signature Disclosure.
      description: "Retrieves the Electronic Record and Signature Disclosure, with\
        \ HTML formatting, for the requested envelope recipient. This might be different\
        \ than the current account disclosure depending on account settings, such\
        \ as branding, and when the account disclosure was last updated. An optional\
        \ query string can be included to return the language for the disclosure.\
        \  "
      operationId: ConsumerDisclosure_GetConsumerDisclosureLangCode
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: langCode
        in: path
        description: "The simple type enumeration the language used in the response.\
          \ The supported languages, with the language value shown in parenthesis,\
          \ are:Arabic (ar), Bulgarian (bg), Czech (cs), Chinese Simplified (zh_CN),\
          \ Chinese Traditional (zh_TW), Croatian (hr), Danish (da), Dutch (nl), English\
          \ US (en), English UK (en_GB), Estonian (et), Farsi (fa), Finnish (fi),\
          \ French (fr), French Canada (fr_CA), German (de), Greek (el), Hebrew (he),\
          \ Hindi (hi), Hungarian (hu), Bahasa Indonesia (id), Italian (it), Japanese\
          \ (ja), Korean (ko), Latvian (lv), Lithuanian (lt), Bahasa Melayu (ms),\
          \ Norwegian (no), Polish (pl), Portuguese (pt), Portuguese Brazil (pt_BR),\
          \ Romanian (ro), Russian (ru), Serbian (sr), Slovak (sk), Slovenian (sl),\
          \ Spanish (es),Spanish Latin America (es_MX), Swedish (sv), Thai (th), Turkish\
          \ (tr), Ukrainian (uk) and Vietnamese (vi). Additionally, the value can\
          \ be set to \"browser\" to automatically detect the browser language being\
          \ used by the viewer and display the disclosure in that language."
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AccountConsumerDisclosures'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: getConsumerDisclosure
      x-ds-method: get
      x-ds-service: Accounts
      x-ds-in-sdk: true
    put:
      tags:
      - AccountConsumerDisclosures
      summary: Update Consumer Disclosure.
      operationId: ConsumerDisclosure_PutConsumerDisclosure
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: langCode
        in: path
        description: "The simple type enumeration the language used in the response.\
          \ The supported languages, with the language value shown in parenthesis,\
          \ are:Arabic (ar), Bulgarian (bg), Czech (cs), Chinese Simplified (zh_CN),\
          \ Chinese Traditional (zh_TW), Croatian (hr), Danish (da), Dutch (nl), English\
          \ US (en), English UK (en_GB), Estonian (et), Farsi (fa), Finnish (fi),\
          \ French (fr), French Canada (fr_CA), German (de), Greek (el), Hebrew (he),\
          \ Hindi (hi), Hungarian (hu), Bahasa Indonesia (id), Italian (it), Japanese\
          \ (ja), Korean (ko), Latvian (lv), Lithuanian (lt), Bahasa Melayu (ms),\
          \ Norwegian (no), Polish (pl), Portuguese (pt), Portuguese Brazil (pt_BR),\
          \ Romanian (ro), Russian (ru), Serbian (sr), Slovak (sk), Slovenian (sl),\
          \ Spanish (es),Spanish Latin America (es_MX), Swedish (sv), Thai (th), Turkish\
          \ (tr), Ukrainian (uk) and Vietnamese (vi). Additionally, the value can\
          \ be set to \"browser\" to automatically detect the browser language being\
          \ used by the viewer and display the disclosure in that language."
        required: true
        schema:
          type: string
      - name: include_metadata
        in: query
        description: |
          Reserved for DocuSign.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/consumerDisclosure'
          application/xml:
            schema:
              $ref: '#/components/schemas/consumerDisclosure'
        required: false
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/consumerDisclosure'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: updateConsumerDisclosure
      x-ds-method: update
      x-ds-service: Accounts
      x-ds-in-sdk: true
      x-codegen-request-body-name: consumerDisclosure
  /v2/accounts/{accountId}/contacts:
    put:
      tags:
      - Contacts
      summary: Replaces contacts associated with an account for the DocuSign service.
      operationId: Contacts_PutContacts
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/contactModRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/contactModRequest'
        required: false
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/contactUpdateResponse'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: putContacts
      x-ds-method: update
      x-ds-service: Users
      x-ds-in-sdk: true
      x-codegen-request-body-name: contactModRequest
    post:
      tags:
      - Contacts
      summary: "Imports multiple new contacts into the contacts collection from CSV,\
        \ JSON, or XML (based on content type)."
      operationId: Contacts_PostContacts
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/contactModRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/contactModRequest'
        required: false
      responses:
        "201":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/contactUpdateResponse'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: postContacts
      x-ds-method: create
      x-ds-service: Users
      x-ds-in-sdk: true
      x-codegen-request-body-name: contactModRequest
    delete:
      tags:
      - Contacts
      summary: Delete contacts associated with an account for the DocuSign service.
      operationId: Contacts_DeleteContacts
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/contactModRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/contactModRequest'
        required: false
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/contactUpdateResponse'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: deleteContacts
      x-ds-method: deleteList
      x-ds-service: Users
      x-ds-in-sdk: true
      x-codegen-request-body-name: contactModRequest
  /v2/accounts/{accountId}/contacts/{contactId}:
    get:
      tags:
      - Contacts
      summary: Gets a particular contact associated with the user's account.
      operationId: Contacts_GetContactById
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: contactId
        in: path
        description: The unique identifier of a person in the contacts address book.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/contactGetResponse'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: getContactById
      x-ds-method: get
      x-ds-service: Users
      x-ds-in-sdk: true
    delete:
      tags:
      - Contacts
      summary: Replaces a particular contact associated with an account for the DocuSign
        service.
      operationId: Contacts_DeleteContactWithId
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: contactId
        in: path
        description: The unique identifier of a person in the contacts address book.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/contactUpdateResponse'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: deleteContactWithId
      x-ds-method: delete
      x-ds-service: Users
      x-ds-in-sdk: true
  /v2/accounts/{accountId}/custom_fields:
    get:
      tags:
      - AccountCustomFields
      summary: Gets a list of custom fields associated with the account.
      description: |-
        Retrieves a list of envelope custom fields associated with the account. You can use these fields in the envelopes for your account to record information about the envelope, help search for envelopes and track information. The envelope custom fields are shown in the Envelope Settings section when a user is creating an envelope in the DocuSign member console. The envelope custom fields are not seen by the envelope recipients.

        There are two types of envelope custom fields, text, and list. A text custom field lets the sender enter the value for the field. The list custom field lets the sender select the value of the field from a list you provide.
      operationId: AccountCustomFields_GetAccountCustomFields
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AccountCustomFields'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: listCustomFields
      x-ds-method: list
      x-ds-service: Accounts
      x-ds-in-sdk: true
    post:
      tags:
      - AccountCustomFields
      summary: Creates an acount custom field.
      operationId: AccountCustomFields_PostAccountCustomFields
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: apply_to_templates
        in: query
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/customField'
          application/xml:
            schema:
              $ref: '#/components/schemas/customField'
        required: false
      responses:
        "201":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AccountCustomFields'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: createCustomField
      x-ds-method: create
      x-ds-service: Accounts
      x-ds-in-sdk: true
      x-codegen-request-body-name: customField
  /v2/accounts/{accountId}/custom_fields/{customFieldId}:
    put:
      tags:
      - AccountCustomFields
      summary: Updates an existing account custom field.
      operationId: AccountCustomFields_PutAccountCustomFields
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: customFieldId
        in: path
        required: true
        schema:
          type: string
      - name: apply_to_templates
        in: query
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/customField'
          application/xml:
            schema:
              $ref: '#/components/schemas/customField'
        required: false
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AccountCustomFields'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: updateCustomField
      x-ds-method: update
      x-ds-service: Accounts
      x-ds-in-sdk: true
      x-codegen-request-body-name: customField
    delete:
      tags:
      - AccountCustomFields
      summary: Delete an existing account custom field.
      operationId: AccountCustomFields_DeleteAccountCustomFields
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: customFieldId
        in: path
        required: true
        schema:
          type: string
      - name: apply_to_templates
        in: query
        schema:
          type: string
      responses:
        "200":
          description: Successful response.
          content: {}
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: deleteCustomField
      x-ds-method: delete
      x-ds-service: Accounts
      x-ds-in-sdk: true
  /v2/accounts/{accountId}/envelopes:
    get:
      tags:
      - Envelopes
      summary: Gets status changes for one or more envelopes.
      description: "Retrieves a list of envelopes that match your request. \nA large\
        \ set of optional filters let you filter\nby date,\nby envelope ID,\nor by\
        \ status codes.\n\nYour request must include one or more of the following\
        \ parameters:\n\n* `from_date`\n* `envelope_ids`\n* `transaction_ids`\n\n\n\
        Getting envelope status using `transaction_ids` is useful\nfor offline signing\
        \ situations where it can be used\ndetermine if an envelope was created or\
        \ not. It can be used\nfor the cases where a network connection was lost,\
        \ before\nthe envelope status could be returned.\n\nTo avoid unnecessary database\
        \ queries, the DocuSign\nsignature platform first checks requests to ensure\
        \ that the\nfilter set supplied does not result in a zero-size response\n\
        before querying the database. \n\nFor example, for a request with a `from_to_status`\
        \ of\n`delivered` and a current `status` of `created,sent`,\nDocuSign will\
        \ always return an empty list. \nThis is because the request translates to:\
        \ find the\nenvelopes that were delivered between the `from_date` and\n`to_date`\
        \ dates that have a current status of `created` or\n`sent`. Since an envelope\
        \ that has been delivered can\nnever have a status of `created` or `sent`,\
        \ a zero-size\nresponse would be generated. \nIn this case, DocuSign does\
        \ not query the database\nand returns an empty list immediately.\n\n\nThe\
        \ following table shows the valid current envelope\nstatuses (`status` parameter)\
        \ for the different status\nqualifiers (`from_to_status` parameter) in the\
        \ request. If\nthe status and status qualifiers in the API request do not\n\
        contain any of the values shown in the Valid Current\nStatuses column, then\
        \ an empty list is returned.\n\nClient applications should check that the\
        \ statuses (`status`\nparameter) they are requesting make sense for a given\n\
        `from_to_status` parameter value.\n\n| Status Qualifier<br>(`from_to_status`)\
        \ | Effective Status Qualifier | Valid Current Statuses                  \
        \                                    |  \n| :-------------------------------------\
        \ | :------------------------- | :--------------------------------------------------------------------------\
        \ |  \n| any (changed)                          | StatusChanged          \
        \    | any, created, sent, delivered, signed, completed, declined, voided,\
        \ deleted |  \n| created                                | Created        \
        \            | any, created, sent, delivered, signed, completed, declined,\
        \ voided, deleted |  \n| sent                                   | Sent   \
        \                    | any, sent, delivered, signed, completed, declined,\
        \ voided, deleted          |  \n| delivered                              |\
        \ StatusChanged              | any, delivered, signed, completed, declined,\
        \ voided, deleted                |  \n| signed                           \
        \      | StatusChanged              | any, signed, completed, declined, voided,\
        \ deleted                           |  \n| completed                     \
        \         | Completed                  | any, completed, declined, voided,\
        \ deleted                                   |  \n| declined              \
        \                 | StatusChanged              | any, declined, voided, deleted\
        \                                              |  \n| timedout<br>always return\
        \ zero results | StatusChanged              | any, voided, deleted       \
        \                                                 |  \n| voided          \
        \                       | Voided                     | any, voided, deleted\
        \                                                        |  \n| deleted  \
        \                              | StatusChanged              | any, deleted\
        \                                                                |  \n\n##\
        \ Extraneous results\n\nIn some cases, a request for a specific envelope status\
        \ will\ninclude envelopes with additional statuses. For example, in\na request\
        \ with a `from_date` of 2017-01-01, a `to_date` of\n2017-01-07 and the status\
        \ qualifier (`from_to_status`) set\nto `delivered`, the response set might\
        \ contain envelopes\nthat were created during that time period, but not delivered\n\
        during the time period. As a workaround, check the envelope\nstatus values\
        \ in the result set as needed. \n"
      operationId: Envelopes_GetEnvelopes
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: ac_status
        in: query
        description: "Specifies the Authoritative Copy Status for the envelopes. The\
          \ possible values are: Unknown, Original, Transferred, AuthoritativeCopy,\
          \ AuthoritativeCopyExportPending, AuthoritativeCopyExported, DepositPending,\
          \ Deposited, DepositedEO, or DepositFailed."
        schema:
          type: string
      - name: block
        in: query
        description: |
          Reserved for DocuSign.
        schema:
          type: string
      - name: count
        in: query
        description: |
          Optional. Number of items to return. Currently there is no implicit maximum limit of the number of items that can be returned.
        schema:
          type: string
      - name: custom_field
        in: query
        description: "Optional. Specifies a envelope custom field name and value searched\
          \ for in the envelopes. Format: `custom_envelope_field_name=desired_value`\n\
          \nExample: If you have an envelope custom field named \"Region\" and you\
          \ want to search for all envelopes where the value is \"West\" you would\
          \ use set this parameter to `Region=West`. \n \n"
        schema:
          type: string
      - name: email
        in: query
        description: |
          Limit results to envelopes
          sent by the account user
          with this email address.

          `user_name` must be given as well,
          and both `email` and `user_name`
          must refer to an existing account user.
        schema:
          type: string
      - name: envelope_ids
        in: query
        description: Comma separated list of `envelopeId` values.
        schema:
          type: string
      - name: from_date
        in: query
        description: |-
          Specifies the date and time
          to start looking for status changes.
          This parameter is required
          unless `envelopeIds` or `transactionIds`
          are set.


          Although you can use any date format
          supported by the .NET system library's
          [`DateTime.Parse()`][msoft] function,
          DocuSign recommends
          using [ISO 8601][] format dates
          with an explicit time zone offset
          If you do not provide
          a time zone offset,
          the method uses the server's time zone.

          For example, the following dates and times refer to the same instant:

          * `2017-05-02T01:44Z`
          * `2017-05-01T21:44-04:00`
          * `2017-05-01T18:44-07:00`


          [msoft]: https://msdn.microsoft.com/en-us/library/system.datetime.parse(v=vs.110).aspx#StringToParse
          [ISO 8601]: https://en.wikipedia.org/wiki/ISO_8601
        schema:
          type: string
      - name: from_to_status
        in: query
        description: "The status value checked for in the `from_date` to `to_date`\
          \ time period. \n\nPossible values are: Voided, Changed, Created, Deleted,\
          \ Sent, Delivered, Signed, Completed, Declined, TimedOut and Processing.\n\
          \nIf `Changed` is specified, then envelopes that changed status during the\
          \ period will be returned. \n\nFor example, if `Created` is specified, then\
          \ envelopes created during the period are found. \n\nThe default is `Changed`. "
        schema:
          type: string
      - name: start_position
        in: query
        description: |
          This value is supported and currently has no implicit maximum items.
        schema:
          type: string
      - name: status
        in: query
        description: |+
          A comma-separated list of current envelope statuses to included in the response. Possible values are:

          * completed
          * created
          * declined
          * deleted
          * delivered
          * processing
          * sent
          * signed
          * timedout
          * voided

          The `any` value is equivalent to any status.

        schema:
          type: string
      - name: to_date
        in: query
        description: |
          Specifies the date and time
          to stop looking for status changes.
          The default is the current date and time.

          Although you can use any date format
          supported by the .NET system library's
          [`DateTime.Parse()`][msoft] function,
          DocuSign recommends
          using [ISO 8601][] format dates
          with an explicit time zone offset
          If you do not provide
          a time zone offset,
          the method uses the server's time zone.

          For example, the following dates and times refer to the same instant:

          * `2017-05-02T01:44Z`
          * `2017-05-01T21:44-04:00`
          * `2017-05-01T18:44-07:00`


          [msoft]: https://msdn.microsoft.com/en-us/library/system.datetime.parse(v=vs.110).aspx#StringToParse
          [ISO 8601]: https://en.wikipedia.org/wiki/ISO_8601
        schema:
          type: string
      - name: transaction_ids
        in: query
        description: |
          A comma-separated list of envelope transaction IDs.
          Transaction IDs are only valid for seven days.
        schema:
          type: string
      - name: user_name
        in: query
        description: |
          Limit results to envelopes
          sent by the account user
          with this user name.

          `email` must be given as well,
          and both `email` and `user_name`
          must refer to an existing account user.
        schema:
          type: string
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/envelopesInformation'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: listStatusChanges
      x-ds-method: listStatusChanges
      x-ds-service: Envelopes
      x-ds-in-sdk: true
      x-ds-examples:
      - description: |
          This example shows a how to get information about
          envelopes created since January 1, 2016.

          The request for this endpoint has no payload.

          ### Request
          ```
          GET /restapi/v2/accounts/1703061/envelopes?from_date=2016-01-01
          ```
        direction: response
        format: json
        response:
          endPosition: "1"
          envelopes:
          - certificateUri: /envelopes/379497bb-cc85-4654-bab9-a8e397f538d0/documents/certificate
            customFieldsUri: /envelopes/379497bb-cc85-4654-bab9-a8e397f538d0/custom_fields
            documentsCombinedUri: /envelopes/379497bb-cc85-4654-bab9-a8e397f538d0/documents/combined
            documentsUri: /envelopes/379497bb-cc85-4654-bab9-a8e397f538d0/documents
            envelopeId: 379497bb-cc85-4654-bab9-a8e397f538d0
            envelopeUri: /envelopes/379497bb-cc85-4654-bab9-a8e397f538d0
            notificationUri: /envelopes/379497bb-cc85-4654-bab9-a8e397f538d0/notification
            recipientsUri: /envelopes/379497bb-cc85-4654-bab9-a8e397f538d0/recipients
            status: completed
            statusChangedDateTime: 2016-10-04T15:26:28.2830000Z
            templatesUri: /envelopes/379497bb-cc85-4654-bab9-a8e397f538d0/templates
          - certificateUri: /envelopes/4b728be4-4417-45c6-b7e8-d63e23f822b6/documents/certificate
            customFieldsUri: /envelopes/4b728be4-4417-45c6-b7e8-d63e23f822b6/custom_fields
            documentsCombinedUri: /envelopes/4b728be4-4417-45c6-b7e8-d63e23f822b6/documents/combined
            documentsUri: /envelopes/4b728be4-4417-45c6-b7e8-d63e23f822b6/documents
            envelopeId: 4b728be4-4417-45c6-b7e8-d63e23f822b6
            envelopeUri: /envelopes/4b728be4-4417-45c6-b7e8-d63e23f822b6
            notificationUri: /envelopes/4b728be4-4417-45c6-b7e8-d63e23f822b6/notification
            recipientsUri: /envelopes/4b728be4-4417-45c6-b7e8-d63e23f822b6/recipients
            status: sent
            statusChangedDateTime: 2016-10-05T01:04:58.7770000Z
            templatesUri: /envelopes/4b728be4-4417-45c6-b7e8-d63e23f822b6/templates
          nextUri: ""
          previousUri: ""
          resultSetSize: "2"
          startPosition: "0"
          totalSetSize: "2"
        style: custom
        title: Get Status About Envelopes Since a Specified Date
    post:
      tags:
      - Envelopes
      summary: Creates an envelope.
      description: |
        Creates and sends an envelope or creates a draft envelope.
        Envelopes are fundamental resources in the DocuSign platform.

        With this method you can:

        * Create and send an envelope
          with [documents][], [recipients][], and [tabs][].
        * Create and send an envelope from a template.
        * Create and send an envelope from
          a combination of documents and templates.
        * Create a draft envelope.


        When you use this method
        to create and send an envelope
        in a single request,
        the following parameters in the request body (an [`envelopeDefinition`][envelopeDefinition]) are required:

        | Parameter      | Description |
        | :--------      | :---------- |
        | `status`       | Set to `sent` to send the envelope to recipients.<br>Set to `created` (or don't set at all) to save the envelope as a draft. |
        | `emailSubject` | The subject of the email used to send the envelope. |
        | `documents`    | The [documents][] to be signed. |
        | `recipients`   | The email addresses of the envelope [recipients][]. |


        There are many ways to use envelopes.
        You can create and send an envelope
        with a single API request,
        or you can use several API requests
        to create, populate, and send envelopes.


        | See                     | To learn about                                                                                                                    |
        | :----------------------- | :--------------------------------------------------------------------------------------------------------------------------------- |
        | [Envelopes][envelopes]   | Envelopes, [adding documents][addingdocs], [tracking][], [locking][], [deleting][], [templates][]                                  |
        | [Documents][documents]   | Documents, [attachments][], [supplemental documents][supdocs], [authoritative copies][authcopies], [purging][]                     |
        | [Recipients][recipients] | Recipients, [recipient types][reciptypes], [recipient status][recipstatus]                                                         |
        | [Tabs][tabs]             | Tabs, [tab types][tabtypes], [anchoring tabs][tabanchor], [auto-populating tabs][tabauto],  [custom tabs][tabcustom], [payments][] |


        [addingdocs]:           https://developers.docusign.com/esign-rest-api/guides/concepts/envelopes#adding-documents-to-an-envelope
        [attachments]:          https://developers.docusign.com/esign-rest-api/guides/concepts/documents#attachments
        [authcopies]:           https://developers.docusign.com/esign-rest-api/guides/concepts/documents#authoritative-copies
        [conoverview]:          https://developers.docusign.com/esign-rest-api/guides/concepts/overview
        [deleting]:             https://developers.docusign.com/esign-rest-api/guides/concepts/envelopes#deleting-envelopes
        [documents]:            https://developers.docusign.com/esign-rest-api/guides/concepts/documents
        [envelopeDefinition]:   https://developers.docusign.com/esign-rest-api/reference/Envelopes/Envelopes/create#envelopeDefinition
        [envelopes]:            https://developers.docusign.com/esign-rest-api/guides/concepts/envelopes
        [locking]:              https://developers.docusign.com/esign-rest-api/guides/concepts/envelopes#locking-envelopes
        [payments]:             https://developers.docusign.com/esign-rest-api/guides/concepts/tabs#requesting-payments
        [purging]:              https://developers.docusign.com/esign-rest-api/guides/concepts/documents#purging-documents
        [recipients]:           https://developers.docusign.com/esign-rest-api/guides/concepts/recipients
        [recipstatus]:          https://developers.docusign.com/esign-rest-api/guides/concepts/recipients#recipient-status
        [reciptypes]:           https://developers.docusign.com/esign-rest-api/guides/concepts/recipients#recipient-types
        [supdocs]:              https://developers.docusign.com/esign-rest-api/guides/concepts/documents#supplemental-documents
        [tabanchor]:            https://developers.docusign.com/esign-rest-api/guides/concepts/tabs#anchoring-tabs
        [tabauto]:              https://developers.docusign.com/esign-rest-api/guides/concepts/tabs#automatically-populating-tabs
        [tabcustom]:            https://developers.docusign.com/esign-rest-api/guides/concepts/tabs#using-custom-tabs-in-envelopes-and-templates
        [tabs]:                 https://developers.docusign.com/esign-rest-api/guides/concepts/tabs
        [tabtypes]:             https://developers.docusign.com/esign-rest-api/guides/concepts/tabs#tab-types
        [templates]:            https://developers.docusign.com/esign-rest-api/guides/concepts/envelopes#working-with-templates
        [tracking]:             https://developers.docusign.com/esign-rest-api/guides/concepts/envelopes#tracking-envelope-status

        **Note**: When you create an envelope by using a [composite template](https://developers.docusign.com/esign-rest-api/guides/concepts/templates#composite-templates), you should specify the envelope custom fields in the inline template. Any custom fields that you specify at the root level are ignored.
      operationId: Envelopes_PostEnvelopes
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: cdse_mode
        in: query
        description: |
          Reserved for DocuSign.
        schema:
          type: string
      - name: change_routing_order
        in: query
        description: "When true, users can define the routing order of recipients\
          \ while sending documents for signature."
        schema:
          type: string
      - name: completed_documents_only
        in: query
        description: |
          Reserved for DocuSign.
        schema:
          type: string
      - name: merge_roles_on_draft
        in: query
        description: |-
          When set to **true**, template roles will be merged, and empty recipients will be removed. This parameter applies when you create a draft envelope with multiple templates. (To create a draft envelope, the `status` field is set to `created`.)

          ###### Note: DocuSign recommends that this parameter should be set to **true** whenever you create a draft envelope with multiple templates.
        schema:
          type: string
      - name: tab_label_exact_matches
        in: query
        description: |
          Reserved for DocuSign.

          <!--
          Note from Kate Dougherty: This functionality has not been released yet. When it is (contact Alia Paddock with any questions), use the following description:

          "When set to **true**, each tab in the inline template is matched and collapsed with all qualified tabs in the server template. When set to **false** (default), each tab in the inline template is matched and collapsed with at most one qualified tab in the server template.

          This parameter applies when you create an envelope from a composite template."
          -->
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/envelopeDefinition'
          application/xml:
            schema:
              $ref: '#/components/schemas/envelopeDefinition'
        required: false
      responses:
        "201":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/envelopeSummary'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: createEnvelope
      x-ds-method: create
      x-ds-service: Envelopes
      x-ds-in-sdk: true
      x-ds-examples:
      - description: |
          This example shows a request/response that includes:

          * A single PDF document to be signed
          * One tab positioned using anchor text
          * One recipient

          See [Requesting a Signature via Email](/esign/guide/usage/request_a_signature.html)
          for a full walkthrough of this example.
        direction: both
        format: json
        response:
          envelopeId: 63e05468-6432-41d2-b01c-8b48f7dbeb80
          status: sent
          statusDateTime: 2016-05-29T17:11:56.1800000Z
          uri: /envelopes/63e05468-6432-41d2-b01c-8b48f7dbeb80
        request:
          documents:
          - documentBase64: "[Document content (PDF File)]"
            documentId: "1"
            fileExtension: pdf
            name: NDA.pdf
          emailSubject: Please sign the NDA
          recipients:
            signers:
            - email: the_nda_signer@example.com
              name: Darlene Petersen
              recipientId: "1"
              routingOrder: "1"
              tabs:
                dateSignedTabs:
                - anchorString: signer1date
                  anchorYOffset: "-6"
                  fontSize: Size12
                  name: Date Signed
                  recipientId: "1"
                  tabLabel: date_signed
                fullNameTabs:
                - anchorString: signer1name
                  anchorYOffset: "-6"
                  fontSize: Size12
                  name: Full Name
                  recipientId: "1"
                  tabLabel: Full Name
                signHereTabs:
                - anchorString: signer1sig
                  anchorUnits: mms
                  anchorXOffset: "0"
                  anchorYOffset: "0"
                  name: Please sign here
                  optional: "false"
                  recipientId: "1"
                  scaleValue: 1
                  tabLabel: signer1sig
          status: sent
        style: custom
        title: Request Signature on Single Document by Email
      - description: |
          This example shows a request/response that includes:

          * Multiple documents, both pdf and Word docx files.
          * Multiple tabs including signing, fullName, dateSigned, and text tabs.
          * Tabs positioned using anchor text.
          * Two recipients, a signer and a cc recipient.

          For more information, and to try this request live, see the [API Recipe](https://www.docusign.com/developer-center/recipes/send-multiple-docs)
        direction: both
        format: json
        response:
          envelopeId: 63e05468-6432-41d2-b01c-8b48f7dbeb80
          status: sent
          statusDateTime: 2016-05-29T17:11:56.1800000Z
          uri: /envelopes/63e05468-6432-41d2-b01c-8b48f7dbeb80
        request:
          documents:
          - documentBase64: "[Document 1 content (PDF File)]"
            documentId: "1"
            fileExtension: pdf
            name: NDA.pdf
          - documentBase64: "[Document 2 content (PDF File)]"
            documentId: "2"
            fileExtension: pdf
            name: House.pdf
          - documentBase64: "[Document 3 content (Word file)]"
            documentId: "3"
            fileExtension: docx
            name: contractor_agreement.docx
          emailSubject: Please sign the house documentation package
          recipients:
            carbonCopies:
            - email: cody_vigil@worldwidecorp.example.com
              name: Cody Vigil
              recipientId: "2"
              routingOrder: "2"
            signers:
            - email: darlene_petersen@newco.example.com
              name: Darlene Petersen
              recipientId: "1"
              routingOrder: "1"
              tabs:
                dateSignedTabs:
                - anchorString: signer1date
                  anchorYOffset: "-6"
                  fontSize: Size12
                  name: Date Signed
                  recipientId: "1"
                  tabLabel: date_signed
                - documentId: "2"
                  fontSize: Size12
                  name: Date Signed
                  pageNumber: "1"
                  recipientId: "1"
                  tabLabel: doc3_date_signed
                  xPosition: "89"
                  yPosition: "100"
                fullNameTabs:
                - anchorString: signer1name
                  anchorYOffset: "-6"
                  fontSize: Size12
                  name: Full Name
                  recipientId: "1"
                  tabLabel: Full Name
                signHereTabs:
                - anchorString: signer1sig
                  anchorUnits: mms
                  anchorXOffset: "0"
                  anchorYOffset: "0"
                  name: Please sign here
                  optional: "false"
                  recipientId: "1"
                  scaleValue: 1
                  tabLabel: signer1sig
                - documentId: "2"
                  name: Please sign here
                  optional: "false"
                  pageNumber: "1"
                  recipientId: "2"
                  scaleValue: 1
                  tabLabel: signer1_doc2
                  xPosition: "89"
                  yPosition: "40"
                - anchorString: Client Signature
                  anchorUnits: mms
                  anchorXOffset: "0"
                  anchorYOffset: "-4"
                  name: Please sign here
                  optional: "false"
                  recipientId: "1"
                  scaleValue: 1
                  tabLabel: doc3_client_sig
                textTabs:
                - anchorString: signer1company
                  anchorYOffset: "-8"
                  fontSize: Size12
                  name: Company
                  recipientId: "1"
                  required: "true"
                  tabLabel: Company
                - anchorString: Client Name
                  anchorYOffset: "-38"
                  fontSize: Size12
                  name: Company
                  recipientId: "1"
                  required: "true"
                  tabLabel: Company
                - documentId: "3"
                  fontSize: Size10
                  name: Company
                  pageNumber: "1"
                  recipientId: "1"
                  required: "true"
                  tabLabel: Company
                  xPosition: "145"
                  yPosition: "195"
          status: sent
        style: custom
        title: "Multiple Documents and Tabs, Signer and CC Recipients"
      - description: |-
          For some documents, one or more signatures must be witnessed by an appointed [notary public](https://en.wikipedia.org/wiki/Notary_public).

          DocuSign supports eNotary services for many jurisdictions. This example demonstrates how to send an envelope to be signed by Susan Signer with her signature witnessed by Nancy Notary. You must know the name and email address of the signer and the notary public for a signature to be notarized.

          Note that the full legal name of the signer must be used. It will be checked against the signer's government-issued proof of identity by the notary public.

          Please see the [DocuSign eNotary resource page](https://support.docusign.com/en/guides/ndse-user-guide-enotary-resources) for further information. It lists the jurisdictions participating in the DocuSign eNotary program and additional reference information.

          Note that eNotary services are not included with all account types and are **not** included by default with demo/developer sandbox accounts. To enable eNotary service for your sandbox account, contact your DocuSign technical support person or DocuSign customer service.

          The example includes event notification via the Connect service.
        direction: both
        format: json
        response:
          envelopeId: aaaaaaaa-41c4-4d21-b6e4-52a86fb94be8
          uri: /envelopes/aaaaaaaa-41c4-4d21-b6e4-52a86fb94be8
          statusDateTime: 2017-06-15T11:02:39.3996430Z
          status: sent
        request:
          emailSubject: Important agreement for notarized signature
          status: sent
          recipients:
            inPersonSigners:
            - recipientId: 1
              email: susan_signer@gmail.com
              name: Susan Anne Signer
              routingOrder: 1
              inPersonSigningType: notary
              notaryHost:
                name: Nancy Notary
                email: nancy@notary-svc.com
                recipientId: 2
              tabs:
                signHereTabs:
                - documentId: "1"
                  optional: "false"
                  recipientId: "1"
                  xPosition: "100"
                  yPosition: "100"
                  pageNumber: "1"
                  name: Please sign here
                  tabLabel: signer1sig
          documents:
          - documentId: "1"
            name: important document.docx
            fileExtension: docx
            documentBase64: "[Contents elided]"
          eventNotification:
            includeDocumentFields: "false"
            envelopeEvents:
            - envelopeEventStatusCode: Completed
            - envelopeEventStatusCode: Declined
            - envelopeEventStatusCode: Voided
            url: https://listener.example.com/docusign_notifications
            requireAcknowledgment: "true"
            includeSenderAccountAsCustomField: "true"
            loggingEnabled: "true"
            includeDocuments: "false"
            signMessageWithX509Cert: "true"
        style: custom
        title: Create a Notarized Signing Recipient
      - description: |
          DocuSign enables document signers use
          [electronic](https://www.docusign.com/products/electronic-signature) or
          [digital](https://www.docusign.com/how-it-works/electronic-signature/digital-signature) signatures.

          DocuSign has tightly integrated standard digital signatures into the DocuSign Signature platform. This enables a single envelope to include:

          * electronic signatures,
          * AES digital signatures using certificates from DocuSign or from your organization,
          * QES digital signatures from government certified Trust Service Providers (TSPs).

          This example enables the signer to create an eIDAS compliant AES signature with embedded signing. InPerson signers can also use SBS digital signatures.

          [More information on creating SBS digital signature requests.](../../../../guide/appendix/standards_based_signatures.html)

          The `clientId` in the example tells DocuSign that the Signing Ceremony will be embedded.
          The example also includes an `eventNotification` object for receiving envelope status updates from DocuSign.

          ## Embedding the signing ceremony
          1. Send the `Envelopes: create` call as shown below in the Request/Response section.
          2. The response will include the `envelopeId`
          3. Use the [EnvelopeViews: createRecipient](../../EnvelopeViews/createRecipient) request to obtain the redirectURL as follows:

          `POST /v2/accounts/{accountId}/envelopes/{envelopeId}/views/recipient`

          ````
          {
              "clientUserId": "1000",
              "email": "Sam@spade.com",
              "userName": "Sam Spade",
              "returnUrl": "https://your_app.example.com",
              "AuthenticationMethod": "Password"
          }
          ````
          The response will include the `url`. Redirect the user's browser to the url to start the signing ceremony.

          ###### Note: You must **immediately** redirect the user to the url you receive from DocuSign. The url is only valid for 5 minutes. Don't request a recipient view url until you are ready to redirect the user's browser.
        direction: both
        format: json
        response:
          envelopeId: caaaaaaa-144e-45ce-8e8e-c171528e99c8
          uri: /envelopes/caaaaaaa-144e-45ce-8e8e-c171528e99c8
          statusDateTime: 2017-06-22T06:44:49.1642220Z
          status: sent
        request:
          documents:
          - documentId: "1"
            name: ' Agreement'
            fileExtension: html
            documentBase64: "[Contents elided]"
          emailSubject: NewCo agreement for signature
          status: sent
          recipients:
            signers:
            - recipientId: "1"
              clientUserId: "1000"
              email: Sam@spade.com
              name: Sam Spade
              recipientSignatureProviders:
              - signatureProviderName: UniversalSignaturePen_OpenTrust_Hash_TSP
                signatureProviderOptions:
                  SMS: "+33134567899"
              routingOrder: "1"
              tabs:
                signHereTabs:
                - documentId: "1"
                  optional: "false"
                  recipientId: "1"
                  name: Please sign here
                  tabLabel: signer1sig
                  anchorString: signer1sig
          eventNotification:
            includeDocumentFields: "false"
            envelopeEvents:
            - envelopeEventStatusCode: Completed
            - envelopeEventStatusCode: Declined
            - envelopeEventStatusCode: Voided
            url: https://your_app.example.com/listener
            requireAcknowledgment: "true"
            includeSenderAccountAsCustomField: "true"
            loggingEnabled: "true"
            includeDocuments: "false"
            signMessageWithX509Cert: "true"
        style: custom
        title: "Request an SBS digital signature, with an embedded signing ceremony"
      x-codegen-request-body-name: envelopeDefinition
  /v2/accounts/{accountId}/envelopes/{envelopeId}:
    get:
      tags:
      - Envelopes
      summary: Gets the status of a single envelope.
      description: "Retrieves the overall status for the specified envelope. To get\
        \ the status of a list of envelopes, use [Envelope: listStatusChanges ](https://developers.docusign.com/esign-rest-api/reference/Envelopes/Envelopes/listStatusChanges/)"
      operationId: Envelopes_GetEnvelope
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: envelopeId
        in: path
        description: 'The envelope''s GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec '
        required: true
        schema:
          type: string
      - name: advanced_update
        in: query
        description: "When true, envelope information can be added or modified."
        schema:
          type: string
      - name: include
        in: query
        description: |
          Reserved for DocuSign.
        schema:
          type: string
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/envelope'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: getEnvelope
      x-ds-method: get
      x-ds-service: Envelopes
      x-ds-in-sdk: true
      x-ds-examples:
      - description: |
          This example shows a how to get information about
          an envelope with a given envelope id.

          The request for this endpoint has no payload.

          ### Request
          ```
          GET /restapi/v2/accounts/1703061/envelopes/4b728be4-4417-45c6-b7e8-d63e23f822b6
          ```
        direction: response
        format: json
        response:
          allowMarkup: "false"
          autoNavigation: "true"
          brandId: 56502fe1-3245-4cf5-8d74-97cb5c43176a
          certificateUri: /envelopes/4b728be4-4417-45c6-b7e8-d63e23f822b6/documents/certificate
          createdDateTime: 2016-10-05T01:04:58.1830000Z
          customFieldsUri: /envelopes/4b728be4-4417-45c6-b7e8-d63e23f822b6/custom_fields
          documentsCombinedUri: /envelopes/4b728be4-4417-45c6-b7e8-d63e23f822b6/documents/combined
          documentsUri: /envelopes/4b728be4-4417-45c6-b7e8-d63e23f822b6/documents
          emailSubject: Please sign the NDA
          enableWetSign: "true"
          envelopeId: 4b728be4-4417-45c6-b7e8-d63e23f822b6
          envelopeIdStamping: "true"
          envelopeUri: /envelopes/4b728be4-4417-45c6-b7e8-d63e23f822b6
          initialSentDateTime: 2016-10-05T01:04:58.7770000Z
          is21CFRPart11: "false"
          isSignatureProviderEnvelope: "false"
          lastModifiedDateTime: 2016-10-05T01:04:58.1830000Z
          notificationUri: /envelopes/4b728be4-4417-45c6-b7e8-d63e23f822b6/notification
          purgeState: unpurged
          recipientsUri: /envelopes/4b728be4-4417-45c6-b7e8-d63e23f822b6/recipients
          sentDateTime: 2016-10-05T01:04:58.7770000Z
          status: sent
          statusChangedDateTime: 2016-10-05T01:04:58.7770000Z
          templatesUri: /envelopes/4b728be4-4417-45c6-b7e8-d63e23f822b6/templates
        style: custom
        title: Get Status About a Specific Envelope
      - description: |
          This example shows a how to get information about
          envelopes created since January 1, 2016.

          The request for this endpoint has no payload.

          ### Request
          ```
          GET /restapi/v2/accounts/1703061/envelopes?from_date=2016-01-01
          ```
        direction: response
        format: json
        response:
          endPosition: "1"
          envelopes:
          - certificateUri: /envelopes/379497bb-cc85-4654-bab9-a8e397f538d0/documents/certificate
            customFieldsUri: /envelopes/379497bb-cc85-4654-bab9-a8e397f538d0/custom_fields
            documentsCombinedUri: /envelopes/379497bb-cc85-4654-bab9-a8e397f538d0/documents/combined
            documentsUri: /envelopes/379497bb-cc85-4654-bab9-a8e397f538d0/documents
            envelopeId: 379497bb-cc85-4654-bab9-a8e397f538d0
            envelopeUri: /envelopes/379497bb-cc85-4654-bab9-a8e397f538d0
            notificationUri: /envelopes/379497bb-cc85-4654-bab9-a8e397f538d0/notification
            recipientsUri: /envelopes/379497bb-cc85-4654-bab9-a8e397f538d0/recipients
            status: completed
            statusChangedDateTime: 2016-10-04T15:26:28.2830000Z
            templatesUri: /envelopes/379497bb-cc85-4654-bab9-a8e397f538d0/templates
          - certificateUri: /envelopes/4b728be4-4417-45c6-b7e8-d63e23f822b6/documents/certificate
            customFieldsUri: /envelopes/4b728be4-4417-45c6-b7e8-d63e23f822b6/custom_fields
            documentsCombinedUri: /envelopes/4b728be4-4417-45c6-b7e8-d63e23f822b6/documents/combined
            documentsUri: /envelopes/4b728be4-4417-45c6-b7e8-d63e23f822b6/documents
            envelopeId: 4b728be4-4417-45c6-b7e8-d63e23f822b6
            envelopeUri: /envelopes/4b728be4-4417-45c6-b7e8-d63e23f822b6
            notificationUri: /envelopes/4b728be4-4417-45c6-b7e8-d63e23f822b6/notification
            recipientsUri: /envelopes/4b728be4-4417-45c6-b7e8-d63e23f822b6/recipients
            status: sent
            statusChangedDateTime: 2016-10-05T01:04:58.7770000Z
            templatesUri: /envelopes/4b728be4-4417-45c6-b7e8-d63e23f822b6/templates
          nextUri: ""
          previousUri: ""
          resultSetSize: "2"
          startPosition: "0"
          totalSetSize: "2"
        style: custom
        title: Get Status About Envelopes Since a Specified Date
    put:
      tags:
      - Envelopes
      summary: "Send, void, or modify a draft envelope. Purge documents from a completed\
        \ envelope."
      description: "This method lets you make changes to an envelope.\nYou can use\
        \ it to:\n\n* Send a draft envelope\n* Void an in-process envelope\n* Modify\
        \ a draft envelope\n* Purge documents and envelope metadata from the DocuSign\
        \ platform\n\n\n<div class=\"highlight highlight-info\">\n<p markdown=\"1\"\
        >\n\nAlthough the request body for this method\nis a complete envelope definition,\n\
        you only need to provide\nproperties that\nyou're updating. \n\n</p>\n</div>\n\
        \n\n## Sending a Draft Envelope\n\nTo send a draft envelope, include this\
        \ in the request body:\n\n```json\n{\n  \"status\": \"sent\"\n}\n```\n\n\n\
        ## Voiding an In-Process Envelope\n\nTo void an in-process envelope, include\
        \ this in the request body:\n\n```json\n{\n  \"status\": \"voided\",\n  \"\
        voidedReason\": \"The reason for voiding the envelope\"\n}\n```\n\n## Modifying\
        \ Envelope Email Information\n\nTo change the email subject and message of\
        \ a draft envelope,\ninclude this in the request body:\n\n```json\n{\n  \"\
        emailSubject\": \"new email subject\",\n  \"emailBlurb\": \"new email message\"\
        \n}\n```\n\n## Purging Documents from DocuSign\n\n\nTo place only the documents\n\
        in the purge queue,\nleaving any\ncorresponding attachments \nand tabs in\
        \ the DocuSign platform,\nset the `purgeState` property\nto `documents_queued`.\n\
        \n\n```json\n{\n  \"purgeState\": \"documents_queued\"\n}\n```\n\nTo place\
        \ documents,\nattachments,\nand tabs\nin the purge queue,\nset the `purgeState`\
        \ property\nto `documents_and_metadata_queued`.\n\n```json\n{\n  \"purgeState\"\
        : \"documents_and_metadata_queued\"\n}\n```\n\n\nYou can purge documents\n\
        only from completed envelopes\nthat are not marked as the authoritative copy.\n\
        The user requesting the purge\nmust have permission to purge documents\nand\n\
        must be the sender or be acting on behalf of the sender.\n\n\n\nWhen the purge\
        \ request is initiated\nthe items to be purged\nare placed in the purge queue\n\
        for deletion in 14 days.\nThe sender\nand\nall recipients with DocuSign accounts\n\
        associated with the envelope\nget an email notification\nthe the documents\
        \ will be deleted in 14 days.\nThe notification contains a link\nto the documents.\n\
        A second email notification\nis sent 7 days later.\nAt the end of the 14-day\
        \ period\nthe documents are deleted from the system.\nRecipients without DocuSign\
        \ accounts\ndo not receive email notifications.\n\n\nIf your account has a\
        \ Document Retention policy,\nenvelope documents\nare automatically placed\n\
        in the purge queue,\nand notification emails are sent\nat the end of the retention\
        \ period.\nSetting a Document Retention policy is the same as setting a\n\
        schedule for purging documents.\n"
      operationId: Envelopes_PutEnvelope
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: envelopeId
        in: path
        description: 'The envelope''s GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec '
        required: true
        schema:
          type: string
      - name: advanced_update
        in: query
        description: "When set to **true**, allows the caller to update recipients,\
          \ tabs, custom fields, notification, email settings and other envelope attributes."
        schema:
          type: string
      - name: resend_envelope
        in: query
        description: "When set to **true**, sends the specified envelope again."
        schema:
          type: string
      requestBody:
        description: "A container used to send documents to recipients. The envelope\
          \ carries information about the sender and timestamps to indicate the progress\
          \ of the delivery procedure. It can contain collections of Documents, Tabs\
          \ and Recipients."
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/envelope'
          application/xml:
            schema:
              $ref: '#/components/schemas/envelope'
        required: false
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/envelopeUpdateSummary'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: update
      x-ds-method: update
      x-ds-service: Envelopes
      x-ds-in-sdk: true
      x-codegen-request-body-name: envelope
  /v2/accounts/{accountId}/envelopes/{envelopeId}/attachments:
    get:
      tags:
      - EnvelopeAttachments
      summary: Returns a list of attachments associated with the specified envelope
      operationId: Attachments_GetAttachments
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: envelopeId
        in: path
        description: 'The envelope''s GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec '
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/envelopeAttachmentsResult'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: getAttachments
      x-ds-api-status: beta
      x-ds-method: list
      x-ds-service: Envelopes
      x-ds-in-sdk: true
    put:
      tags:
      - EnvelopeAttachments
      summary: Add one or more attachments to a DRAFT or IN-PROCESS envelope.
      description: "Supported attachment formats include: .asp, .bmp, .csv, .doc,\
        \ .docm, .docx, .dot, .dotm, .dotx, .gif, .htm, .html, .jpeg, .jpg, .msg,\
        \ .pdf, .png, .pot, .potx, .pps, .ppt, .pptm, .pptx, .ps, .rtf, .tif, .tiff,\
        \ .txt, .wpd, .xls, .xlsm, .xlsx, .xml, and .xps. For more information on\
        \ supported file formats please see [Supported File Formats](https://support.docusign.com/guides/ndse-user-guide-supported-file-formats)."
      operationId: Attachments_PutAttachments
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: envelopeId
        in: path
        description: 'The envelope''s GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec '
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/envelopeAttachmentsRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/envelopeAttachmentsRequest'
        required: false
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/envelopeAttachmentsResult'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: putAttachments
      x-ds-api-status: beta
      x-ds-method: create
      x-ds-service: Envelopes
      x-ds-in-sdk: true
      x-codegen-request-body-name: envelopeAttachmentsRequest
    delete:
      tags:
      - EnvelopeAttachments
      summary: Delete one or more attachments from a DRAFT envelope.
      operationId: Attachments_DeleteAttachments
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: envelopeId
        in: path
        description: 'The envelope''s GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec '
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/envelopeAttachmentsRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/envelopeAttachmentsRequest'
        required: false
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/envelopeAttachmentsResult'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: deleteAttachments
      x-ds-api-status: beta
      x-ds-method: delete
      x-ds-service: Envelopes
      x-ds-in-sdk: true
      x-codegen-request-body-name: envelopeAttachmentsRequest
  /v2/accounts/{accountId}/envelopes/{envelopeId}/attachments/{attachmentId}:
    get:
      tags:
      - EnvelopeAttachments
      summary: Retrieves an attachment from the envelope.
      operationId: Attachments_GetAttachment
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: attachmentId
        in: path
        required: true
        schema:
          type: string
      - name: envelopeId
        in: path
        description: 'The envelope''s GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec '
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful response.
          content: {}
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: getAttachment
      x-ds-api-status: beta
      x-ds-method: get
      x-ds-service: Envelopes
      x-ds-in-sdk: true
    put:
      tags:
      - EnvelopeAttachments
      summary: Add an attachment to a DRAFT or IN-PROCESS envelope.
      operationId: Attachments_PutAttachment
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: attachmentId
        in: path
        required: true
        schema:
          type: string
      - name: envelopeId
        in: path
        description: 'The envelope''s GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec '
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/attachment'
          application/xml:
            schema:
              $ref: '#/components/schemas/attachment'
        required: false
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/envelopeAttachmentsResult'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: putAttachment
      x-ds-api-status: beta
      x-ds-method: update
      x-ds-service: Envelopes
      x-ds-in-sdk: true
      x-codegen-request-body-name: attachment
  /v2/accounts/{accountId}/envelopes/{envelopeId}/audit_events:
    get:
      tags:
      - Envelopes
      summary: Gets the envelope audit events for an envelope.
      description: Gets the envelope audit events for the specified envelope.
      operationId: AuditEvents_GetAuditEvents
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: envelopeId
        in: path
        description: 'The envelope''s GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec '
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/envelopeAuditEventResponse'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: listAuditEvents
      x-ds-method: listAuditEvents
      x-ds-service: Envelopes
      x-ds-in-sdk: true
  /v2/accounts/{accountId}/envelopes/{envelopeId}/comments/transcript:
    get:
      tags:
      - Comments
      operationId: Comments_GetCommentsTranscript
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: envelopeId
        in: path
        description: 'The envelope''s GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec '
        required: true
        schema:
          type: string
      - name: encoding
        in: query
        schema:
          type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/pdf:
              schema:
                type: string
                format: binary
        "400":
          description: Error encountered.
          content:
            application/pdf:
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: getCommentsTranscript
      x-ds-method: get
      x-ds-service: Uncategorized
      x-ds-in-sdk: true
  /v2/accounts/{accountId}/envelopes/{envelopeId}/custom_fields:
    get:
      tags:
      - EnvelopeCustomFields
      summary: Gets the custom field information for the specified envelope.
      description: |-
        Retrieves the custom field information for the specified envelope. You can use these fields in the envelopes for your account to record information about the envelope, help search for envelopes, and track information. The envelope custom fields are shown in the Envelope Settings section when a user is creating an envelope in the DocuSign member console. The envelope custom fields are not seen by the envelope recipients.

        There are two types of envelope custom fields, text, and list. A text custom field lets the sender enter the value for the field. With a list custom field, the sender selects the value of the field from a pre-made list.
      operationId: CustomFields_GetCustomFields
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: envelopeId
        in: path
        description: 'The envelope''s GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec '
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/customFieldsEnvelope'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: listCustomFields
      x-ds-method: list
      x-ds-service: Envelopes
      x-ds-in-sdk: true
    put:
      tags:
      - EnvelopeCustomFields
      summary: Updates envelope custom fields in an envelope.
      description: |
        Updates the envelope custom fields in draft and in-process envelopes.

        Each custom field used in an envelope must have a unique name.
      operationId: CustomFields_PutCustomFields
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: envelopeId
        in: path
        description: 'The envelope''s GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec '
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnvelopeCustomFields'
          application/xml:
            schema:
              $ref: '#/components/schemas/EnvelopeCustomFields'
        required: false
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/EnvelopeCustomFields'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: updateCustomFields
      x-ds-method: update
      x-ds-service: Envelopes
      x-ds-in-sdk: true
      x-codegen-request-body-name: EnvelopeCustomFields
    post:
      tags:
      - EnvelopeCustomFields
      summary: Updates envelope custom fields for an envelope.
      description: |-
        Updates the envelope custom fields for draft and in-process envelopes.

        Each custom field used in an envelope must have a unique name.
      operationId: CustomFields_PostCustomFields
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: envelopeId
        in: path
        description: 'The envelope''s GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec '
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnvelopeCustomFields'
          application/xml:
            schema:
              $ref: '#/components/schemas/EnvelopeCustomFields'
        required: false
      responses:
        "201":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/EnvelopeCustomFields'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: createCustomFields
      x-ds-method: create
      x-ds-service: Envelopes
      x-ds-in-sdk: true
      x-codegen-request-body-name: EnvelopeCustomFields
    delete:
      tags:
      - EnvelopeCustomFields
      summary: Deletes envelope custom fields for draft and in-process envelopes.
      description: Deletes envelope custom fields for draft and in-process envelopes.
      operationId: CustomFields_DeleteCustomFields
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: envelopeId
        in: path
        description: 'The envelope''s GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec '
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnvelopeCustomFields'
          application/xml:
            schema:
              $ref: '#/components/schemas/EnvelopeCustomFields'
        required: false
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/EnvelopeCustomFields'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: deleteCustomFields
      x-ds-method: delete
      x-ds-service: Envelopes
      x-ds-in-sdk: true
      x-codegen-request-body-name: EnvelopeCustomFields
  /v2/accounts/{accountId}/envelopes/{envelopeId}/documents:
    get:
      tags:
      - EnvelopeDocuments
      summary: Gets a list of envelope documents.
      description: Retrieves a list of documents associated with the specified envelope.
      operationId: Documents_GetDocuments
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: envelopeId
        in: path
        description: 'The envelope''s GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec '
        required: true
        schema:
          type: string
      - name: include_document_size
        in: query
        schema:
          type: string
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/envelopeDocumentsResult'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: listDocuments
      x-ds-method: list
      x-ds-service: Envelopes
      x-ds-in-sdk: true
      x-ds-examples:
      - description: |
          This example shows how
          to get a list
          of all the documents in an envelope.

          The request for this endpoint has no payload.

          ### Request

          ```
          GET /restapi/v2/accounts/1703061/envelopes/44efc9e6-915e-4b1d-9b54-801410d6922d/documents
          ```
        direction: response
        format: json
        response:
          envelopeDocuments:
          - availableDocumentTypes:
            - isDefault: "true"
              type: electronic
            display: inline
            documentId: "1"
            includeInDownload: "true"
            name: NDA.pdf
            order: "1"
            pages: "3"
            signerMustAcknowledge: no_interaction
            type: content
            uri: /envelopes/44efc9e6-915e-4b1d-9b54-801410d6922d/documents/1
          - availableDocumentTypes:
            - isDefault: "true"
              type: electronic
            display: inline
            documentId: "2"
            includeInDownload: "true"
            name: House.pdf
            order: "2"
            pages: "1"
            signerMustAcknowledge: no_interaction
            type: content
            uri: /envelopes/44efc9e6-915e-4b1d-9b54-801410d6922d/documents/2
          - availableDocumentTypes:
            - isDefault: "true"
              type: electronic
            display: inline
            documentId: "3"
            includeInDownload: "true"
            name: contractor_agreement.docx
            order: "3"
            pages: "2"
            signerMustAcknowledge: no_interaction
            type: content
            uri: /envelopes/44efc9e6-915e-4b1d-9b54-801410d6922d/documents/3
          - availableDocumentTypes:
            - isDefault: "true"
              type: electronic
            display: inline
            documentId: certificate
            includeInDownload: "true"
            name: Summary
            order: "999"
            pages: "4"
            signerMustAcknowledge: no_interaction
            type: summary
            uri: /envelopes/44efc9e6-915e-4b1d-9b54-801410d6922d/documents/certificate
          envelopeId: 44efc9e6-915e-4b1d-9b54-801410d6922d
        style: custom
        title: List All Documents in an Envelope
    put:
      tags:
      - EnvelopeDocuments
      summary: Adds one or more documents to an existing envelope document.
      description: |-
        Adds one or more documents to an existing envelope document.
        <p>**Note**: When adding or modifying documents for an in-process envelope, DocuSign recommends locking the envelope prior to making any changes.
      operationId: Documents_PutDocuments
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: envelopeId
        in: path
        description: 'The envelope''s GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec '
        required: true
        schema:
          type: string
      - name: apply_document_fields
        in: query
        description: |
          When **true**, document fields
          can be added or modified
          while adding or modifying envelope documents.
        schema:
          type: string
      - name: persist_tabs
        in: query
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/envelopeDefinition'
          application/xml:
            schema:
              $ref: '#/components/schemas/envelopeDefinition'
        required: false
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/envelopeDocumentsResult'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: updateDocuments
      x-ds-method: updateList
      x-ds-service: Envelopes
      x-ds-in-sdk: true
      x-codegen-request-body-name: envelopeDefinition
    delete:
      tags:
      - EnvelopeDocuments
      summary: Deletes documents from a draft envelope.
      description: |+
        Deletes one or more documents from an existing envelope that has not yet been completed.

        To delete a document, use only the relevant parts of the [`envelopeDefinition`](#envelopeDefinition).
        For example, this request body specifies that you want to delete the document whose `documentId` is "1".


        ```text
        {
          "documents": [
            {
              "documentId": "1"
            }
          ]
        }
        ```

        The envelope status must be one of:

        - `created`
        - `sent`
        - `delivered`


      operationId: Documents_DeleteDocuments
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: envelopeId
        in: path
        description: 'The envelope''s GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec '
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/envelopeDefinition'
          application/xml:
            schema:
              $ref: '#/components/schemas/envelopeDefinition'
        required: false
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/envelopeDocumentsResult'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: deleteDocuments
      x-ds-method: delete
      x-ds-service: Envelopes
      x-ds-in-sdk: true
      x-codegen-request-body-name: envelopeDefinition
  /v2/accounts/{accountId}/envelopes/{envelopeId}/documents/{documentId}:
    get:
      tags:
      - EnvelopeDocuments
      summary: Gets a document from an envelope.
      description: |
        Retrieves the specified document from the envelope. If the account has the Highlight Data Changes feature enabled, there is an option to request that any changes in the envelope be highlighted.

        The `{documentID}` parameter takes two special values:

        | Value      | Description |
        | :---       | :--- |
        | `combined` | Retrieve a PDF that contains the combined content of all documents and the certificate. |
        | `archive`  | Retrieve a ZIP archive that contains all of the PDF documents, the certificate, and any .WAV files used for voice authentication. |
      operationId: Documents_GetDocument
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: documentId
        in: path
        description: The ID of the document being accessed.
        required: true
        schema:
          type: string
      - name: envelopeId
        in: path
        description: 'The envelope''s GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec '
        required: true
        schema:
          type: string
      - name: certificate
        in: query
        description: "When set to **false**, the envelope signing certificate is removed\
          \ from the download."
        schema:
          type: string
      - name: encoding
        in: query
        schema:
          type: string
      - name: encrypt
        in: query
        description: "When set to **true**, the PDF bytes returned in the response\
          \ are encrypted for all the key managers configured on your DocuSign account.\
          \ The documents can be decrypted with the KeyManager Decrypt Document API."
        schema:
          type: string
      - name: language
        in: query
        description: "Specifies the language for the Certificate of Completion in\
          \ the response. The supported languages, with the language value shown in\
          \ parenthesis, are: Chinese Simplified (zh_CN), , Chinese Traditional (zh_TW),\
          \ Dutch (nl), English US (en), French (fr), German (de), Italian (it), Japanese\
          \ (ja), Korean (ko), Portuguese (pt), Portuguese (Brazil) (pt_BR), Russian\
          \ (ru), Spanish (es). "
        schema:
          type: string
      - name: recipient_id
        in: query
        schema:
          type: string
      - name: show_changes
        in: query
        description: "When set to **true**, any changed fields for the returned PDF\
          \ are highlighted in yellow and optional signatures or initials outlined\
          \ in red. "
        schema:
          type: string
      - name: watermark
        in: query
        description: "When set to **true**, the account has the watermark feature\
          \ enabled, and the envelope is not complete, the watermark for the account\
          \ is added to the PDF documents. This option can remove the watermark. "
        schema:
          type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/pdf:
              schema:
                type: string
                format: binary
        "400":
          description: Error encountered.
          content:
            application/pdf:
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: getDocument
      x-ds-method: get
      x-ds-service: Envelopes
      x-ds-in-sdk: true
      x-ds-examples:
      - description: |+
          This example shows how to retrieve
          a single document from an envelope
          as a PDF file.


          The request for this endpoint has no payload.

          ### Request

          ```
          GET /restapi/v2/accounts/1703061/envelopes/44efc9e6-915e-4b1d-9b54-801410d6922d/documents/3
          ```

        direction: response
        format: json
        response: PDF File
        style: custom
        title: Get a Single Document as a PDF File
      - description: |+
          If you use `combined` instead of a document id
          the response is a PDF file that contains
          all of the documents in the specified envelope.

          The request for this endpoint has no payload.

          ### Request

          ```
          GET /restapi/v2/accounts/1703061/envelopes/44efc9e6-915e-4b1d-9b54-801410d6922d/documents/combined
          ```

        direction: response
        format: json
        response: PDF File
        style: custom
        title: Get All Documents as a Single PDF File
      - description: |
          This example shows how
          to get a list
          of all the documents in an envelope.

          The request for this endpoint has no payload.

          ### Request

          ```
          GET /restapi/v2/accounts/1703061/envelopes/44efc9e6-915e-4b1d-9b54-801410d6922d/documents
          ```
        direction: response
        format: json
        response:
          envelopeDocuments:
          - availableDocumentTypes:
            - isDefault: "true"
              type: electronic
            display: inline
            documentId: "1"
            includeInDownload: "true"
            name: NDA.pdf
            order: "1"
            pages: "3"
            signerMustAcknowledge: no_interaction
            type: content
            uri: /envelopes/44efc9e6-915e-4b1d-9b54-801410d6922d/documents/1
          - availableDocumentTypes:
            - isDefault: "true"
              type: electronic
            display: inline
            documentId: "2"
            includeInDownload: "true"
            name: House.pdf
            order: "2"
            pages: "1"
            signerMustAcknowledge: no_interaction
            type: content
            uri: /envelopes/44efc9e6-915e-4b1d-9b54-801410d6922d/documents/2
          - availableDocumentTypes:
            - isDefault: "true"
              type: electronic
            display: inline
            documentId: "3"
            includeInDownload: "true"
            name: contractor_agreement.docx
            order: "3"
            pages: "2"
            signerMustAcknowledge: no_interaction
            type: content
            uri: /envelopes/44efc9e6-915e-4b1d-9b54-801410d6922d/documents/3
          - availableDocumentTypes:
            - isDefault: "true"
              type: electronic
            display: inline
            documentId: certificate
            includeInDownload: "true"
            name: Summary
            order: "999"
            pages: "4"
            signerMustAcknowledge: no_interaction
            type: summary
            uri: /envelopes/44efc9e6-915e-4b1d-9b54-801410d6922d/documents/certificate
          envelopeId: 44efc9e6-915e-4b1d-9b54-801410d6922d
        style: custom
        title: List All Documents in an Envelope
    put:
      tags:
      - EnvelopeDocuments
      summary: Adds a document to an existing draft envelope.
      description: |-
        Adds a document to an existing draft envelope.
        <p>**Note**: When adding or modifying documents for an in-process envelope, DocuSign recommends locking the envelope prior to making any changes.
      operationId: Documents_PutDocument
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: documentId
        in: path
        description: The ID of the document being accessed.
        required: true
        schema:
          type: string
      - name: envelopeId
        in: path
        description: 'The envelope''s GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec '
        required: true
        schema:
          type: string
      - name: apply_document_fields
        in: query
        description: |
          When **true**, document fields
          can be added or modified
          while adding or modifying envelope documents.
        schema:
          type: string
      responses:
        "200":
          description: Successful response.
          content: {}
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: updateDocument
      x-ds-method: update
      x-ds-service: Envelopes
      x-ds-in-sdk: true
  /v2/accounts/{accountId}/envelopes/{envelopeId}/documents/{documentId}/fields:
    get:
      tags:
      - EnvelopeDocumentFields
      summary: Gets the custom document fields from an  existing envelope document.
      description: Retrieves the custom document field information from an existing
        envelope document.
      operationId: DocumentFields_GetDocumentFields
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: documentId
        in: path
        description: The ID of the document being accessed.
        required: true
        schema:
          type: string
      - name: envelopeId
        in: path
        description: 'The envelope''s GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec '
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/EnvelopeDocumentFields'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: listDocumentFields
      x-ds-method: list
      x-ds-service: Envelopes
      x-ds-in-sdk: true
    put:
      tags:
      - EnvelopeDocumentFields
      summary: Updates existing custom document fields in an existing envelope document.
      description: Updates existing custom document fields in an existing envelope
        document.
      operationId: DocumentFields_PutDocumentFields
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: documentId
        in: path
        description: The ID of the document being accessed.
        required: true
        schema:
          type: string
      - name: envelopeId
        in: path
        description: 'The envelope''s GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec '
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnvelopeDocumentFields'
          application/xml:
            schema:
              $ref: '#/components/schemas/EnvelopeDocumentFields'
        required: false
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/EnvelopeDocumentFields'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: updateDocumentFields
      x-ds-method: update
      x-ds-service: Envelopes
      x-ds-in-sdk: true
      x-codegen-request-body-name: EnvelopeDocumentFields
    post:
      tags:
      - EnvelopeDocumentFields
      summary: Creates custom document fields in an existing envelope document.
      description: Creates custom document fields in an existing envelope document.
      operationId: DocumentFields_PostDocumentFields
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: documentId
        in: path
        description: The ID of the document being accessed.
        required: true
        schema:
          type: string
      - name: envelopeId
        in: path
        description: 'The envelope''s GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec '
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnvelopeDocumentFields'
          application/xml:
            schema:
              $ref: '#/components/schemas/EnvelopeDocumentFields'
        required: false
      responses:
        "201":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/EnvelopeDocumentFields'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: createDocumentFields
      x-ds-method: create
      x-ds-service: Envelopes
      x-ds-in-sdk: true
      x-codegen-request-body-name: EnvelopeDocumentFields
    delete:
      tags:
      - EnvelopeDocumentFields
      summary: Deletes custom document fields from an existing envelope document.
      description: Deletes custom document fields from an existing envelope document.
      operationId: DocumentFields_DeleteDocumentFields
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: documentId
        in: path
        description: The ID of the document being accessed.
        required: true
        schema:
          type: string
      - name: envelopeId
        in: path
        description: 'The envelope''s GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec '
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnvelopeDocumentFields'
          application/xml:
            schema:
              $ref: '#/components/schemas/EnvelopeDocumentFields'
        required: false
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/EnvelopeDocumentFields'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: deleteDocumentFields
      x-ds-method: delete
      x-ds-service: Envelopes
      x-ds-in-sdk: true
      x-codegen-request-body-name: EnvelopeDocumentFields
  /v2/accounts/{accountId}/envelopes/{envelopeId}/documents/{documentId}/html_definitions:
    get:
      tags:
      - EnvelopeDocumentHtmlDefinitions
      operationId: ResponsiveHtml_GetEnvelopeDocumentHtmlDefinitions
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: documentId
        in: path
        description: The ID of the document being accessed.
        required: true
        schema:
          type: string
      - name: envelopeId
        in: path
        description: 'The envelope''s GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec '
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/documentHtmlDefinitionOriginals'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: getEnvelopeDocumentHtmlDefinitions
      x-ds-method: get
      x-ds-service: Uncategorized
      x-ds-in-sdk: true
  /v2/accounts/{accountId}/envelopes/{envelopeId}/documents/{documentId}/pages:
    get:
      tags:
      - Envelopes
      summary: Returns document page image(s) based on input.
      operationId: Pages_GetPageImages
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: documentId
        in: path
        description: The ID of the document being accessed.
        required: true
        schema:
          type: string
      - name: envelopeId
        in: path
        description: 'The envelope''s GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec '
        required: true
        schema:
          type: string
      - name: count
        in: query
        description: The maximum number of results to be returned by this request.
        schema:
          type: string
      - name: dpi
        in: query
        description: Number of dots per inch for the resulting image. The default
          if not used is 94. The range is 1-310.
        schema:
          type: string
      - name: max_height
        in: query
        description: Sets the maximum height (in pixels) of the returned image.
        schema:
          type: string
      - name: max_width
        in: query
        description: Sets the maximum width (in pixels) of the returned image.
        schema:
          type: string
      - name: nocache
        in: query
        schema:
          type: string
      - name: show_changes
        in: query
        schema:
          type: string
      - name: start_position
        in: query
        description: The position within the total result set from which to start
          returning values. The value **thumbnail** may be used to return the page
          image.
        schema:
          type: string
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/pageImages'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: getDocumentPageImages
      x-ds-method: getPageImages
      x-ds-service: Envelopes
      x-ds-in-sdk: true
  /v2/accounts/{accountId}/envelopes/{envelopeId}/documents/{documentId}/pages/{pageNumber}:
    delete:
      tags:
      - Envelopes
      summary: Deletes a page from a document in an envelope.
      description: Deletes a page from a document in an envelope based on the page
        number.
      operationId: Pages_DeletePage
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: documentId
        in: path
        description: The ID of the document being accessed.
        required: true
        schema:
          type: string
      - name: envelopeId
        in: path
        description: 'The envelope''s GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec '
        required: true
        schema:
          type: string
      - name: pageNumber
        in: path
        description: The page number being accessed.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful response.
          content: {}
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: deleteDocumentPage
      x-ds-method: deleteDocumentPage
      x-ds-service: Envelopes
      x-ds-in-sdk: true
  /v2/accounts/{accountId}/envelopes/{envelopeId}/documents/{documentId}/pages/{pageNumber}/page_image:
    get:
      tags:
      - Envelopes
      summary: Gets a page image from an envelope for display.
      description: Retrieves a page image for display from the specified envelope.
      operationId: Pages_GetPageImage
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: documentId
        in: path
        description: The ID of the document being accessed.
        required: true
        schema:
          type: string
      - name: envelopeId
        in: path
        description: 'The envelope''s GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec '
        required: true
        schema:
          type: string
      - name: pageNumber
        in: path
        description: The page number being accessed.
        required: true
        schema:
          type: string
      - name: dpi
        in: query
        description: Sets the dpi for the image.
        schema:
          type: string
      - name: max_height
        in: query
        description: Sets the maximum height for the page image in pixels. The dpi
          is recalculated based on this setting.
        schema:
          type: string
      - name: max_width
        in: query
        description: Sets the maximum width for the page image in pixels. The dpi
          is recalculated based on this setting.
        schema:
          type: string
      - name: show_changes
        in: query
        schema:
          type: string
      responses:
        "200":
          description: Successful response.
          content:
            image/png:
              schema:
                type: string
                format: binary
        "400":
          description: Error encountered.
          content:
            image/png:
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: getDocumentPageImage
      x-ds-method: getPageImage
      x-ds-service: Envelopes
      x-ds-in-sdk: true
    put:
      tags:
      - Envelopes
      summary: Rotates page image from an envelope for display.
      description: Rotates page image from an envelope for display. The page image
        can be rotated to the left or right.
      operationId: Pages_PutPageImage
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: documentId
        in: path
        description: The ID of the document being accessed.
        required: true
        schema:
          type: string
      - name: envelopeId
        in: path
        description: 'The envelope''s GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec '
        required: true
        schema:
          type: string
      - name: pageNumber
        in: path
        description: The page number being accessed.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/pageRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/pageRequest'
        required: false
      responses:
        "200":
          description: Successful response.
          content: {}
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: rotateDocumentPage
      x-ds-method: rotateDocumentPage
      x-ds-service: Envelopes
      x-ds-in-sdk: true
      x-codegen-request-body-name: pageRequest
  /v2/accounts/{accountId}/envelopes/{envelopeId}/documents/{documentId}/pages/{pageNumber}/tabs:
    get:
      tags:
      - EnvelopeDocumentTabs
      summary: Returns tabs on the specified page.
      operationId: Tabs_GetPageTabs
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: documentId
        in: path
        description: The ID of the document being accessed.
        required: true
        schema:
          type: string
      - name: envelopeId
        in: path
        description: 'The envelope''s GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec '
        required: true
        schema:
          type: string
      - name: pageNumber
        in: path
        description: The page number being accessed.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/EnvelopeDocumentTabs'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: getPageTabs
      x-ds-method: getByPage
      x-ds-service: Envelopes
      x-ds-in-sdk: true
  /v2/accounts/{accountId}/envelopes/{envelopeId}/documents/{documentId}/responsive_html_preview:
    post:
      tags:
      - DocumentResponsiveHtmlPreview
      operationId: ResponsiveHtml_PostDocumentResponsiveHtmlPreview
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: documentId
        in: path
        description: The ID of the document being accessed.
        required: true
        schema:
          type: string
      - name: envelopeId
        in: path
        description: 'The envelope''s GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec '
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/documentHtmlDefinition'
          application/xml:
            schema:
              $ref: '#/components/schemas/documentHtmlDefinition'
        required: false
      responses:
        "201":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/documentHtmlDefinitions'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: createDocumentResponsiveHtmlPreview
      x-ds-method: create
      x-ds-service: Uncategorized
      x-ds-in-sdk: true
      x-codegen-request-body-name: documentHtmlDefinition
  /v2/accounts/{accountId}/envelopes/{envelopeId}/documents/{documentId}/tabs:
    get:
      tags:
      - EnvelopeDocumentTabs
      summary: Returns tabs on the document.
      operationId: Tabs_GetDocumentTabs
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: documentId
        in: path
        description: The ID of the document being accessed.
        required: true
        schema:
          type: string
      - name: envelopeId
        in: path
        description: 'The envelope''s GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec '
        required: true
        schema:
          type: string
      - name: page_numbers
        in: query
        schema:
          type: string
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/EnvelopeDocumentTabs'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: getDocumentTabs
      x-ds-method: get
      x-ds-service: Envelopes
      x-ds-in-sdk: true
  /v2/accounts/{accountId}/envelopes/{envelopeId}/documents/{documentId}/templates:
    get:
      tags:
      - EnvelopeTemplates
      summary: Gets the templates associated with a document in an existing envelope.
      description: Retrieves the templates associated with a document in the specified
        envelope.
      operationId: Templates_GetDocumentTemplates
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: documentId
        in: path
        description: The ID of the document being accessed.
        required: true
        schema:
          type: string
      - name: envelopeId
        in: path
        description: 'The envelope''s GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec '
        required: true
        schema:
          type: string
      - name: include
        in: query
        description: |
          A comma-separated list
          that limits the results.
          Valid values:

          * applied
          * matched
        schema:
          type: string
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/templateInformation'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: listTemplatesForDocument
      x-ds-method: listByDocument
      x-ds-service: Envelopes
      x-ds-in-sdk: true
    post:
      tags:
      - EnvelopeTemplates
      summary: Adds templates to a document in an  envelope.
      description: Adds templates to a document in the specified envelope.
      operationId: Templates_PostDocumentTemplates
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: documentId
        in: path
        description: The ID of the document being accessed.
        required: true
        schema:
          type: string
      - name: envelopeId
        in: path
        description: 'The envelope''s GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec '
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/documentTemplateList'
          application/xml:
            schema:
              $ref: '#/components/schemas/documentTemplateList'
        required: false
      responses:
        "201":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/documentTemplateList'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: applyTemplateToDocument
      x-ds-method: applyToDocument
      x-ds-service: Envelopes
      x-ds-in-sdk: true
      x-codegen-request-body-name: documentTemplateList
  /v2/accounts/{accountId}/envelopes/{envelopeId}/documents/{documentId}/templates/{templateId}:
    delete:
      tags:
      - EnvelopeTemplates
      summary: Deletes a template from a document in an existing envelope.
      description: Deletes the specified template from a document in an existing envelope.
      operationId: Templates_DeleteDocumentTemplates
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: documentId
        in: path
        description: The ID of the document being accessed.
        required: true
        schema:
          type: string
      - name: envelopeId
        in: path
        description: 'The envelope''s GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec '
        required: true
        schema:
          type: string
      - name: templateId
        in: path
        description: The ID of the template being accessed.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful response.
          content: {}
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: deleteTemplatesFromDocument
      x-ds-method: delete
      x-ds-service: Envelopes
      x-ds-in-sdk: true
  /v2/accounts/{accountId}/envelopes/{envelopeId}/email_settings:
    get:
      tags:
      - EnvelopeEmailSettings
      summary: Gets the email setting overrides for an envelope.
      description: Retrieves the email override settings for the specified envelope.
      operationId: EmailSettings_GetEmailSettings
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: envelopeId
        in: path
        description: 'The envelope''s GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec '
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/emailSettings'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: getEmailSettings
      x-ds-method: get
      x-ds-service: Envelopes
      x-ds-in-sdk: true
    put:
      tags:
      - EnvelopeEmailSettings
      summary: Updates the email setting overrides for an envelope.
      description: |-
        Updates the existing email override settings for the specified envelope. Note that modifying email settings will only affect email communications that occur after the modification was made.

        This can also be used to delete an individual email override setting by using an empty string for the value to be deleted.
      operationId: EmailSettings_PutEmailSettings
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: envelopeId
        in: path
        description: 'The envelope''s GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec '
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/emailSettings'
          application/xml:
            schema:
              $ref: '#/components/schemas/emailSettings'
        required: false
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/emailSettings'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: updateEmailSettings
      x-ds-method: update
      x-ds-service: Envelopes
      x-ds-in-sdk: true
      x-codegen-request-body-name: emailSettings
    post:
      tags:
      - EnvelopeEmailSettings
      summary: Adds email setting overrides to an envelope.
      description: |-
        Adds email override settings, changing the email address to reply to an email address, name, or the BCC for email archive information, for the envelope. Note that adding email settings will only affect email communications that occur after the addition was made.

        ### Important: The BCC Email address feature is designed to provide a copy of all email communications for external archiving purposes. DocuSign recommends that envelopes sent using the BCC for Email Archive feature, including the BCC Email Override option, include additional signer authentication options. To send a copy of the envelope to a recipient who does not need to sign, use a Carbon Copy or Certified Delivery recipient type.
      operationId: EmailSettings_PostEmailSettings
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: envelopeId
        in: path
        description: 'The envelope''s GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec '
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/emailSettings'
          application/xml:
            schema:
              $ref: '#/components/schemas/emailSettings'
        required: false
      responses:
        "201":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/emailSettings'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: createEmailSettings
      x-ds-method: create
      x-ds-service: Envelopes
      x-ds-in-sdk: true
      x-codegen-request-body-name: emailSettings
    delete:
      tags:
      - EnvelopeEmailSettings
      summary: Deletes the email setting overrides for an envelope.
      description: "Deletes all existing email override settings for the envelope.\
        \ If you want to delete an individual email override setting, use the PUT\
        \ and set the value to an empty string. Note that deleting email settings\
        \ will only affect email communications that occur after the deletion and\
        \ the normal account email settings are used for future email communications."
      operationId: EmailSettings_DeleteEmailSettings
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: envelopeId
        in: path
        description: 'The envelope''s GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec '
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/emailSettings'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: deleteEmailSettings
      x-ds-method: delete
      x-ds-service: Envelopes
      x-ds-in-sdk: true
  /v2/accounts/{accountId}/envelopes/{envelopeId}/form_data:
    get:
      tags:
      - EnvelopeFormData
      summary: Returns envelope form data for an existing envelope.
      operationId: FormData_GetFormData
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: envelopeId
        in: path
        description: 'The envelope''s GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec '
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/envelopeFormData'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: getFormData
      x-ds-method: get
      x-ds-service: Envelopes
      x-ds-in-sdk: true
  /v2/accounts/{accountId}/envelopes/{envelopeId}/html_definitions:
    get:
      tags:
      - EnvelopeHtmlDefinitions
      operationId: ResponsiveHtml_GetEnvelopeHtmlDefinitions
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: envelopeId
        in: path
        description: 'The envelope''s GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec '
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/documentHtmlDefinitionOriginals'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: getEnvelopeHtmlDefinitions
      x-ds-method: list
      x-ds-service: Uncategorized
      x-ds-in-sdk: true
  /v2/accounts/{accountId}/envelopes/{envelopeId}/lock:
    get:
      tags:
      - EnvelopeLocks
      summary: Gets envelope lock information.
      description: |-
        Retrieves general information about the envelope lock.

        If the call is made by the locked by user and the request has the same integrator key as original, then the `X-DocuSign-Edit` header and additional lock information is included in the response. This allows users to recover a lost editing session token and the `X-DocuSign-Edit` header.
      operationId: Lock_GetEnvelopeLock
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: envelopeId
        in: path
        description: 'The envelope''s GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec '
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/EnvelopeLocks'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: getLock
      x-ds-method: get
      x-ds-service: Envelopes
      x-ds-in-sdk: true
    put:
      tags:
      - EnvelopeLocks
      summary: Updates an envelope lock.
      description: Updates the lock duration time or update the `lockedByApp` property
        information for the specified envelope. The user and integrator key must match
        the user specified by the `lockByUser` property and integrator key information
        and the `X-DocuSign-Edit` header must be included or an error will be generated.
      operationId: Lock_PutEnvelopeLock
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: envelopeId
        in: path
        description: 'The envelope''s GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec '
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/lockRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/lockRequest'
        required: false
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/EnvelopeLocks'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: updateLock
      x-ds-method: update
      x-ds-service: Envelopes
      x-ds-in-sdk: true
      x-codegen-request-body-name: lockRequest
    post:
      tags:
      - EnvelopeLocks
      summary: Lock an envelope.
      description: |-
        Locks the specified envelope, and sets the time until the lock expires, to prevent other users or recipients from accessing and changing the envelope.

        ###### Note: Users must have envelope locking capability enabled to use this function (userSetting `canLockEnvelopes` must be  set to true for the user).
      operationId: Lock_PostEnvelopeLock
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: envelopeId
        in: path
        description: 'The envelope''s GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec '
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/lockRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/lockRequest'
        required: false
      responses:
        "201":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/EnvelopeLocks'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: createLock
      x-ds-method: create
      x-ds-service: Envelopes
      x-ds-in-sdk: true
      x-codegen-request-body-name: lockRequest
    delete:
      tags:
      - EnvelopeLocks
      summary: Deletes an envelope lock.
      description: Deletes the lock from the specified envelope. The `X-DocuSign-Edit`
        header must be included in the request.
      operationId: Lock_DeleteEnvelopeLock
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: envelopeId
        in: path
        description: 'The envelope''s GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec '
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/EnvelopeLocks'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: deleteLock
      x-ds-method: delete
      x-ds-service: Envelopes
      x-ds-in-sdk: true
  /v2/accounts/{accountId}/envelopes/{envelopeId}/notification:
    get:
      tags:
      - Envelopes
      summary: Gets envelope notification information.
      description: "Retrieves the envelope notification, reminders and expirations,\
        \ information for an existing envelope."
      operationId: Notification_GetEnvelopesEnvelopeIdNotification
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: envelopeId
        in: path
        description: 'The envelope''s GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec '
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/notification'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: getNotificationSettings
      x-ds-method: getNotificationSettings
      x-ds-service: Envelopes
      x-ds-in-sdk: true
    put:
      tags:
      - Envelopes
      summary: Sets envelope notification (Reminders/Expirations) structure for an
        existing envelope.
      operationId: Notification_PutEnvelopesEnvelopeIdNotification
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: envelopeId
        in: path
        description: 'The envelope''s GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec '
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/envelopeNotificationRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/envelopeNotificationRequest'
        required: false
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/notification'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: updateNotificationSettings
      x-ds-method: updateNotificationSettings
      x-ds-service: Envelopes
      x-ds-in-sdk: true
      x-codegen-request-body-name: envelopeNotificationRequest
  /v2/accounts/{accountId}/envelopes/{envelopeId}/recipients:
    get:
      tags:
      - EnvelopeRecipients
      summary: Gets the status of recipients for an envelope.
      description: |-
        Retrieves the status of all recipients in a single envelope and identifies the current recipient in the routing list. This method can also be used to retrieve the tab values.

        The `currentRoutingOrder` property of the response contains the `routingOrder` value of the current recipient indicating that the envelope has been sent to the recipient, but the recipient has not completed their actions.
      operationId: Recipients_GetRecipients
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: envelopeId
        in: path
        description: 'The envelope''s GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec '
        required: true
        schema:
          type: string
      - name: include_anchor_tab_locations
        in: query
        description: " When set to **true** and `include_tabs` value is set to **true**,\
          \ all tabs with anchor tab properties are included in the response. "
        schema:
          type: string
      - name: include_extended
        in: query
        description: " When set to **true**, the extended properties are included\
          \ in the response. "
        schema:
          type: string
      - name: include_tabs
        in: query
        description: "When set to **true**, the tab information associated with the\
          \ recipient is included in the response."
        schema:
          type: string
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/EnvelopeRecipients'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: listRecipients
      x-ds-method: list
      x-ds-service: Envelopes
      x-ds-in-sdk: true
      x-ds-examples:
      - description: |+
          This example shows the result of an envelope
          with one signer and a CC'ed recipient.


          ### Request
          The request for this endpoint has no payload.

          ```
          GET /restapi/v2/accounts/1703061/envelopes/44efc9e6-915e-4b1d-9b54-801410d6922d/recipients
          ```


        direction: response
        format: json
        response:
          agents: []
          carbonCopies:
          - email: aoneil@example.com
            name: Ariana O'Neill
            recipientId: "2"
            recipientIdGuid: 72edf9b6-4a4e-4c24-b982-86bc5d598bb8
            requireIdLookup: "false"
            routingOrder: "2"
            status: completed
            userId: b72bd827-096b-4c40-b33d-64ab32f0a0eb
          certifiedDeliveries: []
          currentRoutingOrder: "1"
          editors: []
          inPersonSigners: []
          intermediaries: []
          recipientCount: "2"
          signers:
          - deliveredDateTime: 2016-10-05T21:18:12.3330000Z
            email: jallard@example.com
            isBulkRecipient: "false"
            name: Jennie Allard
            recipientId: "1"
            recipientIdGuid: 4575d5e9-7654-467b-b2f5-6c59ca7c43f8
            requireIdLookup: "false"
            routingOrder: "1"
            signedDateTime: 2016-10-05T21:18:41.6930000Z
            status: completed
            userId: ca45284a-a94e-4ee2-90af-76035bd795b2
        style: custom
        title: List Recipients and CC-ed Recipients
      - description: |
          This example shows the method's response after the envelope was signed.

          The signer recipient successfully authenticated using:
          * An access code (a pre-shared secret between the sender and the signer)
          * Authentication via Facebook. The Facebook email address is recorded in the Certificate of Completion
        direction: response
        format: json
        response:
          agents: []
          carbonCopies: []
          certifiedDeliveries: []
          currentRoutingOrder: "1"
          editors: []
          inPersonSigners: []
          intermediaries: []
          recipientCount: "1"
          signers:
          - accessCode: "1234"
            deliveredDateTime: 2016-07-11T06:19:36.4200000Z
            email: larry@example.com
            idCheckConfigurationName: Facebook
            isBulkRecipient: "false"
            name: Larry Smithers
            recipientAuthenticationStatus:
              accessCodeResult:
                eventTimestamp: 2016-07-11T06:18:55.7170000Z
                status: Passed
              facebookResult:
                eventTimestamp: 2016-07-11T06:19:28.3170000Z
                status: Passed
            recipientId: "1"
            recipientIdGuid: 9670e679-adbd-4d1b-913d-02b43027cb0a
            requireIdLookup: "true"
            routingOrder: "1"
            signInEachLocation: "false"
            signedDateTime: 2016-07-11T06:19:44.7470000Z
            status: completed
            userId: 57a7b68f-0113-4870-9385-381042d14ca5
        style: custom
        title: List Recipients Who Used Facebook and Access Code Authentication
    put:
      tags:
      - EnvelopeRecipients
      summary: Updates recipients in a draft envelope or corrects recipient information
        for an in process envelope.
      description: "Updates recipients in a draft envelope or corrects recipient information\
        \ for an in process envelope. \n\nFor draft envelopes, you can edit the following\
        \ properties: `email`, `userName`, `routingOrder`, `faxNumber`, `deliveryMethod`,\
        \ `accessCode`, and `requireIdLookup`.\n\nOnce an envelope has been sent,\
        \ you can only edit: `email`, `userName`, `signerName`, `signingGroupId`,\
        \ `routingOrder`, `faxNumber`, and `deliveryMethod`. You can also select to\
        \ resend an envelope by using the `resend_envelope` option.\n\nIf you send\
        \ information for a recipient that does not already exist in a draft envelope,\
        \ the recipient is added to the envelope (similar to the POST)."
      operationId: Recipients_PutRecipients
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: envelopeId
        in: path
        description: 'The envelope''s GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec '
        required: true
        schema:
          type: string
      - name: offline_signing
        in: query
        schema:
          type: string
      - name: resend_envelope
        in: query
        description: "When set to **true**, resends the   envelope if the new recipient's\
          \ routing order is before or the same as the envelope's next recipient."
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnvelopeRecipients'
          application/xml:
            schema:
              $ref: '#/components/schemas/EnvelopeRecipients'
        required: false
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/recipientsUpdateSummary'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: updateRecipients
      x-ds-method: update
      x-ds-service: Envelopes
      x-ds-in-sdk: true
      x-codegen-request-body-name: EnvelopeRecipients
    post:
      tags:
      - EnvelopeRecipients
      summary: Adds one or more recipients to an envelope.
      description: |-
        Adds one or more recipients to an envelope.

        For an in process envelope, one that has been sent and has not been completed or voided, an email is sent to a new recipient when they are reached in the routing order. If the new recipient's routing order is before or the same as the envelope's next recipient, an email is only sent if the optional `resend_envelope` query string is set to **true**.
      operationId: Recipients_PostRecipients
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: envelopeId
        in: path
        description: 'The envelope''s GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec '
        required: true
        schema:
          type: string
      - name: resend_envelope
        in: query
        description: "When set to **true**, resends the   envelope if the new recipient's\
          \ routing order is before or the same as the envelope's next recipient."
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnvelopeRecipients'
          application/xml:
            schema:
              $ref: '#/components/schemas/EnvelopeRecipients'
        required: false
      responses:
        "201":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/EnvelopeRecipients'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: createRecipient
      x-ds-method: create
      x-ds-service: Envelopes
      x-ds-in-sdk: true
      x-codegen-request-body-name: EnvelopeRecipients
    delete:
      tags:
      - EnvelopeRecipients
      summary: Deletes recipients from an envelope.
      description: |-
        Deletes one or more recipients from a draft or sent envelope. Recipients to be deleted are listed in the request, with the `recipientId` being used as the key for deleting recipients.

        If the envelope is `In Process`, meaning that it has been sent and has not  been completed or voided, recipients that have completed their actions cannot be deleted.
      operationId: Recipients_DeleteRecipients
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: envelopeId
        in: path
        description: 'The envelope''s GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec '
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnvelopeRecipients'
          application/xml:
            schema:
              $ref: '#/components/schemas/EnvelopeRecipients'
        required: false
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/EnvelopeRecipients'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: deleteRecipients
      x-ds-method: deleteList
      x-ds-service: Envelopes
      x-ds-in-sdk: true
      x-codegen-request-body-name: EnvelopeRecipients
  /v2/accounts/{accountId}/envelopes/{envelopeId}/recipients/{recipientId}:
    delete:
      tags:
      - EnvelopeRecipients
      summary: Deletes a recipient from an envelope.
      description: |-
        Deletes a recipient from a `draft` or `sent` envelope.

        If the envelope is "In Process" (has been sent and is not completed or voided), recipients that have completed their actions cannot be deleted.
      operationId: Recipients_DeleteRecipient
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: envelopeId
        in: path
        description: 'The envelope''s GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec '
        required: true
        schema:
          type: string
      - name: recipientId
        in: path
        description: "A local reference that senders use to map recipients to other\
          \ objects, such as specific document tabs. Within an envelope, each `recipientId`\
          \ must be unique, but there is no uniqueness requirement across envelopes.\
          \ For example, many envelopes assign the first recipient a `recipientId`\
          \ of `1`."
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/EnvelopeRecipients'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: deleteRecipient
      x-ds-method: delete
      x-ds-service: Envelopes
      x-ds-in-sdk: true
  /v2/accounts/{accountId}/envelopes/{envelopeId}/recipients/{recipientId}/consumer_disclosure:
    get:
      tags:
      - EnvelopeConsumerDisclosures
      summary: Gets the Electronic Record and Signature Disclosure associated with
        the account.
      description: "Retrieves the Electronic Record and Signature Disclosure, with\
        \ html formatting, associated with the account. You can use an optional query\
        \ string to set the language for the disclosure."
      operationId: ConsumerDisclosure_GetConsumerDisclosureEnvelopeIdRecipientId
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: envelopeId
        in: path
        description: 'The envelope''s GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec '
        required: true
        schema:
          type: string
      - name: recipientId
        in: path
        description: "A local reference that senders use to map recipients to other\
          \ objects, such as specific document tabs. Within an envelope, each `recipientId`\
          \ must be unique, but there is no uniqueness requirement across envelopes.\
          \ For example, many envelopes assign the first recipient a `recipientId`\
          \ of `1`."
        required: true
        schema:
          type: string
      - name: langCode
        in: query
        schema:
          type: string
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/consumerDisclosure'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: getConsumerDisclosureDefault
      x-ds-method: getDefault
      x-ds-service: Envelopes
      x-ds-in-sdk: true
  /v2/accounts/{accountId}/envelopes/{envelopeId}/recipients/{recipientId}/consumer_disclosure/{langCode}:
    get:
      tags:
      - EnvelopeConsumerDisclosures
      summary: "Reserved: Gets the Electronic Record and Signature Disclosure associated\
        \ with the account."
      description: "Reserved: Retrieves the Electronic Record and Signature Disclosure,\
        \ with HTML formatting, associated with the account."
      operationId: ConsumerDisclosure_GetConsumerDisclosureEnvelopeIdRecipientIdLangCode
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: envelopeId
        in: path
        description: 'The envelope''s GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec '
        required: true
        schema:
          type: string
      - name: langCode
        in: path
        description: "The simple type enumeration the language used in the response.\
          \ The supported languages, with the language value shown in parenthesis,\
          \ are:Arabic (ar), Bulgarian (bg), Czech (cs), Chinese Simplified (zh_CN),\
          \ Chinese Traditional (zh_TW), Croatian (hr), Danish (da), Dutch (nl), English\
          \ US (en), English UK (en_GB), Estonian (et), Farsi (fa), Finnish (fi),\
          \ French (fr), French Canada (fr_CA), German (de), Greek (el), Hebrew (he),\
          \ Hindi (hi), Hungarian (hu), Bahasa Indonesia (id), Italian (it), Japanese\
          \ (ja), Korean (ko), Latvian (lv), Lithuanian (lt), Bahasa Melayu (ms),\
          \ Norwegian (no), Polish (pl), Portuguese (pt), Portuguese Brazil (pt_BR),\
          \ Romanian (ro), Russian (ru), Serbian (sr), Slovak (sk), Slovenian (sl),\
          \ Spanish (es),Spanish Latin America (es_MX), Swedish (sv), Thai (th), Turkish\
          \ (tr), Ukrainian (uk) and Vietnamese (vi). Additionally, the value can\
          \ be set to \"browser\" to automatically detect the browser language being\
          \ used by the viewer and display the disclosure in that language."
        required: true
        schema:
          type: string
      - name: recipientId
        in: path
        description: "A local reference that senders use to map recipients to other\
          \ objects, such as specific document tabs. Within an envelope, each `recipientId`\
          \ must be unique, but there is no uniqueness requirement across envelopes.\
          \ For example, many envelopes assign the first recipient a `recipientId`\
          \ of `1`."
        required: true
        schema:
          type: string
      - name: langCode
        in: query
        schema:
          type: string
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/consumerDisclosure'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: getConsumerDisclosure
      x-ds-method: get
      x-ds-service: Envelopes
      x-ds-in-sdk: true
  /v2/accounts/{accountId}/envelopes/{envelopeId}/recipients/{recipientId}/document_visibility:
    get:
      tags:
      - EnvelopeDocumentVisibility
      summary: Returns document visibility for the recipients
      operationId: Recipients_GetRecipientDocumentVisibility
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: envelopeId
        in: path
        description: 'The envelope''s GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec '
        required: true
        schema:
          type: string
      - name: recipientId
        in: path
        description: "A local reference that senders use to map recipients to other\
          \ objects, such as specific document tabs. Within an envelope, each `recipientId`\
          \ must be unique, but there is no uniqueness requirement across envelopes.\
          \ For example, many envelopes assign the first recipient a `recipientId`\
          \ of `1`."
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/documentVisibilityList'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: getRecipientDocumentVisibility
      x-ds-method: get
      x-ds-service: Envelopes
      x-ds-in-sdk: true
    put:
      tags:
      - EnvelopeDocumentVisibility
      summary: Updates document visibility for the recipients
      operationId: Recipients_PutRecipientDocumentVisibility
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: envelopeId
        in: path
        description: 'The envelope''s GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec '
        required: true
        schema:
          type: string
      - name: recipientId
        in: path
        description: "A local reference that senders use to map recipients to other\
          \ objects, such as specific document tabs. Within an envelope, each `recipientId`\
          \ must be unique, but there is no uniqueness requirement across envelopes.\
          \ For example, many envelopes assign the first recipient a `recipientId`\
          \ of `1`."
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/documentVisibilityList'
          application/xml:
            schema:
              $ref: '#/components/schemas/documentVisibilityList'
        required: false
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/documentVisibilityList'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: updateRecipientDocumentVisibility
      x-ds-method: update
      x-ds-service: Envelopes
      x-ds-in-sdk: true
      x-codegen-request-body-name: documentVisibilityList
  /v2/accounts/{accountId}/envelopes/{envelopeId}/recipients/{recipientId}/initials_image:
    get:
      tags:
      - Envelopes
      summary: Gets the initials image for a user.
      description: "Retrieves the initials image for the specified user. The image\
        \ is returned in the same format as it was uploaded. In the request you can\
        \ specify if the chrome (the added line and identifier around the initial\
        \ image) is returned with the image.\n\nThe userId specified in the endpoint\
        \ must match the authenticated user's user id and the user must be a member\
        \ of the account.\n\nThe `signatureIdOrName` paramter accepts signature ID\
        \ or signature name. DocuSign recommends you use signature ID (`signatureId`),\
        \ since some names contain characters that do not properly URL encode. If\
        \ you use the user name, it is likely that the name includes spaces and you\
        \ might need to URL encode the name before using it in the endpoint. \n\n\
        For example: \"Bob Smith\" to \"Bob%20Smith\"\n\nOlder envelopes might only\
        \ contain chromed images. If getting the non-chromed image fails, try getting\
        \ the chromed image."
      operationId: Recipients_GetRecipientInitialsImage
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: envelopeId
        in: path
        description: 'The envelope''s GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec '
        required: true
        schema:
          type: string
      - name: recipientId
        in: path
        description: "A local reference that senders use to map recipients to other\
          \ objects, such as specific document tabs. Within an envelope, each `recipientId`\
          \ must be unique, but there is no uniqueness requirement across envelopes.\
          \ For example, many envelopes assign the first recipient a `recipientId`\
          \ of `1`."
        required: true
        schema:
          type: string
      - name: include_chrome
        in: query
        description: "The added line and identifier around the initial image. Note:\
          \ Older envelopes might only have chromed images. If getting the non-chromed\
          \ image fails, try getting the chromed image."
        schema:
          type: string
      responses:
        "200":
          description: Successful response.
          content:
            image/gif:
              schema:
                type: string
                format: binary
        "400":
          description: Error encountered.
          content:
            image/gif:
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: getRecipientInitialsImage
      x-ds-method: getRecipientInitialsImage
      x-ds-service: Envelopes
      x-ds-in-sdk: true
    put:
      tags:
      - Envelopes
      summary: Sets the initials image for an accountless signer.
      description: |-
        Updates the initials image for a signer that does not have a DocuSign account. The supported image formats for this file are: gif, png, jpeg, and bmp. The file size must be less than 200K.

        For the Authentication/Authorization for this call, the credentials must match the sender of the envelope, the recipient must be an accountless signer or in person signer. The account must have the `CanSendEnvelope` property set to **true** and the `ExpressSendOnly` property in `SendingUser` structure must be set to **false**.
      operationId: Recipients_PutRecipientInitialsImage
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: envelopeId
        in: path
        description: 'The envelope''s GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec '
        required: true
        schema:
          type: string
      - name: recipientId
        in: path
        description: "A local reference that senders use to map recipients to other\
          \ objects, such as specific document tabs. Within an envelope, each `recipientId`\
          \ must be unique, but there is no uniqueness requirement across envelopes.\
          \ For example, many envelopes assign the first recipient a `recipientId`\
          \ of `1`."
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful response.
          content: {}
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: updateRecipientInitialsImage
      x-ds-method: updateRecipientInitialsImage
      x-ds-service: Envelopes
      x-ds-in-sdk: true
  /v2/accounts/{accountId}/envelopes/{envelopeId}/recipients/{recipientId}/signature:
    get:
      tags:
      - Envelopes
      summary: Gets signature information for a signer or sign-in-person recipient.
      description: Retrieves signature information for a signer or sign-in-person
        recipient.
      operationId: Recipients_GetRecipientSignature
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: envelopeId
        in: path
        description: 'The envelope''s GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec '
        required: true
        schema:
          type: string
      - name: recipientId
        in: path
        description: "A local reference that senders use to map recipients to other\
          \ objects, such as specific document tabs. Within an envelope, each `recipientId`\
          \ must be unique, but there is no uniqueness requirement across envelopes.\
          \ For example, many envelopes assign the first recipient a `recipientId`\
          \ of `1`."
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/userSignature'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: getRecipientSignature
      x-ds-method: getRecipientSignature
      x-ds-service: Envelopes
      x-ds-in-sdk: true
  /v2/accounts/{accountId}/envelopes/{envelopeId}/recipients/{recipientId}/signature_image:
    get:
      tags:
      - Envelopes
      summary: Retrieve signature image information for a signer/sign-in-person recipient.
      description: "Retrieves the specified user signature image. The image is returned\
        \ in the same format as uploaded. In the request you can specify if the chrome\
        \ (the added line and identifier around the initial image) is returned with\
        \ the image.\n\nThe userId specified in the endpoint must match the authenticated\
        \ user's user ID and the user must be a member of the account.\n\nThe `signatureIdOrName`\
        \ parameter accepts signature ID or signature name. DocuSign recommends you\
        \ use signature ID (`signatureId`), since some names contain characters that\
        \ don't properly URL encode. If you use the user name, it is likely that the\
        \ name includes spaces and you might need to URL encode the name before using\
        \ it in the endpoint. \n\nFor example: \"Bob Smith\" to \"Bob%20Smith\"\n\n\
        Older envelopes might only have chromed images. If getting the non-chromed\
        \ image fails, try getting the chromed image."
      operationId: Recipients_GetRecipientSignatureImage
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: envelopeId
        in: path
        description: 'The envelope''s GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec '
        required: true
        schema:
          type: string
      - name: recipientId
        in: path
        description: "A local reference that senders use to map recipients to other\
          \ objects, such as specific document tabs. Within an envelope, each `recipientId`\
          \ must be unique, but there is no uniqueness requirement across envelopes.\
          \ For example, many envelopes assign the first recipient a `recipientId`\
          \ of `1`."
        required: true
        schema:
          type: string
      - name: include_chrome
        in: query
        description: "When set to **true**, indicates the chromed version of the signature\
          \ image should be retrieved."
        schema:
          type: string
      responses:
        "200":
          description: Successful response.
          content:
            image/gif:
              schema:
                type: string
                format: binary
        "400":
          description: Error encountered.
          content:
            image/gif:
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: getRecipientSignatureImage
      x-ds-method: getRecipientSignatureImage
      x-ds-service: Envelopes
      x-ds-in-sdk: true
    put:
      tags:
      - Envelopes
      summary: Sets the signature image for an accountless signer.
      description: |-
        Updates the signature image for an accountless signer. The supported image formats for this file are: gif, png, jpeg, and bmp. The file size must be less than 200K.

        For the Authentication/Authorization for this call, the credentials must match the sender of the envelope, the recipient must be an accountless signer or in person signer. The account must have the `CanSendEnvelope` property set to **true** and the `ExpressSendOnly` property in `SendingUser` structure must be set to **false**.
      operationId: Recipients_PutRecipientSignatureImage
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: envelopeId
        in: path
        description: 'The envelope''s GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec '
        required: true
        schema:
          type: string
      - name: recipientId
        in: path
        description: "A local reference that senders use to map recipients to other\
          \ objects, such as specific document tabs. Within an envelope, each `recipientId`\
          \ must be unique, but there is no uniqueness requirement across envelopes.\
          \ For example, many envelopes assign the first recipient a `recipientId`\
          \ of `1`."
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful response.
          content: {}
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: updateRecipientSignatureImage
      x-ds-method: updateRecipientSignatureImage
      x-ds-service: Envelopes
      x-ds-in-sdk: true
  /v2/accounts/{accountId}/envelopes/{envelopeId}/recipients/{recipientId}/tabs:
    get:
      tags:
      - EnvelopeRecipientTabs
      summary: Gets the tabs information for a signer or sign-in-person recipient
        in an envelope.
      description: "Retrieves information about the tabs associated with a recipient.\
        \ You can make a single API call to get all the tab values and information\
        \ from a given, completed envelope in addition to draft ones.  Tab values\
        \ can be retrieved by using the [EnvelopeRecipients:list method](https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipients/list/)\
        \ with query parameter include_tabs set to \"true\"."
      operationId: Recipients_GetRecipientTabs
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: envelopeId
        in: path
        description: 'The envelope''s GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec '
        required: true
        schema:
          type: string
      - name: recipientId
        in: path
        description: "A local reference that senders use to map recipients to other\
          \ objects, such as specific document tabs. Within an envelope, each `recipientId`\
          \ must be unique, but there is no uniqueness requirement across envelopes.\
          \ For example, many envelopes assign the first recipient a `recipientId`\
          \ of `1`."
        required: true
        schema:
          type: string
      - name: include_anchor_tab_locations
        in: query
        description: "When set to **true**, all tabs with anchor tab properties are\
          \ included in the response. "
        schema:
          type: string
      - name: include_metadata
        in: query
        description: |
          Reserved for DocuSign.
        schema:
          type: string
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/EnvelopeRecipientTabs'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: listTabs
      x-ds-method: list
      x-ds-service: Envelopes
      x-ds-in-sdk: true
    put:
      tags:
      - EnvelopeRecipientTabs
      summary: |+
        Updates the tabs for a recipient.

      description: "Updates one or more tabs for a recipient in a draft envelope.\
        \ \n**Note**: The Update method can be used if the envelope is not yet complete.\
        \ To update an existing tab, the request body must include the `tabId`."
      operationId: Recipients_PutRecipientTabs
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: envelopeId
        in: path
        description: 'The envelope''s GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec '
        required: true
        schema:
          type: string
      - name: recipientId
        in: path
        description: "A local reference that senders use to map recipients to other\
          \ objects, such as specific document tabs. Within an envelope, each `recipientId`\
          \ must be unique, but there is no uniqueness requirement across envelopes.\
          \ For example, many envelopes assign the first recipient a `recipientId`\
          \ of `1`."
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnvelopeRecipientTabs'
          application/xml:
            schema:
              $ref: '#/components/schemas/EnvelopeRecipientTabs'
        required: false
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/EnvelopeRecipientTabs'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: updateTabs
      x-ds-method: update
      x-ds-service: Envelopes
      x-ds-in-sdk: true
      x-codegen-request-body-name: EnvelopeRecipientTabs
    post:
      tags:
      - EnvelopeRecipientTabs
      summary: Adds tabs for a recipient.
      description: Adds one or more tabs for a recipient.
      operationId: Recipients_PostRecipientTabs
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: envelopeId
        in: path
        description: 'The envelope''s GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec '
        required: true
        schema:
          type: string
      - name: recipientId
        in: path
        description: "A local reference that senders use to map recipients to other\
          \ objects, such as specific document tabs. Within an envelope, each `recipientId`\
          \ must be unique, but there is no uniqueness requirement across envelopes.\
          \ For example, many envelopes assign the first recipient a `recipientId`\
          \ of `1`."
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnvelopeRecipientTabs'
          application/xml:
            schema:
              $ref: '#/components/schemas/EnvelopeRecipientTabs'
        required: false
      responses:
        "201":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/EnvelopeRecipientTabs'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: createTabs
      x-ds-method: create
      x-ds-service: Envelopes
      x-ds-in-sdk: true
      x-codegen-request-body-name: EnvelopeRecipientTabs
    delete:
      tags:
      - EnvelopeRecipientTabs
      summary: Deletes the tabs associated with a recipient.
      description: Deletes one or more tabs associated with a recipient in a draft
        envelope.
      operationId: Recipients_DeleteRecipientTabs
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: envelopeId
        in: path
        description: 'The envelope''s GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec '
        required: true
        schema:
          type: string
      - name: recipientId
        in: path
        description: "A local reference that senders use to map recipients to other\
          \ objects, such as specific document tabs. Within an envelope, each `recipientId`\
          \ must be unique, but there is no uniqueness requirement across envelopes.\
          \ For example, many envelopes assign the first recipient a `recipientId`\
          \ of `1`."
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnvelopeRecipientTabs'
          application/xml:
            schema:
              $ref: '#/components/schemas/EnvelopeRecipientTabs'
        required: false
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/EnvelopeRecipientTabs'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: deleteTabs
      x-ds-method: delete
      x-ds-service: Envelopes
      x-ds-in-sdk: true
      x-codegen-request-body-name: EnvelopeRecipientTabs
  /v2/accounts/{accountId}/envelopes/{envelopeId}/recipients/document_visibility:
    put:
      tags:
      - EnvelopeDocumentVisibility
      summary: Updates document visibility for the recipients
      operationId: Recipients_PutRecipientsDocumentVisibility
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: envelopeId
        in: path
        description: 'The envelope''s GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec '
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/documentVisibilityList'
          application/xml:
            schema:
              $ref: '#/components/schemas/documentVisibilityList'
        required: false
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/documentVisibilityList'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: updateRecipientsDocumentVisibility
      x-ds-method: updateList
      x-ds-service: Envelopes
      x-ds-in-sdk: true
      x-codegen-request-body-name: documentVisibilityList
  /v2/accounts/{accountId}/envelopes/{envelopeId}/responsive_html_preview:
    post:
      tags:
      - ResponsiveHtmlPreview
      operationId: ResponsiveHtml_PostResponsiveHtmlPreview
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: envelopeId
        in: path
        description: 'The envelope''s GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec '
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/documentHtmlDefinition'
          application/xml:
            schema:
              $ref: '#/components/schemas/documentHtmlDefinition'
        required: false
      responses:
        "201":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/documentHtmlDefinitions'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: createResponsiveHtmlPreview
      x-ds-method: create
      x-ds-service: Uncategorized
      x-ds-in-sdk: true
      x-codegen-request-body-name: documentHtmlDefinition
  /v2/accounts/{accountId}/envelopes/{envelopeId}/templates:
    get:
      tags:
      - EnvelopeTemplates
      summary: Get List of Templates used in an Envelope
      description: |
        This returns a list of the server-side templates, their name and ID, used in an envelope.
      operationId: Templates_GetEnvelopeTemplates
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: envelopeId
        in: path
        description: 'The envelope''s GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec '
        required: true
        schema:
          type: string
      - name: include
        in: query
        description: "The possible values are:  matching_applied - This returns template\
          \ matching information for the template."
        schema:
          type: string
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/templateInformation'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: listTemplates
      x-ds-method: list
      x-ds-service: Envelopes
      x-ds-in-sdk: true
    post:
      tags:
      - EnvelopeTemplates
      summary: Adds templates to an envelope.
      description: Adds templates to the specified envelope.
      operationId: Templates_PostEnvelopeTemplates
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: envelopeId
        in: path
        description: 'The envelope''s GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec '
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/documentTemplateList'
          application/xml:
            schema:
              $ref: '#/components/schemas/documentTemplateList'
        required: false
      responses:
        "201":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/documentTemplateList'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: applyTemplate
      x-ds-method: apply
      x-ds-service: Envelopes
      x-ds-in-sdk: true
      x-codegen-request-body-name: documentTemplateList
  /v2/accounts/{accountId}/envelopes/{envelopeId}/views/correct:
    post:
      tags:
      - EnvelopeViews
      summary: Returns a URL to the envelope correction UI.
      description: "Returns a URL that allows you to embed the envelope correction\
        \ view of the DocuSign UI in your applications.\n\nImportant: iFrames should\
        \ not be used for embedded operations on mobile devices due to screen space\
        \ issues. For iOS devices DocuSign recommends using a WebView. "
      operationId: Views_PostEnvelopeCorrectView
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: envelopeId
        in: path
        description: 'The envelope''s GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec '
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/correctViewRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/correctViewRequest'
        required: false
      responses:
        "201":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/EnvelopeViews'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: createCorrectView
      x-ds-method: createCorrect
      x-ds-service: Envelopes
      x-ds-in-sdk: true
      x-codegen-request-body-name: correctViewRequest
    delete:
      tags:
      - EnvelopeViews
      operationId: Views_DeleteEnvelopeCorrectView
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: envelopeId
        in: path
        description: 'The envelope''s GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec '
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/correctViewRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/correctViewRequest'
        required: false
      responses:
        "200":
          description: Successful response.
          content: {}
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: deleteEnvelopeCorrectView
      x-ds-method: deleteEnvelopeCorrectView
      x-ds-service: Uncategorized
      x-ds-in-sdk: true
      x-codegen-request-body-name: correctViewRequest
  /v2/accounts/{accountId}/envelopes/{envelopeId}/views/edit:
    post:
      tags:
      - EnvelopeViews
      summary: Returns a URL to the edit view UI.
      description: "Returns a URL that allows you to embed the edit view of the DocuSign\
        \ UI in your applications. This is a one-time use login token that allows\
        \ the user to be placed into the DocuSign editing view. \n\nUpon sending completion,\
        \ the user is returned to the return URL provided by the API application.\n\
        \nImportant: iFrames should not be used for embedded operations on mobile\
        \ devices due to screen space issues. For iOS devices DocuSign recommends\
        \ using a WebView. "
      operationId: Views_PostEnvelopeEditView
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: envelopeId
        in: path
        description: 'The envelope''s GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec '
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/returnUrlRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/returnUrlRequest'
        required: false
      responses:
        "201":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/EnvelopeViews'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: createEditView
      x-ds-method: createEdit
      x-ds-service: Envelopes
      x-ds-in-sdk: true
      x-ds-examples:
      - description: |+
          The response contains the URL
          of the embeddable edit view
          for a specified envelope.

          The request body contains
          a `returnUrl`.
          This is the URL
          that the DocuSign platform
          will redirect the user to
          when the view is closed.

        direction: both
        format: json
        response:
          url: https://demo.docusign.net/Member/StartInSession.aspx?StartConsole=1&t=c8dc7c1e-77fb-4ec8-a336-405ba1f7d38b&DocuEnvelope=4b728be4-4417-45c6-b7e8-d63e23f822b6&send=1
        request:
          returnUrl: https://dsapp.example.com/return/from/edit/view
        style: custom
        title: Getting an Edit View URL and Setting a Return URL
      x-codegen-request-body-name: returnUrlRequest
  /v2/accounts/{accountId}/envelopes/{envelopeId}/views/recipient:
    post:
      tags:
      - EnvelopeViews
      summary: Returns a URL to the recipient view UI.
      description: "Returns a URL that enables you to embed the recipient view of\
        \ the DocuSign UI in your applications. If the recipient is a signer, then\
        \ the view will provide the signing ceremony.\n\n###### Note: Please redirect\
        \ the client to the URL. iFrames should not be used, especially if the recipient\
        \ is using a mobile or tablet. \n\nThis method is only used with envelopes\
        \ in the `sent` status.\n\nYour application is responsible for authenticating\
        \ the identity of the recipient or signer when you use this method. Use the\
        \ parameters `assertionId`, `authenticationInstant`, `authenticationMethod`,\
        \ `clientUserId`, and `securityDomain` to record information on how the recipient\
        \ was authenticated. At a minimum, `authenticationMethod` and `clientUserId`\
        \ are required. The information that you provide is included in the envelope's\
        \ certificate of completion.\n\n## The event status parameter\nAfter the signer\
        \ completes or ends the signing ceremony, DocuSign will redirect the user's\
        \ browser back to your app via the `returnUrl` that you supply. DocuSIgn appends\
        \ an `event` query parameter to the URL with the outcome of the signing ceremony.\
        \ Your app should use the event parameter to determine the next step for the\
        \ envelope. Don't fetch the envelope's status via Envelopes: get or a similar\
        \ method; that could break the DocuSign rule against polling.\n\n## The URL\
        \ is time-limited\nThe URL returned by this method is valid for one use. It\
        \ must be used/displayed within a couple of minutes after being generated.\
        \ Once the recipient is redirected to the recipient view, they must interact\
        \ with the DocuSign system periodically or their session will time out.\n\n\
        Because the URL is time-limited, it should not be stored or sent via email.\
        \ Immediately redirect the user's browser to the URL after you receive it.\n\
        \nIf you want to invite someone to an embedded signing session via email,\
        \ the email invitation's URL must be to your application. When invoked, your\
        \ app should request a recipientView URL from DocuSign and then redirect the\
        \ signer to that URL.\n\n## Maintaining State\nAfter the recipient completes\
        \ the recipient view (or signing ceremony), they are redirected to your application.\
        \ Your application can recover state information about the transaction by\
        \ storing information in a cookie, or by including query parameters in the\
        \ `returnUrl` field. Eg, `https://myapp.eg.com/docusign_return?myState=12345`\
        \ When the user is redirected to your app, the `event` query parameter will\
        \ be appended. In this example, prevent spoofing by not using a guessable\
        \ value as the state value."
      operationId: Views_PostEnvelopeRecipientView
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: envelopeId
        in: path
        description: 'The envelope''s GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec '
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/recipientViewRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/recipientViewRequest'
        required: false
      responses:
        "201":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/EnvelopeViews'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: createRecipientView
      x-ds-method: createRecipient
      x-ds-service: Envelopes
      x-ds-in-sdk: true
      x-codegen-request-body-name: recipientViewRequest
  /v2/accounts/{accountId}/envelopes/{envelopeId}/views/sender:
    post:
      tags:
      - EnvelopeViews
      summary: Returns a URL to the sender view UI.
      description: "Returns a URL that enables you to embed the sender view of the\
        \ DocuSign UI in your applications.\n\nThe returned URL can only be redirected\
        \ to immediately after it is generated. It can only be used once.\nTherefore,\
        \ request the URL immediately before you redirect your user to it.\n\nFor\
        \ the best user experience, don't use an iFrame. For iOS devices DocuSign\
        \ recommends using a WebView.\n\nMultiple solutions are available for maintaining\
        \ your\nclient state. See the **Maintaining State** section of the [Embedded\
        \ Signing introduction.](https://developers.docusign.com/esign-rest-api/guides/embedded-signing)\n\
        \nAfter the user has completed the sending view, the browser is redirected\
        \ to the `returnUrl` supplied.\n\nBy default, if the envelope already contains\
        \ one or more documents, DocuSign will initially show the document tagging\
        \ view when you redirect to the URL. \n\nTo start with the envelope's recipients\
        \ and documents view instead, examine the URL in the method's response. \n\
        Then change the query parameter from `send=1` to `send=0` to start with the\
        \ recipients/documents view.\n\n<blockquote>\n<p><b>Information Security notice:</b>\
        \ This method provides full access to the sender's user account.\nWhen you\
        \ use this view, the sender has full access to the user account. If the sender\
        \ user account has administrative privileges, then this method also provides\
        \ administrator access.</p>\n\n<p>If your use case needs to enable a sender\
        \ to update a draft envelope before it is sent, then either:</p>\n\n<ul>\n\
        <li>Configure each sender to have their own individual user account to use\
        \ this API method.</li>\n<li>Enhance your API integration so that this method\
        \ is not needed. Your integration can create the tabs, recipients and other\
        \ envelope settings as needed.</li>\n</ul>\n</blockquote>\n"
      operationId: Views_PostEnvelopeSenderView
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: envelopeId
        in: path
        description: 'The envelope''s GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec '
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/returnUrlRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/returnUrlRequest'
        required: false
      responses:
        "201":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/EnvelopeViews'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: createSenderView
      x-ds-method: createSender
      x-ds-service: Envelopes
      x-ds-in-sdk: true
      x-codegen-request-body-name: returnUrlRequest
  /v2/accounts/{accountId}/envelopes/{envelopeId}/views/shared:
    post:
      tags:
      - EnvelopeViews
      operationId: Views_PostEnvelopeRecipientSharedView
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: envelopeId
        in: path
        description: 'The envelope''s GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec '
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/recipientViewRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/recipientViewRequest'
        required: false
      responses:
        "201":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/viewUrl'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: createEnvelopeRecipientSharedView
      x-ds-method: createSharedRecipient
      x-ds-service: Uncategorized
      x-ds-in-sdk: true
      x-codegen-request-body-name: recipientViewRequest
  /v2/accounts/{accountId}/envelopes/status:
    put:
      tags:
      - Envelopes
      summary: Gets the envelope status for the specified envelopes.
      description: Retrieves the envelope status for the specified envelopes.
      operationId: Envelopes_PutStatus
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: ac_status
        in: query
        description: "Specifies the Authoritative Copy Status for the envelopes. The\
          \ possible values are: Unknown, Original, Transferred, AuthoritativeCopy,\
          \ AuthoritativeCopyExportPending, AuthoritativeCopyExported, DepositPending,\
          \ Deposited, DepositedEO, or DepositFailed."
        schema:
          type: string
      - name: block
        in: query
        description: |
          Reserved for DocuSign.
        schema:
          type: string
      - name: count
        in: query
        description: The maximum number of results to be returned by this request.
        schema:
          type: string
      - name: email
        in: query
        description: |
          Reserved for DocuSign.
        schema:
          type: string
      - name: envelope_ids
        in: query
        description: Comma separated list of `envelopeId` values.
        schema:
          type: string
      - name: from_date
        in: query
        description: "The date/time setting that specifies when the request begins\
          \ checking for status changes for envelopes in the account. This is required\
          \ unless parameters `envelope_ids` and/or `transaction_Ids` are set. \n\n\
          ****Note****: This parameter must be set to a valid  `DateTime`, or  `envelope_ids`\
          \ and/or `transaction_ids` must be specified."
        schema:
          type: string
      - name: from_to_status
        in: query
        description: "The status value checked for in the `from_date` to `to_date`\
          \ time period. \n\nPossible values are: Voided, Changed, Created, Deleted,\
          \ Sent, Delivered, Signed, Completed, Declined, TimedOut and Processing.\n\
          \nIf `Changed` is specified, then envelopes that changed status during the\
          \ period will be returned. \n\nFor example, if `Created` is specified, then\
          \ envelopes created during the period are found. \n\nThe default is `Changed`. "
        schema:
          type: string
      - name: start_position
        in: query
        description: |
          Reserved for DocuSign.
        schema:
          type: string
      - name: status
        in: query
        description: Item status. <!-- TODO -->
        schema:
          type: string
      - name: to_date
        in: query
        description: "Optional date/time setting\nthat specifies the last date/time\
          \ \nor envelope status changes in the result set. \n\nDefault: \"now\",\
          \ the time that you call the method. \n"
        schema:
          type: string
      - name: transaction_ids
        in: query
        description: |
          A comma-separated list of envelope transaction IDs.
          Transaction IDs are only valid for seven days.
        schema:
          type: string
      - name: user_name
        in: query
        description: |
          Limit results to envelopes
          sent by the account user
          with this user name.

          `email` must be given as well,
          and both `email` and `user_name`
          must refer to an existing account user.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/envelopeIdsRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/envelopeIdsRequest'
        required: false
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/envelopesInformation'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: listStatus
      x-ds-method: listStatus
      x-ds-service: Envelopes
      x-ds-in-sdk: true
      x-codegen-request-body-name: envelopeIdsRequest
  /v2/accounts/{accountId}/folders:
    get:
      tags:
      - Folders
      summary: Gets a list of the folders for the account.
      description: "Retrieves a list of the folders for the account, including the\
        \ folder hierarchy. You can specify whether to return just the template folder\
        \ or template folder and normal folders by setting the `template` query string\
        \ parameter."
      operationId: Folders_GetFolders
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: include
        in: query
        description: |
          Reserved for DocuSign.
        schema:
          type: string
      - name: start_position
        in: query
        description: |
          Reserved for DocuSign.
        schema:
          type: string
      - name: template
        in: query
        description: "Specifies the items that are returned. Valid values are: \n\n\
          * include - The folder list will return normal folders plus template folders.\
          \ \n* only - Only the list of template folders are returned."
        schema:
          type: string
      - name: user_filter
        in: query
        description: |
          Reserved for DocuSign.
        schema:
          type: string
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/foldersResponse'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: list
      x-ds-method: list
      x-ds-service: Folders
      x-ds-in-sdk: true
  /v2/accounts/{accountId}/folders/{folderId}:
    get:
      tags:
      - Folders
      summary: Gets a list of the envelopes in the specified folder.
      description: Retrieves a list of the envelopes in the specified folder. You
        can narrow the query by specifying search criteria in the query string parameters.
      operationId: Folders_GetFolderItems
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: folderId
        in: path
        description: The ID of the folder being accessed.
        required: true
        schema:
          type: string
      - name: from_date
        in: query
        description: " Only return items on or after this date. If no value is provided,\
          \ the default search is the previous 30 days. "
        schema:
          type: string
      - name: owner_email
        in: query
        description: ' The email of the folder owner. '
        schema:
          type: string
      - name: owner_name
        in: query
        description: ' The name of the folder owner. '
        schema:
          type: string
      - name: search_text
        in: query
        description: " The search text used to search the items of the envelope. The\
          \ search looks at recipient names and emails, envelope custom fields, sender\
          \ name, and subject. "
        schema:
          type: string
      - name: start_position
        in: query
        description: "The position of the folder items to return. This is used for\
          \ repeated calls, when the number of envelopes returned is too much for\
          \ one return (calls return 100 envelopes at a time). The default value is\
          \ 0."
        schema:
          type: string
      - name: status
        in: query
        description: |+
          A comma-separated list of current envelope statuses to included in the response. Possible values are:

          * completed
          * created
          * declined
          * deleted
          * delivered
          * processing
          * sent
          * signed
          * timedout
          * voided

          The `any` value is equivalent to any status.

        schema:
          type: string
      - name: to_date
        in: query
        description: "Only return items up to this date. If no value is provided,\
          \ the default search is to the current date."
        schema:
          type: string
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/folderItemsResponse'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: listItems
      x-ds-method: listItems
      x-ds-service: Folders
      x-ds-in-sdk: true
    put:
      tags:
      - Folders
      summary: Moves an envelope from its current folder to the specified folder.
      description: "Moves an envelope from its current folder to the specified folder.\n\
        \n###### Note: You can use this endpoint to delete envelopes by specifying\
        \ `recyclebin` in the `folderId` parameter of the endpoint. Placing an in\
        \ process envelope (envelope status of `sent` or `delivered`) in the recycle\
        \ bin voids the envelope. You can also use this endpoint to delete templates\
        \ by specifying a template ID instead of an envelope ID in the 'envelopeIds'\
        \ property and specifying `recyclebin` in the `folderId` parameter. "
      operationId: Folders_PutFolderById
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: folderId
        in: path
        description: The ID of the folder being accessed.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/foldersRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/foldersRequest'
        required: false
      responses:
        "200":
          description: Successful response.
          content: {}
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: moveEnvelopes
      x-ds-method: moveEnvelopes
      x-ds-service: Folders
      x-ds-in-sdk: true
      x-codegen-request-body-name: foldersRequest
  /v2/accounts/{accountId}/groups:
    get:
      tags:
      - Groups
      summary: Gets information about groups associated with the account.
      description: Retrieves information about groups associated with the account.
      operationId: Groups_GetGroups
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: count
        in: query
        description: Number of records to return. The number must be greater than
          1 and less than or equal to 100.
        schema:
          type: string
      - name: group_type
        in: query
        schema:
          type: string
      - name: search_text
        in: query
        schema:
          type: string
      - name: start_position
        in: query
        description: Starting value for the list.
        schema:
          type: string
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/groupInformation'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: listGroups
      x-ds-method: list
      x-ds-service: Groups
      x-ds-in-sdk: true
    put:
      tags:
      - Groups
      summary: Updates the group information for a group.
      description: "Updates the group name and modifies, or sets, the permission profile\
        \ for the group."
      operationId: Groups_PutGroups
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/groupInformation'
          application/xml:
            schema:
              $ref: '#/components/schemas/groupInformation'
        required: false
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/groupInformation'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: updateGroups
      x-ds-method: update
      x-ds-service: Groups
      x-ds-in-sdk: true
      x-codegen-request-body-name: groupInformation
    post:
      tags:
      - Groups
      summary: Creates one or more groups for the account.
      description: |-
        Creates one or more groups for the account.

        Groups can be used to help manage users by associating users with a group. You can associate a group with a Permission Profile, which sets the user permissions for users in that group without having to set the `userSettings` property for each user. You are not required to set Permission Profiles for a group, but it makes it easier to manage user permissions for a large number of users. You can also use groups with template sharing to limit user access to templates.
      operationId: Groups_PostGroups
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/groupInformation'
          application/xml:
            schema:
              $ref: '#/components/schemas/groupInformation'
        required: false
      responses:
        "201":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/groupInformation'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: createGroups
      x-ds-method: create
      x-ds-service: Groups
      x-ds-in-sdk: true
      x-codegen-request-body-name: groupInformation
    delete:
      tags:
      - Groups
      summary: Deletes an existing user group.
      description: Deletes an existing user group.
      operationId: Groups_DeleteGroups
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/groupInformation'
          application/xml:
            schema:
              $ref: '#/components/schemas/groupInformation'
        required: false
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/groupInformation'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: deleteGroups
      x-ds-method: delete
      x-ds-service: Groups
      x-ds-in-sdk: true
      x-codegen-request-body-name: groupInformation
  /v2/accounts/{accountId}/groups/{groupId}/brands:
    get:
      tags:
      - GroupBrands
      summary: |
        Gets group brand ID Information.
      description: Retrieves information about the brands associated with the requested
        group.
      operationId: Brands_GetGroupBrands
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: groupId
        in: path
        description: The ID of the group being accessed.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GroupBrands'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: getBrands
      x-ds-method: get
      x-ds-service: Groups
      x-ds-in-sdk: true
    put:
      tags:
      - GroupBrands
      summary: Adds group brand ID information to a group.
      description: Adds group brand ID information to a group.
      operationId: Brands_PutGroupBrands
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: groupId
        in: path
        description: The ID of the group being accessed.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/brandsRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/brandsRequest'
        required: false
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GroupBrands'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: updateBrands
      x-ds-method: update
      x-ds-service: Groups
      x-ds-in-sdk: true
      x-codegen-request-body-name: brandsRequest
    delete:
      tags:
      - GroupBrands
      summary: Deletes brand information from the requested group.
      description: Deletes brand information from the requested group.
      operationId: Brands_DeleteGroupBrands
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: groupId
        in: path
        description: The ID of the group being accessed.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/brandsRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/brandsRequest'
        required: false
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GroupBrands'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: deleteBrands
      x-ds-method: delete
      x-ds-service: Groups
      x-ds-in-sdk: true
      x-codegen-request-body-name: brandsRequest
  /v2/accounts/{accountId}/groups/{groupId}/users:
    get:
      tags:
      - GroupUsers
      summary: Gets a list of users in a group.
      description: Retrieves a list of users in a group.
      operationId: Groups_GetGroupUsers
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: groupId
        in: path
        description: The ID of the group being accessed.
        required: true
        schema:
          type: string
      - name: count
        in: query
        description: 'Number of records to return. The number must be greater than
          1 and less than or equal to 100. '
        schema:
          type: string
      - name: start_position
        in: query
        description: Starting value for the list.
        schema:
          type: string
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/usersResponse'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: listGroupUsers
      x-ds-method: list
      x-ds-service: Groups
      x-ds-in-sdk: true
    put:
      tags:
      - GroupUsers
      summary: Adds one or more users to an existing group.
      description: Adds one or more users to an existing group.
      operationId: Groups_PutGroupUsers
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: groupId
        in: path
        description: The ID of the group being accessed.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/userInfoList'
          application/xml:
            schema:
              $ref: '#/components/schemas/userInfoList'
        required: false
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/usersResponse'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: updateGroupUsers
      x-ds-method: update
      x-ds-service: Groups
      x-ds-in-sdk: true
      x-codegen-request-body-name: userInfoList
    delete:
      tags:
      - GroupUsers
      summary: Deletes one or more users from a gro
      description: |
        Deletes one or more users from a group.
      operationId: Groups_DeleteGroupUsers
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: groupId
        in: path
        description: The ID of the group being accessed.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/userInfoList'
          application/xml:
            schema:
              $ref: '#/components/schemas/userInfoList'
        required: false
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/usersResponse'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: deleteGroupUsers
      x-ds-method: delete
      x-ds-service: Groups
      x-ds-in-sdk: true
      x-codegen-request-body-name: userInfoList
  /v2/accounts/{accountId}/identity_verification:
    get:
      tags:
      - IdentityVerifications
      operationId: AccountIdentityVerification_GetAccountIdentityVerification
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/accountIdentityVerificationResponse'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: getAccountIdentityVerification
      x-ds-method: list
      x-ds-service: Uncategorized
      x-ds-in-sdk: true
  /v2/accounts/{accountId}/payment_gateway_accounts:
    get:
      tags:
      - PaymentGatewayAccounts
      summary: List payment gateway account information
      description: List payment gateway account information
      operationId: PaymentGatewayAccounts_GetAllPaymentGatewayAccounts
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/paymentGatewayAccountsInfo'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: getAllPaymentGatewayAccounts
      x-ds-api-status: beta
      x-ds-method: list
      x-ds-service: Accounts
      x-ds-in-sdk: true
  /v2/accounts/{accountId}/permission_profiles:
    get:
      tags:
      - AccountPermissionProfiles
      summary: Gets a list of permission profiles.
      description: |-
        Retrieves a list of Permission Profiles. Permission Profiles are a standard set of user permissions that you can apply to individual users or users in a Group. This makes it easier to manage user permissions for a large number of users, without having to change permissions on a user-by-user basis.

        Currently, Permission Profiles can only be created and modified in the DocuSign console.
      operationId: PermissionProfiles_GetPermissionProfiles
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: include
        in: query
        description: |
          Reserved for DocuSign.
        schema:
          type: string
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/permissionProfileInformation'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: listPermissions
      x-ds-method: list
      x-ds-service: Accounts
      x-ds-in-sdk: true
    post:
      tags:
      - AccountPermissionProfiles
      summary: Creates a new permission profile in the specified account.
      operationId: PermissionProfiles_PostPermissionProfiles
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: include
        in: query
        description: "A comma-separated list of additional information to include\
          \ in the response. Valid values are: \n\n- `recipients`: Includes information\
          \ about template recipients.\n- `folders`: Includes information about the\
          \ folder that holds the template. \n- `documents` : Includes information\
          \ about template documents.\n- `custom_fields`: Includes information about\
          \ template custom fields.\n- `notifications`: Includes information about\
          \ the notification settings for templates.\n- `advanced_templates`: Includes\
          \ advanced templates in the response. For example, these include templates\
          \ that use advanced recipient routing. We recommend that you use this option\
          \ to ensure that the response includes all relevant templates. "
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/permissionProfile'
          application/xml:
            schema:
              $ref: '#/components/schemas/permissionProfile'
        required: false
      responses:
        "201":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/permissionProfile'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: createPermissionProfile
      x-ds-method: create
      x-ds-service: Accounts
      x-ds-in-sdk: true
      x-codegen-request-body-name: permissionProfile
  /v2/accounts/{accountId}/permission_profiles/{permissionProfileId}:
    get:
      tags:
      - AccountPermissionProfiles
      summary: Returns a permissions profile in the specified account.
      operationId: PermissionProfiles_GetPermissionProfile
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: permissionProfileId
        in: path
        required: true
        schema:
          type: string
      - name: include
        in: query
        description: "A comma-separated list of additional information to include\
          \ in the response. Valid values are: \n\n- `recipients`: Includes information\
          \ about template recipients.\n- `folders`: Includes information about the\
          \ folder that holds the template. \n- `documents` : Includes information\
          \ about template documents.\n- `custom_fields`: Includes information about\
          \ template custom fields.\n- `notifications`: Includes information about\
          \ the notification settings for templates.\n- `advanced_templates`: Includes\
          \ advanced templates in the response. For example, these include templates\
          \ that use advanced recipient routing. We recommend that you use this option\
          \ to ensure that the response includes all relevant templates. "
        schema:
          type: string
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/permissionProfile'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: getPermissionProfile
      x-ds-method: get
      x-ds-service: Accounts
      x-ds-in-sdk: true
    put:
      tags:
      - AccountPermissionProfiles
      summary: Updates a permission profile within the specified account.
      operationId: PermissionProfiles_PutPermissionProfiles
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: permissionProfileId
        in: path
        required: true
        schema:
          type: string
      - name: include
        in: query
        description: "A comma-separated list of additional information to include\
          \ in the response. Valid values are: \n\n- `recipients`: Includes information\
          \ about template recipients.\n- `folders`: Includes information about the\
          \ folder that holds the template. \n- `documents` : Includes information\
          \ about template documents.\n- `custom_fields`: Includes information about\
          \ template custom fields.\n- `notifications`: Includes information about\
          \ the notification settings for templates.\n- `advanced_templates`: Includes\
          \ advanced templates in the response. For example, these include templates\
          \ that use advanced recipient routing. We recommend that you use this option\
          \ to ensure that the response includes all relevant templates. "
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/permissionProfile'
          application/xml:
            schema:
              $ref: '#/components/schemas/permissionProfile'
        required: false
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/permissionProfile'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: updatePermissionProfile
      x-ds-method: update
      x-ds-service: Accounts
      x-ds-in-sdk: true
      x-codegen-request-body-name: permissionProfile
    delete:
      tags:
      - AccountPermissionProfiles
      summary: Deletes a permissions profile within the specified account.
      operationId: PermissionProfiles_DeletePermissionProfiles
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: permissionProfileId
        in: path
        required: true
        schema:
          type: string
      - name: move_users_to
        in: query
        schema:
          type: string
      responses:
        "200":
          description: Successful response.
          content: {}
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: deletePermissionProfile
      x-ds-method: delete
      x-ds-service: Accounts
      x-ds-in-sdk: true
  /v2/accounts/{accountId}/powerforms:
    get:
      tags:
      - PowerForms
      summary: Returns the list of PowerForms available to the user.
      operationId: PowerForms_GetPowerFormsList
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: from_date
        in: query
        description: "Start of the search date range. Only returns templates created\
          \ on or after this date/time. If no value is specified, there is no limit\
          \ on the earliest date created."
        schema:
          type: string
      - name: order
        in: query
        description: "An optional value that sets the direction order used to sort\
          \ the item list. \n\nValid values are: \n\n* asc = ascending sort order\n\
          * desc = descending sort order "
        schema:
          type: string
      - name: order_by
        in: query
        description: "An optional value that sets the file attribute used to sort\
          \ the item list. \n\nValid values are: \n\n* modified\n* name  "
        schema:
          type: string
      - name: to_date
        in: query
        description: "End of the search date range. Only returns templates created\
          \ up to this date/time. If no value is provided, this defaults to the current\
          \ date."
        schema:
          type: string
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/powerFormsResponse'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: listPowerForms
      x-ds-method: list
      x-ds-service: PowerForms
      x-ds-in-sdk: true
    post:
      tags:
      - PowerForms
      summary: Creates a new PowerForm.
      operationId: PowerForms_PostPowerForm
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/powerForm'
          application/xml:
            schema:
              $ref: '#/components/schemas/powerForm'
        required: false
      responses:
        "201":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/powerForm'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: createPowerForm
      x-ds-method: create
      x-ds-service: PowerForms
      x-ds-in-sdk: true
      x-codegen-request-body-name: powerForm
    delete:
      tags:
      - PowerForms
      summary: Deletes one or more PowerForms
      operationId: PowerForms_DeletePowerFormsList
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/powerFormsRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/powerFormsRequest'
        required: false
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/powerFormsResponse'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: deletePowerForms
      x-ds-method: deleteList
      x-ds-service: PowerForms
      x-ds-in-sdk: true
      x-codegen-request-body-name: powerFormsRequest
  /v2/accounts/{accountId}/powerforms/{powerFormId}:
    get:
      tags:
      - PowerForms
      summary: Returns a single PowerForm.
      operationId: PowerForms_GetPowerForm
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: powerFormId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/powerForm'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: getPowerForm
      x-ds-method: get
      x-ds-service: PowerForms
      x-ds-in-sdk: true
    put:
      tags:
      - PowerForms
      summary: Creates a new PowerForm.
      operationId: PowerForms_PutPowerForm
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: powerFormId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/powerForm'
          application/xml:
            schema:
              $ref: '#/components/schemas/powerForm'
        required: false
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/powerForm'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: updatePowerForm
      x-ds-method: update
      x-ds-service: PowerForms
      x-ds-in-sdk: true
      x-codegen-request-body-name: powerForm
    delete:
      tags:
      - PowerForms
      summary: Delete a PowerForm.
      operationId: PowerForms_DeletePowerForm
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: powerFormId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful response.
          content: {}
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: deletePowerForm
      x-ds-method: delete
      x-ds-service: PowerForms
      x-ds-in-sdk: true
  /v2/accounts/{accountId}/powerforms/{powerFormId}/form_data:
    get:
      tags:
      - PowerFormData
      summary: Returns the form data associated with the usage of a PowerForm.
      operationId: PowerForms_GetPowerFormFormData
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: powerFormId
        in: path
        required: true
        schema:
          type: string
      - name: data_layout
        in: query
        schema:
          type: string
      - name: from_date
        in: query
        description: "Start of the search date range. Only returns templates created\
          \ on or after this date/time. If no value is specified, there is no limit\
          \ on the earliest date created."
        schema:
          type: string
      - name: to_date
        in: query
        description: "End of the search date range. Only returns templates created\
          \ up to this date/time. If no value is provided, this defaults to the current\
          \ date."
        schema:
          type: string
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/powerFormsFormDataResponse'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: getPowerFormData
      x-ds-method: list
      x-ds-service: PowerForms
      x-ds-in-sdk: true
  /v2/accounts/{accountId}/powerforms/senders:
    get:
      tags:
      - PowerForms
      summary: Returns the list of PowerForms available to the user.
      operationId: PowerForms_GetPowerFormsSenders
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: start_position
        in: query
        description: The position within the total result set from which to start
          returning values. The value **thumbnail** may be used to return the page
          image.
        schema:
          type: string
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/powerFormSendersResponse'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: listPowerFormSenders
      x-ds-method: listSenders
      x-ds-service: PowerForms
      x-ds-in-sdk: true
  /v2/accounts/{accountId}/recipient_names:
    get:
      tags:
      - Accounts
      summary: Gets recipient names associated with an email address.
      description: Retrieves a list of recipients in the specified account that are
        associated with a email address supplied in the query string.
      operationId: RecipientNames_GetRecipientNames
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: email
        in: query
        description: The email address for the user
        schema:
          type: string
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/recipientNamesResponse'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: listRecipientNamesByEmail
      x-ds-method: listRecipientNamesByEmail
      x-ds-service: Accounts
      x-ds-in-sdk: true
  /v2/accounts/{accountId}/seals:
    get:
      tags:
      - AccountSealProviders
      operationId: AccountSignatureProviders_GetSealProviders
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AccountSealProviders'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: getSealProviders
      x-ds-method: list
      x-ds-service: Uncategorized
      x-ds-in-sdk: true
  /v2/accounts/{accountId}/search_folders/{searchFolderId}:
    get:
      tags:
      - Folders
      summary: Gets a list of envelopes in folders matching the specified criteria.
      description: |-
        Retrieves a list of envelopes that match the criteria specified in the query.

        If the user ID of the user making the call is the same as the user ID for any returned recipient, then the userId property is added to the returned information for those recipients.
      operationId: SearchFolders_GetSearchFolderContents
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: searchFolderId
        in: path
        description: "Specifies the envelope group that is searched by the request.\
          \ These are logical groupings, not actual folder names. Valid values are:\
          \ drafts, awaiting_my_signature, completed, out_for_signature."
        required: true
        schema:
          type: string
      - name: all
        in: query
        description: Specifies that all envelopes that match the criteria are returned.
        schema:
          type: string
      - name: count
        in: query
        description: Specifies the number of records returned in the cache. The number
          must be greater than 0 and less than or equal to 100.
        schema:
          type: string
      - name: from_date
        in: query
        description: "Specifies the start of the date range to return. If no value\
          \ is provided, the default search is the previous 30 days."
        schema:
          type: string
      - name: include_recipients
        in: query
        description: "When set to **true**, the recipient information is returned\
          \ in the response."
        schema:
          type: string
      - name: order
        in: query
        description: "Specifies the order in which the list is returned. Valid values\
          \ are: `asc` for ascending order, and `desc` for descending order."
        schema:
          type: string
      - name: order_by
        in: query
        description: "Specifies the property used to sort the list. Valid values are:\
          \ `action_required`, `created`, `completed`, `sent`, `signer_list`, `status`,\
          \ or `subject`."
        schema:
          type: string
      - name: start_position
        in: query
        description: Specifies the the starting location in the result set of the
          items that are returned.
        schema:
          type: string
      - name: to_date
        in: query
        description: Specifies the end of the date range to return.
        schema:
          type: string
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/folderItemResponse'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: search
      x-ds-method: search
      x-ds-service: Folders
      x-ds-in-sdk: true
  /v2/accounts/{accountId}/settings:
    get:
      tags:
      - Accounts
      summary: Gets account settings information.
      description: Retrieves the account settings information for the specified account.
      operationId: Settings_GetSettings
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/accountSettingsInformation'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: listSettings
      x-ds-method: listSettings
      x-ds-service: Accounts
      x-ds-in-sdk: true
    put:
      tags:
      - Accounts
      summary: Updates the account settings for an account.
      description: Updates the account settings for the specified account.
      operationId: Settings_PutSettings
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/accountSettingsInformation'
          application/xml:
            schema:
              $ref: '#/components/schemas/accountSettingsInformation'
        required: false
      responses:
        "200":
          description: Successful response.
          content: {}
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: updateSettings
      x-ds-method: updateSettings
      x-ds-service: Accounts
      x-ds-in-sdk: true
      x-codegen-request-body-name: accountSettingsInformation
  /v2/accounts/{accountId}/settings/enote_configuration:
    get:
      tags:
      - ENoteConfigurations
      summary: Returns the configuration information for the eNote eOriginal integration.
      operationId: ENoteConfiguration_GetENoteConfiguration
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/eNoteConfiguration'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: getENoteConfiguration
      x-ds-api-status: beta
      x-ds-method: get
      x-ds-service: Accounts
      x-ds-in-sdk: true
    put:
      tags:
      - ENoteConfigurations
      summary: Updates configuration information for the eNote eOriginal integration.
      operationId: ENoteConfiguration_PutENoteConfiguration
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/eNoteConfiguration'
          application/xml:
            schema:
              $ref: '#/components/schemas/eNoteConfiguration'
        required: false
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/eNoteConfiguration'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: updateENoteConfiguration
      x-ds-api-status: beta
      x-ds-method: update
      x-ds-service: Accounts
      x-ds-in-sdk: true
      x-codegen-request-body-name: eNoteConfiguration
    delete:
      tags:
      - ENoteConfigurations
      summary: Deletes configuration information for the eNote eOriginal integration.
      operationId: ENoteConfiguration_DeleteENoteConfiguration
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful response.
          content: {}
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: deleteENoteConfiguration
      x-ds-api-status: beta
      x-ds-method: delete
      x-ds-service: Accounts
      x-ds-in-sdk: true
  /v2/accounts/{accountId}/settings/password_rules:
    get:
      tags:
      - AccountPasswordRules
      summary: Get the password rules
      operationId: AccountPasswordRules_GetAccountPasswordRules
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/accountPasswordRules'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: getAccountPasswordRules
      x-ds-method: get
      x-ds-service: Accounts
      x-ds-in-sdk: true
    put:
      tags:
      - AccountPasswordRules
      summary: Update the password rules
      operationId: AccountPasswordRules_PutAccountPasswordRules
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/accountPasswordRules'
          application/xml:
            schema:
              $ref: '#/components/schemas/accountPasswordRules'
        required: false
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/accountPasswordRules'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: updateAccountPasswordRules
      x-ds-method: update
      x-ds-service: Accounts
      x-ds-in-sdk: true
      x-codegen-request-body-name: accountPasswordRules
  /v2/accounts/{accountId}/settings/tabs:
    get:
      tags:
      - AccountTabSettings
      summary: Returns tab settings list for specified account
      operationId: TabSettings_GetTabSettings
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/tabAccountSettings'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: getAccountTabSettings
      x-ds-method: get
      x-ds-service: Accounts
      x-ds-in-sdk: true
    put:
      tags:
      - AccountTabSettings
      summary: Modifies tab settings for specified account
      operationId: TabSettings_PutSettings
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tabAccountSettings'
          application/xml:
            schema:
              $ref: '#/components/schemas/tabAccountSettings'
        required: false
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/tabAccountSettings'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: updateAccountTabSettings
      x-ds-method: update
      x-ds-service: Accounts
      x-ds-in-sdk: true
      x-codegen-request-body-name: tabAccountSettings
  /v2/accounts/{accountId}/shared_access:
    get:
      tags:
      - Accounts
      summary: "Reserved: Gets the shared item status for one or more users."
      description: |-
        Retrieves shared item status for one or more users and types of items.

        Users with account administration privileges can retrieve shared access information for all account users. Users without account administrator privileges can only retrieve shared access information for themselves and the returned information is limited to the retrieving the status of all members of the account that are sharing their folders to the user. This is equivalent to setting the `shared` to `shared_from`.
      operationId: SharedAccess_GetSharedAccess
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: count
        in: query
        description: "Specifies maximum number of results included in the response.\
          \ If no value is specified, this defaults to 1000."
        schema:
          type: string
      - name: envelopes_not_shared_user_status
        in: query
        schema:
          type: string
      - name: folder_ids
        in: query
        description: |-
          A comma separated list of folder IDs  for which the shared item
          information is being requested.

          If `item_type` is `folders`, at least one folder ID is required.
        schema:
          type: string
      - name: item_type
        in: query
        description: |
          Specifies the type of shared item being requested. The possible values are:

          - `envelopes`: Get information about envelope sharing between users.
          - `templates`: Get information about template sharing among users and groups.
          - `folders`: Get information about folder sharing among users and groups.
        schema:
          type: string
      - name: search_text
        in: query
        description: This can be used to filter user names in the response. The wild-card
          '*' (asterisk) can be used around the string.
        schema:
          type: string
      - name: shared
        in: query
        description: "A comma-separated list of sharing filters that specifies which\
          \ users appear in the response. \n\n- `not_shared`: The response contains\
          \ users who do not share items of `item_type` with the current user.\n\n\
          - `shared_to`: The response contains users in `user_list` who are sharing\
          \ items to current user.\n\n- `shared_from`: The response contains users\
          \ in `user_list` who are sharing items from the current user.\n\n- `shared_to_and_from`:\
          \ The response contains users in `user_list` who are sharing items to and\
          \ sharing items from the current user.\n\nIf the current user does not have\
          \ administrative privileges, only the `shared_to` option is valid."
        schema:
          type: string
      - name: start_position
        in: query
        description: "If the number of responses is greater than `count`, the number\
          \ of responses to skip. Typically this value is a multiple of `count`. Default:\
          \ 0."
        schema:
          type: string
      - name: user_ids
        in: query
        description: A comma-separated list of user IDs for whom the shared item information
          is being requested.
        schema:
          type: string
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/accountSharedAccess'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: listSharedAccess
      x-ds-method: listSharedAccess
      x-ds-service: Accounts
      x-ds-in-sdk: true
    put:
      tags:
      - Accounts
      summary: "Reserved: Sets the shared access information for users."
      description: |+
        This sets the shared access status for one or more users or templates.

        When setting user shared access, only users with account administration privileges can set shared access status for envelopes.

        When setting template shared access, only users who own a template and have sharing permission or with account administration privileges can set shared access for templates.

        Changes to the shared items status are not additive. The change always replaces the current status.

        To change template shared access the query parameter `item_type` =  `templates` must be added to the request. When this is set, the user and envelopes properties are not required.

      operationId: SharedAccess_PutSharedAccess
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: item_type
        in: query
        description: |
          Specifies the type of shared item being requested. The possible values are:

          - `envelopes`: Get information about envelope sharing between users.
          - `templates`: Get information about template sharing among users and groups.
          - `folders`: Get information about folder sharing among users and groups.
        schema:
          type: string
      - name: user_ids
        in: query
        description: A comma-separated list of user IDs whose shared item information
          is being set.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/accountSharedAccess'
          application/xml:
            schema:
              $ref: '#/components/schemas/accountSharedAccess'
        required: false
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/accountSharedAccess'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: updateSharedAccess
      x-ds-method: updateSharedAccess
      x-ds-service: Accounts
      x-ds-in-sdk: true
      x-codegen-request-body-name: accountSharedAccess
  /v2/accounts/{accountId}/signatureProviders:
    get:
      tags:
      - AccountSignatureProviders
      summary: Returns Account available signature providers for specified account.
      operationId: AccountSignatureProviders_GetSignatureProviders
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/accountSignatureProviders'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: listSignatureProviders
      x-ds-method: list
      x-ds-service: Accounts
      x-ds-in-sdk: true
  /v2/accounts/{accountId}/signing_groups:
    get:
      tags:
      - SigningGroups
      summary: Gets a list of the Signing Groups in an account.
      description: Retrieves a list of all signing groups in the specified account.
      operationId: SigningGroups_GetSigningGroups
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: group_type
        in: query
        schema:
          type: string
      - name: include_users
        in: query
        description: "When set to **true**, the response includes the signing group\
          \ members. "
        schema:
          type: string
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/signingGroupInformation'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: list
      x-ds-method: list
      x-ds-service: SigningGroups
      x-ds-in-sdk: true
    put:
      tags:
      - SigningGroups
      summary: Updates signing group names.
      description: 'Updates the name of one or more existing signing groups. '
      operationId: SigningGroups_PutSigningGroups
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/signingGroupInformation'
          application/xml:
            schema:
              $ref: '#/components/schemas/signingGroupInformation'
        required: false
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/signingGroupInformation'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: updateList
      x-ds-method: updateList
      x-ds-service: SigningGroups
      x-ds-in-sdk: true
      x-codegen-request-body-name: signingGroupInformation
    post:
      tags:
      - SigningGroups
      summary: 'Creates a signing group. '
      description: "Creates one or more signing groups. \n\nMultiple signing groups\
        \ can be created in one call. Only users with account administrator privileges\
        \ can create signing groups. \n\nAn account can have a maximum of 50 signing\
        \ groups. Each signing group can have a maximum of 50 group members.\n \n\
        Signing groups can be used by any account user."
      operationId: SigningGroups_PostSigningGroups
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/signingGroupInformation'
          application/xml:
            schema:
              $ref: '#/components/schemas/signingGroupInformation'
        required: false
      responses:
        "201":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/signingGroupInformation'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: createList
      x-ds-method: create
      x-ds-service: SigningGroups
      x-ds-in-sdk: true
      x-codegen-request-body-name: signingGroupInformation
    delete:
      tags:
      - SigningGroups
      summary: Deletes one or more signing groups.
      description: Deletes one or more signing groups in the specified account.
      operationId: SigningGroups_DeleteSigningGroups
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/signingGroupInformation'
          application/xml:
            schema:
              $ref: '#/components/schemas/signingGroupInformation'
        required: false
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/signingGroupInformation'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: deleteList
      x-ds-method: delete
      x-ds-service: SigningGroups
      x-ds-in-sdk: true
      x-codegen-request-body-name: signingGroupInformation
  /v2/accounts/{accountId}/signing_groups/{signingGroupId}:
    get:
      tags:
      - SigningGroups
      summary: 'Gets information about a signing group. '
      description: "Retrieves information, including group member information, for\
        \ the specified signing group. "
      operationId: SigningGroups_GetSigningGroup
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: signingGroupId
        in: path
        description: "Optional. The ID of the [signing group](https://support.docusign.com/en/guides/ndse-user-guide-signing-groups).\n\
          \n**Note**: When you send an envelope to a signing group, anyone in the\
          \ group can open it and sign it with their own signature. For this reason,\
          \ we recommend that you do not include non-signer recipients (such as carbon\
          \ copy recipients) in the same signing group as signer recipients. However,\
          \ you could create a second signing group for the non-signer recipients\
          \ and change the default action of Needs to Sign to a different value, such\
          \ as Receives a Copy. "
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/signingGroup'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: get
      x-ds-method: get
      x-ds-service: SigningGroups
      x-ds-in-sdk: true
    put:
      tags:
      - SigningGroups
      summary: 'Updates a signing group. '
      description: 'Updates signing group name and member information. You can also
        add new members to the signing group. A signing group can have a maximum of
        50 members. '
      operationId: SigningGroups_PutSigningGroup
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: signingGroupId
        in: path
        description: "Optional. The ID of the [signing group](https://support.docusign.com/en/guides/ndse-user-guide-signing-groups).\n\
          \n**Note**: When you send an envelope to a signing group, anyone in the\
          \ group can open it and sign it with their own signature. For this reason,\
          \ we recommend that you do not include non-signer recipients (such as carbon\
          \ copy recipients) in the same signing group as signer recipients. However,\
          \ you could create a second signing group for the non-signer recipients\
          \ and change the default action of Needs to Sign to a different value, such\
          \ as Receives a Copy. "
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/signingGroup'
          application/xml:
            schema:
              $ref: '#/components/schemas/signingGroup'
        required: false
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/signingGroup'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: update
      x-ds-method: update
      x-ds-service: SigningGroups
      x-ds-in-sdk: true
      x-codegen-request-body-name: signingGroup
  /v2/accounts/{accountId}/signing_groups/{signingGroupId}/users:
    get:
      tags:
      - SigningGroupUsers
      summary: Gets a list of members in a Signing Group.
      description: Retrieves the list of members in the specified Signing Group.
      operationId: SigningGroups_GetSigningGroupUsers
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: signingGroupId
        in: path
        description: "Optional. The ID of the [signing group](https://support.docusign.com/en/guides/ndse-user-guide-signing-groups).\n\
          \n**Note**: When you send an envelope to a signing group, anyone in the\
          \ group can open it and sign it with their own signature. For this reason,\
          \ we recommend that you do not include non-signer recipients (such as carbon\
          \ copy recipients) in the same signing group as signer recipients. However,\
          \ you could create a second signing group for the non-signer recipients\
          \ and change the default action of Needs to Sign to a different value, such\
          \ as Receives a Copy. "
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/signingGroupUsers'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: listUsers
      x-ds-method: list
      x-ds-service: SigningGroups
      x-ds-in-sdk: true
    put:
      tags:
      - SigningGroupUsers
      summary: 'Adds members to a signing group. '
      description: 'Adds one or more new members to a signing group. A signing group
        can have a maximum of 50 members. '
      operationId: SigningGroups_PutSigningGroupUsers
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: signingGroupId
        in: path
        description: "Optional. The ID of the [signing group](https://support.docusign.com/en/guides/ndse-user-guide-signing-groups).\n\
          \n**Note**: When you send an envelope to a signing group, anyone in the\
          \ group can open it and sign it with their own signature. For this reason,\
          \ we recommend that you do not include non-signer recipients (such as carbon\
          \ copy recipients) in the same signing group as signer recipients. However,\
          \ you could create a second signing group for the non-signer recipients\
          \ and change the default action of Needs to Sign to a different value, such\
          \ as Receives a Copy. "
        required: true
        schema:
          type: string
      requestBody:
        description: A complex type that contains information about users in the signing
          group.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/signingGroupUsers'
          application/xml:
            schema:
              $ref: '#/components/schemas/signingGroupUsers'
        required: false
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/signingGroupUsers'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: updateUsers
      x-ds-method: update
      x-ds-service: SigningGroups
      x-ds-in-sdk: true
      x-codegen-request-body-name: signingGroupUsers
    delete:
      tags:
      - SigningGroupUsers
      summary: Deletes  one or more members from a signing group.
      description: 'Deletes  one or more members from the specified signing group. '
      operationId: SigningGroups_DeleteSigningGroupUsers
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: signingGroupId
        in: path
        description: "Optional. The ID of the [signing group](https://support.docusign.com/en/guides/ndse-user-guide-signing-groups).\n\
          \n**Note**: When you send an envelope to a signing group, anyone in the\
          \ group can open it and sign it with their own signature. For this reason,\
          \ we recommend that you do not include non-signer recipients (such as carbon\
          \ copy recipients) in the same signing group as signer recipients. However,\
          \ you could create a second signing group for the non-signer recipients\
          \ and change the default action of Needs to Sign to a different value, such\
          \ as Receives a Copy. "
        required: true
        schema:
          type: string
      requestBody:
        description: A complex type that contains information about users in the signing
          group.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/signingGroupUsers'
          application/xml:
            schema:
              $ref: '#/components/schemas/signingGroupUsers'
        required: false
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/signingGroupUsers'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: deleteUsers
      x-ds-method: delete
      x-ds-service: SigningGroups
      x-ds-in-sdk: true
      x-codegen-request-body-name: signingGroupUsers
  /v2/accounts/{accountId}/supported_languages:
    get:
      tags:
      - Accounts
      summary: List supported languages for the recipient language setting
      description: List supported languages for the recipient language setting
      operationId: SupportedLanguages_GetSupportedLanguages
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/supportedLanguages'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: getSupportedLanguages
      x-ds-method: listSupportedLanguages
      x-ds-service: Accounts
      x-ds-in-sdk: true
  /v2/accounts/{accountId}/tab_definitions:
    get:
      tags:
      - CustomTabs
      summary: Gets a list of all account tabs.
      description: Retrieves a list of all tabs associated with the account.
      operationId: Tabs_GetTabDefinitions
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: custom_tab_only
        in: query
        description: "When set to **true**, only custom tabs are returned in the response. "
        schema:
          type: string
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/tabMetadataList'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: list
      x-ds-method: list
      x-ds-service: CustomTabs
      x-ds-in-sdk: true
    post:
      tags:
      - CustomTabs
      summary: Creates a custom tab.
      description: |-
        Creates a tab with pre-defined properties, such as a text tab with a certain font type and validation pattern. Users can access the custom tabs when sending documents through the DocuSign web application.

        Custom tabs can be created for approve, checkbox, company, date, date signed, decline, email, email address, envelope ID, first name, formula, full name, initial here, last name, list, note, number, radio, sign here, signer attachment, SSN, text, title, and zip tabs.
      operationId: Tabs_PostTabDefinitions
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tabMetadata'
          application/xml:
            schema:
              $ref: '#/components/schemas/tabMetadata'
        required: false
      responses:
        "201":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/tabMetadata'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: create
      x-ds-method: create
      x-ds-service: CustomTabs
      x-ds-in-sdk: true
      x-codegen-request-body-name: tabMetadata
  /v2/accounts/{accountId}/tab_definitions/{customTabId}:
    get:
      tags:
      - CustomTabs
      summary: Gets custom tab information.
      description: Retrieves information about the requested custom tab on the specified
        account.
      operationId: Tab_GetCustomTab
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: customTabId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/tabMetadata'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: get
      x-ds-method: get
      x-ds-service: CustomTabs
      x-ds-in-sdk: true
    put:
      tags:
      - CustomTabs
      summary: |+
        Updates custom tab information.

      description: Updates the information in a custom tab for the specified account.
      operationId: Tab_PutCustomTab
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: customTabId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tabMetadata'
          application/xml:
            schema:
              $ref: '#/components/schemas/tabMetadata'
        required: false
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/tabMetadata'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: update
      x-ds-method: update
      x-ds-service: CustomTabs
      x-ds-in-sdk: true
      x-codegen-request-body-name: tabMetadata
    delete:
      tags:
      - CustomTabs
      summary: Deletes custom tab information.
      description: Deletes the custom from the specified account.
      operationId: Tab_DeleteCustomTab
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: customTabId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful response.
          content: {}
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: delete
      x-ds-method: delete
      x-ds-service: CustomTabs
      x-ds-in-sdk: true
  /v2/accounts/{accountId}/templates:
    get:
      tags:
      - Templates
      summary: Gets the definition of a template.
      description: Retrieves the list of templates for the specified account. The
        request can be limited to a specific folder.
      operationId: Templates_GetTemplates
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: count
        in: query
        description: The number of records to return.
        schema:
          type: string
      - name: folder
        in: query
        description: The query value can be a folder name or folder ID. The response
          will only return templates in the specified folder.
        schema:
          type: string
      - name: folder_ids
        in: query
        description: A comma-separated list of folder ID GUIDs.
        schema:
          type: string
      - name: from_date
        in: query
        description: "Start of the search date range. Only returns templates created\
          \ on or after this date/time. If no value is specified, there is no limit\
          \ on the earliest date created."
        schema:
          type: string
      - name: include
        in: query
        description: "A comma-separated list of additional information to include\
          \ in the response. Valid values are: \n\n- `recipients`: Includes information\
          \ about template recipients.\n- `folders`: Includes information about the\
          \ folder that holds the template. \n- `documents` : Includes information\
          \ about template documents.\n- `custom_fields`: Includes information about\
          \ template custom fields.\n- `notifications`: Includes information about\
          \ the notification settings for templates.\n- `advanced_templates`: Includes\
          \ advanced templates in the response. For example, these include templates\
          \ that use advanced recipient routing. We recommend that you use this option\
          \ to ensure that the response includes all relevant templates. "
        schema:
          type: string
      - name: modified_from_date
        in: query
        schema:
          type: string
      - name: modified_to_date
        in: query
        schema:
          type: string
      - name: order
        in: query
        description: "Sets the direction order used to sort the list. Valid values\
          \ are: \n\n- `asc` = ascending sort order (a to z)  \n- `desc` = descending\
          \ sort order (z to a)"
        schema:
          type: string
      - name: order_by
        in: query
        description: "Sets the file attribute used to sort the list. Valid values\
          \ are:  \n\n- `name`: template name  \n- `modified`: The date and time the\
          \ template was last modified.  \n- `used`: The date and time the template\
          \ was last used."
        schema:
          type: string
      - name: search_text
        in: query
        description: The search text used to search the names of templates.
        schema:
          type: string
      - name: shared_by_me
        in: query
        description: "If true, the response only includes templates shared by the\
          \ user. If false, the response only returns template not shared by the user.\
          \ If not specified, the response is not affected."
        schema:
          type: string
      - name: start_position
        in: query
        description: The starting index for the first template shown in the response.
          This must be greater than or equal to 0 (zero).
        schema:
          type: string
      - name: to_date
        in: query
        description: "End of the search date range. Only returns templates created\
          \ up to this date/time. If no value is provided, this defaults to the current\
          \ date."
        schema:
          type: string
      - name: used_from_date
        in: query
        description: "Start of the search date range. Only returns templates used\
          \ or edited on or after this date/time. If no value is specified, there\
          \ is no limit on the earliest date used."
        schema:
          type: string
      - name: used_to_date
        in: query
        description: "End of the search date range. Only returns templates used or\
          \ edited up to this date/time. If no value is provided, this defaults to\
          \ the current date."
        schema:
          type: string
      - name: user_filter
        in: query
        description: "Sets if the templates shown in the response Valid values are:\
          \  -owned_by_me: only shows templates the user owns.  -shared_with_me: only\
          \ shows templates that are shared with the user.  -all: shows all templates\
          \ owned or shared with the user."
        schema:
          type: string
      - name: user_id
        in: query
        description: The id of the user.
        schema:
          type: string
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/envelopeTemplateResults'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: ListTemplates
      x-ds-method: list
      x-ds-service: Templates
      x-ds-in-sdk: true
    post:
      tags:
      - Templates
      summary: Creates a template.
      description: |-
        Creates a template definition using a multipart request.

        ### Template Email Subject Merge Fields

        Call this endpoint to insert a recipient name and email address merge fields into the email subject line when creating or sending from a template.

        The merge fields, based on the recipient's role name, are added to the `emailSubject` property when the template is created or when the template is used to create an envelope. After a template sender adds the name and email information for the recipient and sends the envelope, the recipient information is automatically merged into the appropriate fields in the email subject line.

        Both the sender and the recipients will see the information in the email subject line for any emails associated with the template. This provides an easy way for senders to organize their envelope emails without having to open an envelope to check the recipient.


        ###### If merging the recipient information into the subject line causes the subject line to exceed 100 characters, then any characters over the 100 character limit are not included in the subject line. For cases where the recipient name or email is expected to be long, you should consider placing the merge field at the start of the email subject.

        To add a recipient's name in the subject line add the following text in the `emailSubject` property when creating the template or when sending an envelope from a template:

        `[[<roleName>_UserName]]`

        Example:

        `"emailSubject":"[[Signer 1_UserName]], Please sign this NDA",`

        To add a recipient's email address in the subject line add the following text in the `emailSubject` property when creating the template or when sending an envelope from a template:

        `[[<roleName>_Email]]`

        Example:

        `"emailSubject":"[[Signer 1_Email]], Please sign this NDA",`


        In both cases the <roleName> is the recipient's contents of the `roleName` property in the template.

        For cases where another recipient (such as an Agent, Editor, or Intermediary recipient) is entering the name and email information for the recipient included in the email subject, then `[[<roleName>_UserName]]` or `[[<roleName>_Email]]` is shown in the email subject.
      operationId: Templates_PostTemplates
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/envelopeTemplate'
          application/xml:
            schema:
              $ref: '#/components/schemas/envelopeTemplate'
        required: false
      responses:
        "201":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/templateSummary'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: createTemplate
      x-ds-method: create
      x-ds-service: Templates
      x-ds-in-sdk: true
      x-codegen-request-body-name: envelopeTemplate
  /v2/accounts/{accountId}/templates/{templateId}:
    get:
      tags:
      - Templates
      summary: Gets a list of templates for a specified account.
      description: Retrieves the definition of the specified template.
      operationId: Templates_GetTemplate
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: templateId
        in: path
        description: The ID of the template being accessed.
        required: true
        schema:
          type: string
      - name: include
        in: query
        description: "A comma-separated list of additional information to include\
          \ in the response. Valid values are: \n\n- `recipients`: Includes information\
          \ about template recipients.\n- `folders`: Includes information about the\
          \ folder that holds the template. \n- `documents` : Includes information\
          \ about template documents.\n- `custom_fields`: Includes information about\
          \ template custom fields.\n- `notifications`: Includes information about\
          \ the notification settings for templates.\n- `advanced_templates`: Includes\
          \ advanced templates in the response. For example, these include templates\
          \ that use advanced recipient routing. We recommend that you use this option\
          \ to ensure that the response includes all relevant templates. "
        schema:
          type: string
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/envelopeTemplate'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: get
      x-ds-method: get
      x-ds-service: Templates
      x-ds-in-sdk: true
    put:
      tags:
      - Templates
      summary: Updates an existing template.
      description: Updates an existing template.
      operationId: Templates_PutTemplate
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: templateId
        in: path
        description: The ID of the template being accessed.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/envelopeTemplate'
          application/xml:
            schema:
              $ref: '#/components/schemas/envelopeTemplate'
        required: false
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/templateUpdateSummary'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: update
      x-ds-method: update
      x-ds-service: Templates
      x-ds-in-sdk: true
      x-codegen-request-body-name: envelopeTemplate
  /v2/accounts/{accountId}/templates/{templateId}/{templatePart}:
    put:
      tags:
      - Templates
      summary: Shares a template with a group
      description: Shares a template with the specified members group.
      operationId: Templates_PutTemplatePart
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: templateId
        in: path
        description: The ID of the template being accessed.
        required: true
        schema:
          type: string
      - name: templatePart
        in: path
        description: "Currently, the only defined part is **groups**."
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/groupInformation'
          application/xml:
            schema:
              $ref: '#/components/schemas/groupInformation'
        required: false
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/groupInformation'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: updateGroupShare
      x-ds-method: updateGroupShare
      x-ds-service: Templates
      x-ds-in-sdk: true
      x-codegen-request-body-name: groupInformation
    delete:
      tags:
      - Templates
      summary: Removes a member group's sharing permissions for a template.
      description: Removes a member group's sharing permissions for a specified template.
      operationId: Templates_DeleteTemplatePart
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: templateId
        in: path
        description: The ID of the template being accessed.
        required: true
        schema:
          type: string
      - name: templatePart
        in: path
        description: "Currently, the only defined part is **groups**."
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/groupInformation'
          application/xml:
            schema:
              $ref: '#/components/schemas/groupInformation'
        required: false
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/groupInformation'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: deleteGroupShare
      x-ds-method: deleteGroupShare
      x-ds-service: Templates
      x-ds-in-sdk: true
      x-codegen-request-body-name: groupInformation
  /v2/accounts/{accountId}/templates/{templateId}/custom_fields:
    get:
      tags:
      - TemplateCustomFields
      summary: Gets the custom document fields from a template.
      description: Retrieves the custom document field information from an existing
        template.
      operationId: CustomFields_GetTemplateCustomFields
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: templateId
        in: path
        description: The ID of the template being accessed.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/customFields'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: listCustomFields
      x-ds-method: list
      x-ds-service: Templates
      x-ds-in-sdk: true
    put:
      tags:
      - TemplateCustomFields
      summary: Updates envelope custom fields in a template.
      description: |-
        Updates the custom fields in a template.

        Each custom field used in a template must have a unique name.
      operationId: CustomFields_PutTemplateCustomFields
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: templateId
        in: path
        description: The ID of the template being accessed.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/templateCustomFields'
          application/xml:
            schema:
              $ref: '#/components/schemas/templateCustomFields'
        required: false
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/customFields'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: updateCustomFields
      x-ds-method: update
      x-ds-service: Templates
      x-ds-in-sdk: true
      x-codegen-request-body-name: templateCustomFields
    post:
      tags:
      - TemplateCustomFields
      summary: Creates custom document fields in an existing template document.
      description: Creates custom document fields in an existing template document.
      operationId: CustomFields_PostTemplateCustomFields
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: templateId
        in: path
        description: The ID of the template being accessed.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/templateCustomFields'
          application/xml:
            schema:
              $ref: '#/components/schemas/templateCustomFields'
        required: false
      responses:
        "201":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/customFields'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: createCustomFields
      x-ds-method: create
      x-ds-service: Templates
      x-ds-in-sdk: true
      x-codegen-request-body-name: templateCustomFields
    delete:
      tags:
      - TemplateCustomFields
      summary: Deletes envelope custom fields in a template.
      description: Deletes envelope custom fields in a template.
      operationId: CustomFields_DeleteTemplateCustomFields
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: templateId
        in: path
        description: The ID of the template being accessed.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/templateCustomFields'
          application/xml:
            schema:
              $ref: '#/components/schemas/templateCustomFields'
        required: false
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/customFields'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: deleteCustomFields
      x-ds-method: delete
      x-ds-service: Templates
      x-ds-in-sdk: true
      x-codegen-request-body-name: templateCustomFields
  /v2/accounts/{accountId}/templates/{templateId}/documents:
    get:
      tags:
      - TemplateDocuments
      summary: Gets a list of documents associated with a template.
      description: Retrieves a list of documents associated with the specified template.
      operationId: Documents_GetTemplateDocuments
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: templateId
        in: path
        description: The ID of the template being accessed.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/templateDocumentsResult'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: listDocuments
      x-ds-method: list
      x-ds-service: Templates
      x-ds-in-sdk: true
    put:
      tags:
      - TemplateDocuments
      summary: Adds documents to a template document.
      description: Adds one or more documents to an existing template document.
      operationId: Documents_PutTemplateDocuments
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: templateId
        in: path
        description: The ID of the template being accessed.
        required: true
        schema:
          type: string
      - name: apply_document_fields
        in: query
        description: |
          When **true**, document fields
          can be added or modified
          while adding or modifying envelope documents.
        schema:
          type: string
      - name: persist_tabs
        in: query
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/envelopeDefinition'
          application/xml:
            schema:
              $ref: '#/components/schemas/envelopeDefinition'
        required: false
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/templateDocumentsResult'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: updateDocuments
      x-ds-method: updateList
      x-ds-service: Templates
      x-ds-in-sdk: true
      x-codegen-request-body-name: envelopeDefinition
    delete:
      tags:
      - TemplateDocuments
      summary: Deletes documents from a template.
      description: Deletes one or more documents from an existing template.
      operationId: Documents_DeleteTemplateDocuments
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: templateId
        in: path
        description: The ID of the template being accessed.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/envelopeDefinition'
          application/xml:
            schema:
              $ref: '#/components/schemas/envelopeDefinition'
        required: false
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/templateDocumentsResult'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: deleteDocuments
      x-ds-method: delete
      x-ds-service: Templates
      x-ds-in-sdk: true
      x-codegen-request-body-name: envelopeDefinition
  /v2/accounts/{accountId}/templates/{templateId}/documents/{documentId}:
    get:
      tags:
      - TemplateDocuments
      summary: Gets PDF documents from a template.
      description: |-
        Retrieves one or more PDF documents from the specified template.

        You can specify the ID of the document to retrieve or can specify `combined` to retrieve all documents in the template as one pdf.
      operationId: Documents_GetTemplateDocument
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: documentId
        in: path
        description: The ID of the document being accessed.
        required: true
        schema:
          type: string
      - name: templateId
        in: path
        description: The ID of the template being accessed.
        required: true
        schema:
          type: string
      - name: encrypt
        in: query
        schema:
          type: string
      - name: show_changes
        in: query
        schema:
          type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/pdf:
              schema:
                type: string
                format: binary
        "400":
          description: Error encountered.
          content:
            application/pdf:
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: getDocument
      x-ds-method: get
      x-ds-service: Templates
      x-ds-in-sdk: true
    put:
      tags:
      - TemplateDocuments
      summary: Adds a document to a template document.
      description: Adds the specified document to an existing template document.
      operationId: Documents_PutTemplateDocument
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: documentId
        in: path
        description: The ID of the document being accessed.
        required: true
        schema:
          type: string
      - name: templateId
        in: path
        description: The ID of the template being accessed.
        required: true
        schema:
          type: string
      - name: apply_document_fields
        in: query
        description: |
          When **true**, document fields
          can be added or modified
          while adding or modifying envelope documents.
        schema:
          type: string
      - name: is_envelope_definition
        in: query
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/envelopeDefinition'
          application/xml:
            schema:
              $ref: '#/components/schemas/envelopeDefinition'
        required: false
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/envelopeDocument'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: updateDocument
      x-ds-method: update
      x-ds-service: Templates
      x-ds-in-sdk: true
      x-codegen-request-body-name: envelopeDefinition
  /v2/accounts/{accountId}/templates/{templateId}/documents/{documentId}/fields:
    get:
      tags:
      - TemplateDocumentFields
      summary: Gets the custom document fields for a an existing template document.
      description: Retrieves the custom document fields for an existing template document.
      operationId: DocumentFields_GetTemplateDocumentFields
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: documentId
        in: path
        description: The ID of the document being accessed.
        required: true
        schema:
          type: string
      - name: templateId
        in: path
        description: The ID of the template being accessed.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/documentFieldsInformation'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: listDocumentFields
      x-ds-method: list
      x-ds-service: Templates
      x-ds-in-sdk: true
    put:
      tags:
      - TemplateDocumentFields
      summary: Updates existing custom document fields in an existing template document.
      description: Updates existing custom document fields in an existing template
        document.
      operationId: DocumentFields_PutTemplateDocumentFields
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: documentId
        in: path
        description: The ID of the document being accessed.
        required: true
        schema:
          type: string
      - name: templateId
        in: path
        description: The ID of the template being accessed.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/documentFieldsInformation'
          application/xml:
            schema:
              $ref: '#/components/schemas/documentFieldsInformation'
        required: false
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/documentFieldsInformation'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: updateDocumentFields
      x-ds-method: update
      x-ds-service: Templates
      x-ds-in-sdk: true
      x-codegen-request-body-name: documentFieldsInformation
    post:
      tags:
      - TemplateDocumentFields
      summary: Creates custom document fields in an existing template document.
      description: Creates custom document fields in an existing template document.
      operationId: DocumentFields_PostTemplateDocumentFields
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: documentId
        in: path
        description: The ID of the document being accessed.
        required: true
        schema:
          type: string
      - name: templateId
        in: path
        description: The ID of the template being accessed.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/documentFieldsInformation'
          application/xml:
            schema:
              $ref: '#/components/schemas/documentFieldsInformation'
        required: false
      responses:
        "201":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/documentFieldsInformation'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: createDocumentFields
      x-ds-method: create
      x-ds-service: Templates
      x-ds-in-sdk: true
      x-codegen-request-body-name: documentFieldsInformation
    delete:
      tags:
      - TemplateDocumentFields
      summary: Deletes custom document fields from an existing template document.
      description: Deletes custom document fields from an existing template document.
      operationId: DocumentFields_DeleteTemplateDocumentFields
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: documentId
        in: path
        description: The ID of the document being accessed.
        required: true
        schema:
          type: string
      - name: templateId
        in: path
        description: The ID of the template being accessed.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/documentFieldsInformation'
          application/xml:
            schema:
              $ref: '#/components/schemas/documentFieldsInformation'
        required: false
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/documentFieldsInformation'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: deleteDocumentFields
      x-ds-method: delete
      x-ds-service: Templates
      x-ds-in-sdk: true
      x-codegen-request-body-name: documentFieldsInformation
  /v2/accounts/{accountId}/templates/{templateId}/documents/{documentId}/html_definitions:
    get:
      tags:
      - TemplateDocumentHtmlDefinitions
      operationId: ResponsiveHtml_GetTemplateDocumentHtmlDefinitions
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: documentId
        in: path
        description: The ID of the document being accessed.
        required: true
        schema:
          type: string
      - name: templateId
        in: path
        description: The ID of the template being accessed.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/documentHtmlDefinitionOriginals'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: getTemplateDocumentHtmlDefinitions
      x-ds-method: list
      x-ds-service: Uncategorized
      x-ds-in-sdk: true
  /v2/accounts/{accountId}/templates/{templateId}/documents/{documentId}/pages:
    get:
      tags:
      - Templates
      summary: Returns document page image(s) based on input.
      operationId: Pages_GetTemplatePageImages
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: documentId
        in: path
        description: The ID of the document being accessed.
        required: true
        schema:
          type: string
      - name: templateId
        in: path
        description: The ID of the template being accessed.
        required: true
        schema:
          type: string
      - name: count
        in: query
        description: The maximum number of results to be returned by this request.
        schema:
          type: string
      - name: dpi
        in: query
        description: Number of dots per inch for the resulting image. The default
          if not used is 94. The range is 1-310.
        schema:
          type: string
      - name: max_height
        in: query
        description: Sets the maximum height (in pixels) of the returned image.
        schema:
          type: string
      - name: max_width
        in: query
        description: Sets the maximum width (in pixels) of the returned image.
        schema:
          type: string
      - name: nocache
        in: query
        schema:
          type: string
      - name: show_changes
        in: query
        schema:
          type: string
      - name: start_position
        in: query
        description: The position within the total result set from which to start
          returning values. The value **thumbnail** may be used to return the page
          image.
        schema:
          type: string
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/pageImages'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: getDocumentPageImages
      x-ds-method: getPageImages
      x-ds-service: Templates
      x-ds-in-sdk: true
  /v2/accounts/{accountId}/templates/{templateId}/documents/{documentId}/pages/{pageNumber}:
    delete:
      tags:
      - Templates
      summary: Deletes a page from a document in an template.
      description: Deletes a page from a document in a template based on the page
        number.
      operationId: Pages_DeleteTemplatePage
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: documentId
        in: path
        description: The ID of the document being accessed.
        required: true
        schema:
          type: string
      - name: pageNumber
        in: path
        description: The page number being accessed.
        required: true
        schema:
          type: string
      - name: templateId
        in: path
        description: The ID of the template being accessed.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/pageRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/pageRequest'
        required: false
      responses:
        "200":
          description: Successful response.
          content: {}
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: deleteDocumentPage
      x-ds-method: deleteDocumentPage
      x-ds-service: Templates
      x-ds-in-sdk: true
      x-codegen-request-body-name: pageRequest
  /v2/accounts/{accountId}/templates/{templateId}/documents/{documentId}/pages/{pageNumber}/page_image:
    get:
      tags:
      - Templates
      summary: Gets a page image from a template for display.
      description: Retrieves a page image for display from the specified template.
      operationId: Pages_GetTemplatePageImage
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: documentId
        in: path
        description: The ID of the document being accessed.
        required: true
        schema:
          type: string
      - name: pageNumber
        in: path
        description: The page number being accessed.
        required: true
        schema:
          type: string
      - name: templateId
        in: path
        description: The ID of the template being accessed.
        required: true
        schema:
          type: string
      - name: dpi
        in: query
        description: Number of dots per inch for the resulting image. The default
          if not used is 94. The range is 1-310.
        schema:
          type: string
      - name: max_height
        in: query
        description: Sets the maximum height (in pixels) of the returned image.
        schema:
          type: string
      - name: max_width
        in: query
        description: Sets the maximum width (in pixels) of the returned image.
        schema:
          type: string
      - name: show_changes
        in: query
        schema:
          type: string
      responses:
        "200":
          description: Successful response.
          content:
            image/png:
              schema:
                type: string
                format: binary
        "400":
          description: Error encountered.
          content:
            image/png:
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: getDocumentPageImage
      x-ds-method: getDocumentPageImage
      x-ds-service: Templates
      x-ds-in-sdk: true
    put:
      tags:
      - Templates
      summary: Rotates page image from a template for display.
      description: Rotates page image from a template for display. The page image
        can be rotated to the left or right.
      operationId: Pages_PutTemplatePageImage
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: documentId
        in: path
        description: The ID of the document being accessed.
        required: true
        schema:
          type: string
      - name: pageNumber
        in: path
        description: The page number being accessed.
        required: true
        schema:
          type: string
      - name: templateId
        in: path
        description: The ID of the template being accessed.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/pageRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/pageRequest'
        required: false
      responses:
        "200":
          description: Successful response.
          content: {}
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: rotateDocumentPage
      x-ds-method: rotateDocumentPage
      x-ds-service: Templates
      x-ds-in-sdk: true
      x-codegen-request-body-name: pageRequest
  /v2/accounts/{accountId}/templates/{templateId}/documents/{documentId}/pages/{pageNumber}/tabs:
    get:
      tags:
      - TemplateDocumentTabs
      summary: Returns tabs on the specified page.
      operationId: Tabs_GetTemplatePageTabs
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: documentId
        in: path
        description: The ID of the document being accessed.
        required: true
        schema:
          type: string
      - name: pageNumber
        in: path
        description: The page number being accessed.
        required: true
        schema:
          type: string
      - name: templateId
        in: path
        description: The ID of the template being accessed.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TemplateDocumentTabs'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: getPageTabs
      x-ds-method: getByPage
      x-ds-service: Templates
      x-ds-in-sdk: true
  /v2/accounts/{accountId}/templates/{templateId}/documents/{documentId}/responsive_html_preview:
    post:
      tags:
      - TemplateDocumentResponsiveHtmlPreview
      operationId: ResponsiveHtml_PostTemplateDocumentResponsiveHtmlPreview
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: documentId
        in: path
        description: The ID of the document being accessed.
        required: true
        schema:
          type: string
      - name: templateId
        in: path
        description: The ID of the template being accessed.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/documentHtmlDefinition'
          application/xml:
            schema:
              $ref: '#/components/schemas/documentHtmlDefinition'
        required: false
      responses:
        "201":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/documentHtmlDefinitions'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: createTemplateDocumentResponsiveHtmlPreview
      x-ds-method: create
      x-ds-service: Uncategorized
      x-ds-in-sdk: true
      x-codegen-request-body-name: documentHtmlDefinition
  /v2/accounts/{accountId}/templates/{templateId}/documents/{documentId}/tabs:
    get:
      tags:
      - TemplateDocumentTabs
      summary: Returns tabs on the document.
      operationId: Tabs_GetTemplateDocumentTabs
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: documentId
        in: path
        description: The ID of the document being accessed.
        required: true
        schema:
          type: string
      - name: templateId
        in: path
        description: The ID of the template being accessed.
        required: true
        schema:
          type: string
      - name: page_numbers
        in: query
        schema:
          type: string
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TemplateDocumentTabs'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: getDocumentTabs
      x-ds-method: get
      x-ds-service: Templates
      x-ds-in-sdk: true
  /v2/accounts/{accountId}/templates/{templateId}/html_definitions:
    get:
      tags:
      - TemplateHtmlDefinitions
      operationId: ResponsiveHtml_GetTemplateHtmlDefinitions
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: templateId
        in: path
        description: The ID of the template being accessed.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/documentHtmlDefinitionOriginals'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: getTemplateHtmlDefinitions
      x-ds-method: list
      x-ds-service: Uncategorized
      x-ds-in-sdk: true
  /v2/accounts/{accountId}/templates/{templateId}/lock:
    get:
      tags:
      - TemplateLocks
      summary: Gets template lock information.
      description: |-
        Retrieves general information about the template lock.

        If the call is made by the user who has the lock and the request has the same integrator key as original, then the `X-DocuSign-Edit` header  field and additional lock information is included in the response. This allows users to recover a lost editing session token and the `X-DocuSign-Edit` header.
      operationId: Lock_GetTemplateLock
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: templateId
        in: path
        description: The ID of the template being accessed.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/lockInformation'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: getLock
      x-ds-method: get
      x-ds-service: Templates
      x-ds-in-sdk: true
    put:
      tags:
      - TemplateLocks
      summary: Updates a template lock.
      description: Updates the lock duration time or update the `lockedByApp` property
        information for the specified template. The user and integrator key must match
        the user specified by the `lockByUser` property and integrator key information
        and the `X-DocuSign-Edit` header must be included or an error will be generated.
      operationId: Lock_PutTemplateLock
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: templateId
        in: path
        description: The ID of the template being accessed.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/lockRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/lockRequest'
        required: false
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/lockInformation'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: updateLock
      x-ds-method: update
      x-ds-service: Templates
      x-ds-in-sdk: true
      x-codegen-request-body-name: lockRequest
    post:
      tags:
      - TemplateLocks
      summary: Lock a template.
      description: |-
        Locks the specified template, and sets the time until the lock expires, to prevent other users or recipients from accessing and changing the template.

        ###### Note: Users must have envelope locking capability enabled to use this function (the userSetting property `canLockEnvelopes` must be set to **true** for the user).
      operationId: Lock_PostTemplateLock
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: templateId
        in: path
        description: The ID of the template being accessed.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/lockRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/lockRequest'
        required: false
      responses:
        "201":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/lockInformation'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: createLock
      x-ds-method: create
      x-ds-service: Templates
      x-ds-in-sdk: true
      x-codegen-request-body-name: lockRequest
    delete:
      tags:
      - TemplateLocks
      summary: Deletes a template lock.
      description: Deletes the lock from the specified template. The `X-DocuSign-Edit`
        header must be included in the request.
      operationId: Lock_DeleteTemplateLock
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: templateId
        in: path
        description: The ID of the template being accessed.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/lockRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/lockRequest'
        required: false
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/lockInformation'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: deleteLock
      x-ds-method: delete
      x-ds-service: Templates
      x-ds-in-sdk: true
      x-codegen-request-body-name: lockRequest
  /v2/accounts/{accountId}/templates/{templateId}/notification:
    get:
      tags:
      - Templates
      summary: Gets template notification information.
      description: "Retrieves the envelope notification, reminders and expirations,\
        \ information for an existing template."
      operationId: Notification_GetTemplatesTemplateIdNotification
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: templateId
        in: path
        description: The ID of the template being accessed.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/notification'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: getNotificationSettings
      x-ds-method: getNotificationSettings
      x-ds-service: Templates
      x-ds-in-sdk: true
    put:
      tags:
      - Templates
      summary: Updates the notification  structure for an existing template.
      description: Updates the notification structure for an existing template. Use
        this endpoint to set reminder and expiration notifications.
      operationId: Notification_PutTemplatesTemplateIdNotification
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: templateId
        in: path
        description: The ID of the template being accessed.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/templateNotificationRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/templateNotificationRequest'
        required: false
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/notification'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: updateNotificationSettings
      x-ds-method: updateNotificationSettings
      x-ds-service: Templates
      x-ds-in-sdk: true
      x-codegen-request-body-name: templateNotificationRequest
  /v2/accounts/{accountId}/templates/{templateId}/recipients:
    get:
      tags:
      - TemplateRecipients
      summary: Gets recipient information from a template.
      description: Retrieves the information for all recipients in the specified template.
      operationId: Recipients_GetTemplateRecipients
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: templateId
        in: path
        description: The ID of the template being accessed.
        required: true
        schema:
          type: string
      - name: include_anchor_tab_locations
        in: query
        description: " When set to **true** and `include_tabs` is set to **true**,\
          \ all tabs with anchor tab properties are included in the response. "
        schema:
          type: string
      - name: include_extended
        in: query
        description: " When set to **true**, the extended properties are included\
          \ in the response. "
        schema:
          type: string
      - name: include_tabs
        in: query
        description: "When set to **true**, the tab information associated with the\
          \ recipient is included in the response."
        schema:
          type: string
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/recipients'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: listRecipients
      x-ds-method: list
      x-ds-service: Templates
      x-ds-in-sdk: true
    put:
      tags:
      - TemplateRecipients
      summary: Updates recipients in a template.
      description: "Updates recipients in a template. \n\nYou can edit the following\
        \ properties: `email`, `userName`, `routingOrder`, `faxNumber`, `deliveryMethod`,\
        \ `accessCode`, and `requireIdLookup`."
      operationId: Recipients_PutTemplateRecipients
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: templateId
        in: path
        description: The ID of the template being accessed.
        required: true
        schema:
          type: string
      - name: resend_envelope
        in: query
        description: "When set to **true**, resends the   envelope if the new recipient's\
          \ routing order is before or the same as the envelope's next recipient."
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/templateRecipients'
          application/xml:
            schema:
              $ref: '#/components/schemas/templateRecipients'
        required: false
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/recipientsUpdateSummary'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: updateRecipients
      x-ds-method: update
      x-ds-service: Templates
      x-ds-in-sdk: true
      x-codegen-request-body-name: templateRecipients
    post:
      tags:
      - TemplateRecipients
      summary: Adds tabs for a recipient.
      description: Adds one or more recipients to a template.
      operationId: Recipients_PostTemplateRecipients
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: templateId
        in: path
        description: The ID of the template being accessed.
        required: true
        schema:
          type: string
      - name: resend_envelope
        in: query
        description: "When set to **true**, resends the   envelope if the new recipient's\
          \ routing order is before or the same as the envelope's next recipient."
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/templateRecipients'
          application/xml:
            schema:
              $ref: '#/components/schemas/templateRecipients'
        required: false
      responses:
        "201":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/recipients'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: createRecipients
      x-ds-method: create
      x-ds-service: Templates
      x-ds-in-sdk: true
      x-codegen-request-body-name: templateRecipients
    delete:
      tags:
      - TemplateRecipients
      summary: Deletes recipients from a template.
      description: "Deletes one or more recipients from a template. Recipients to\
        \ be deleted are listed in the request, with the `recipientId` being used\
        \ as the key for deleting recipients."
      operationId: Recipients_DeleteTemplateRecipients
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: templateId
        in: path
        description: The ID of the template being accessed.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/templateRecipients'
          application/xml:
            schema:
              $ref: '#/components/schemas/templateRecipients'
        required: false
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/recipients'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: deleteRecipients
      x-ds-method: deleteList
      x-ds-service: Templates
      x-ds-in-sdk: true
      x-codegen-request-body-name: templateRecipients
  /v2/accounts/{accountId}/templates/{templateId}/recipients/{recipientId}:
    delete:
      tags:
      - TemplateRecipients
      summary: Deletes the specified recipient file from a template.
      description: Deletes the specified recipient file from the specified template.
      operationId: Recipients_DeleteTemplateRecipient
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: recipientId
        in: path
        description: "A local reference that senders use to map recipients to other\
          \ objects, such as specific document tabs. Within an envelope, each `recipientId`\
          \ must be unique, but there is no uniqueness requirement across envelopes.\
          \ For example, many envelopes assign the first recipient a `recipientId`\
          \ of `1`."
        required: true
        schema:
          type: string
      - name: templateId
        in: path
        description: The ID of the template being accessed.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/templateRecipients'
          application/xml:
            schema:
              $ref: '#/components/schemas/templateRecipients'
        required: false
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/recipients'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: deleteRecipient
      x-ds-method: delete
      x-ds-service: Templates
      x-ds-in-sdk: true
      x-codegen-request-body-name: templateRecipients
  /v2/accounts/{accountId}/templates/{templateId}/recipients/{recipientId}/bulk_recipients:
    get:
      tags:
      - TemplateBulkRecipients
      summary: Gets the bulk recipient file from a template.
      description: Retrieves the bulk recipient file information from a template that
        has a bulk recipient.
      operationId: Recipients_GetTemplateBulkRecipients
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: recipientId
        in: path
        description: "A local reference that senders use to map recipients to other\
          \ objects, such as specific document tabs. Within an envelope, each `recipientId`\
          \ must be unique, but there is no uniqueness requirement across envelopes.\
          \ For example, many envelopes assign the first recipient a `recipientId`\
          \ of `1`."
        required: true
        schema:
          type: string
      - name: templateId
        in: path
        description: The ID of the template being accessed.
        required: true
        schema:
          type: string
      - name: include_tabs
        in: query
        description: "When set to **true**, the tab information associated with the\
          \ recipient is included in the response."
        schema:
          type: string
      - name: start_position
        in: query
        description: |
          Reserved for DocuSign.
        schema:
          type: string
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/bulkRecipientsResponse'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: listBulkRecipients
      x-ds-method: list
      x-ds-service: Templates
      x-ds-in-sdk: true
    put:
      tags:
      - TemplateBulkRecipients
      summary: Adds or replaces the bulk recipients list in a template.
      description: |-
        Updates the bulk recipients in a template using a file upload. The Content-Type supported for uploading a bulk recipient file is CSV (text/csv).

        The REST API does not support modifying individual rows or values in the bulk recipients file. It only allows the entire file to be added or replaced with a new file.
      operationId: Recipients_PutTemplateBulkRecipients
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: recipientId
        in: path
        description: "A local reference that senders use to map recipients to other\
          \ objects, such as specific document tabs. Within an envelope, each `recipientId`\
          \ must be unique, but there is no uniqueness requirement across envelopes.\
          \ For example, many envelopes assign the first recipient a `recipientId`\
          \ of `1`."
        required: true
        schema:
          type: string
      - name: templateId
        in: path
        description: The ID of the template being accessed.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/bulkRecipientsRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/bulkRecipientsRequest'
        required: false
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/bulkRecipientsSummaryResponse'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: updateBulkRecipients
      x-ds-method: update
      x-ds-service: Templates
      x-ds-in-sdk: true
      x-codegen-request-body-name: bulkRecipientsRequest
    delete:
      tags:
      - TemplateBulkRecipients
      summary: Deletes the bulk recipient list on a template.
      description: Deletes the bulk recipient list on a template.
      operationId: Recipients_DeleteTemplateBulkRecipientsFile
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: recipientId
        in: path
        description: "A local reference that senders use to map recipients to other\
          \ objects, such as specific document tabs. Within an envelope, each `recipientId`\
          \ must be unique, but there is no uniqueness requirement across envelopes.\
          \ For example, many envelopes assign the first recipient a `recipientId`\
          \ of `1`."
        required: true
        schema:
          type: string
      - name: templateId
        in: path
        description: The ID of the template being accessed.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/bulkRecipientsUpdateResponse'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: deleteBulkRecipients
      x-ds-method: delete
      x-ds-service: Templates
      x-ds-in-sdk: true
  /v2/accounts/{accountId}/templates/{templateId}/recipients/{recipientId}/document_visibility:
    get:
      tags:
      - TemplateDocumentVisibility
      summary: Returns document visibility for the recipients
      operationId: Recipients_GetTemplateRecipientDocumentVisibility
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: recipientId
        in: path
        description: "A local reference that senders use to map recipients to other\
          \ objects, such as specific document tabs. Within an envelope, each `recipientId`\
          \ must be unique, but there is no uniqueness requirement across envelopes.\
          \ For example, many envelopes assign the first recipient a `recipientId`\
          \ of `1`."
        required: true
        schema:
          type: string
      - name: templateId
        in: path
        description: The ID of the template being accessed.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/documentVisibilityList'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: getTemplateRecipientDocumentVisibility
      x-ds-method: get
      x-ds-service: Envelopes
      x-ds-in-sdk: true
    put:
      tags:
      - TemplateDocumentVisibility
      summary: Updates document visibility for the recipients
      operationId: Recipients_PutTemplateRecipientDocumentVisibility
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: recipientId
        in: path
        description: "A local reference that senders use to map recipients to other\
          \ objects, such as specific document tabs. Within an envelope, each `recipientId`\
          \ must be unique, but there is no uniqueness requirement across envelopes.\
          \ For example, many envelopes assign the first recipient a `recipientId`\
          \ of `1`."
        required: true
        schema:
          type: string
      - name: templateId
        in: path
        description: The ID of the template being accessed.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/templateDocumentVisibilityList'
          application/xml:
            schema:
              $ref: '#/components/schemas/templateDocumentVisibilityList'
        required: false
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/templateDocumentVisibilityList'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: updateTemplateRecipientDocumentVisibility
      x-ds-method: update
      x-ds-service: Envelopes
      x-ds-in-sdk: true
      x-codegen-request-body-name: templateDocumentVisibilityList
  /v2/accounts/{accountId}/templates/{templateId}/recipients/{recipientId}/tabs:
    get:
      tags:
      - TemplateRecipientTabs
      summary: Gets the tabs information for a signer or sign-in-person recipient
        in a template.
      description: Gets the tabs information for a signer or sign-in-person recipient
        in a template.
      operationId: Recipients_GetTemplateRecipientTabs
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: recipientId
        in: path
        description: "A local reference that senders use to map recipients to other\
          \ objects, such as specific document tabs. Within an envelope, each `recipientId`\
          \ must be unique, but there is no uniqueness requirement across envelopes.\
          \ For example, many envelopes assign the first recipient a `recipientId`\
          \ of `1`."
        required: true
        schema:
          type: string
      - name: templateId
        in: path
        description: The ID of the template being accessed.
        required: true
        schema:
          type: string
      - name: include_anchor_tab_locations
        in: query
        description: "When set to **true**, all tabs with anchor tab properties are\
          \ included in the response. "
        schema:
          type: string
      - name: include_metadata
        in: query
        description: |
          Reserved for DocuSign.
        schema:
          type: string
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/tabs'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: listTabs
      x-ds-method: list
      x-ds-service: Templates
      x-ds-in-sdk: true
    put:
      tags:
      - TemplateRecipientTabs
      summary: Updates the tabs for a recipient.
      description: Updates one or more tabs for a recipient in a template.
      operationId: Recipients_PutTemplateRecipientTabs
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: recipientId
        in: path
        description: "A local reference that senders use to map recipients to other\
          \ objects, such as specific document tabs. Within an envelope, each `recipientId`\
          \ must be unique, but there is no uniqueness requirement across envelopes.\
          \ For example, many envelopes assign the first recipient a `recipientId`\
          \ of `1`."
        required: true
        schema:
          type: string
      - name: templateId
        in: path
        description: The ID of the template being accessed.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/templateTabs'
          application/xml:
            schema:
              $ref: '#/components/schemas/templateTabs'
        required: false
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/tabs'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: updateTabs
      x-ds-method: update
      x-ds-service: Templates
      x-ds-in-sdk: true
      x-codegen-request-body-name: templateTabs
    post:
      tags:
      - TemplateRecipientTabs
      summary: Adds tabs for a recipient.
      description: Adds one or more tabs for a recipient.
      operationId: Recipients_PostTemplateRecipientTabs
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: recipientId
        in: path
        description: "A local reference that senders use to map recipients to other\
          \ objects, such as specific document tabs. Within an envelope, each `recipientId`\
          \ must be unique, but there is no uniqueness requirement across envelopes.\
          \ For example, many envelopes assign the first recipient a `recipientId`\
          \ of `1`."
        required: true
        schema:
          type: string
      - name: templateId
        in: path
        description: The ID of the template being accessed.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/templateTabs'
          application/xml:
            schema:
              $ref: '#/components/schemas/templateTabs'
        required: false
      responses:
        "201":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/tabs'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: createTabs
      x-ds-method: create
      x-ds-service: Templates
      x-ds-in-sdk: true
      x-codegen-request-body-name: templateTabs
    delete:
      tags:
      - TemplateRecipientTabs
      summary: Deletes the tabs associated with a recipient in a template.
      description: Deletes one or more tabs associated with a recipient in a template.
      operationId: Recipients_DeleteTemplateRecipientTabs
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: recipientId
        in: path
        description: "A local reference that senders use to map recipients to other\
          \ objects, such as specific document tabs. Within an envelope, each `recipientId`\
          \ must be unique, but there is no uniqueness requirement across envelopes.\
          \ For example, many envelopes assign the first recipient a `recipientId`\
          \ of `1`."
        required: true
        schema:
          type: string
      - name: templateId
        in: path
        description: The ID of the template being accessed.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/templateTabs'
          application/xml:
            schema:
              $ref: '#/components/schemas/templateTabs'
        required: false
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/tabs'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: deleteTabs
      x-ds-method: delete
      x-ds-service: Templates
      x-ds-in-sdk: true
      x-codegen-request-body-name: templateTabs
  /v2/accounts/{accountId}/templates/{templateId}/recipients/document_visibility:
    put:
      tags:
      - TemplateDocumentVisibility
      summary: Updates document visibility for the recipients
      operationId: Recipients_PutTemplateRecipientsDocumentVisibility
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: templateId
        in: path
        description: The ID of the template being accessed.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/templateDocumentVisibilityList'
          application/xml:
            schema:
              $ref: '#/components/schemas/templateDocumentVisibilityList'
        required: false
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/templateDocumentVisibilityList'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: updateTemplateRecipientsDocumentVisibility
      x-ds-method: updateList
      x-ds-service: Envelopes
      x-ds-in-sdk: true
      x-codegen-request-body-name: templateDocumentVisibilityList
  /v2/accounts/{accountId}/templates/{templateId}/responsive_html_preview:
    post:
      tags:
      - TemplateResponsiveHtmlPreview
      operationId: ResponsiveHtml_PostTemplateResponsiveHtmlPreview
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: templateId
        in: path
        description: The ID of the template being accessed.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/documentHtmlDefinition'
          application/xml:
            schema:
              $ref: '#/components/schemas/documentHtmlDefinition'
        required: false
      responses:
        "201":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/documentHtmlDefinitions'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: createTemplateResponsiveHtmlPreview
      x-ds-method: create
      x-ds-service: Uncategorized
      x-ds-in-sdk: true
      x-codegen-request-body-name: documentHtmlDefinition
  /v2/accounts/{accountId}/templates/{templateId}/views/edit:
    post:
      tags:
      - TemplateViews
      summary: Provides a URL to start an edit view of the Template UI
      operationId: Views_PostTemplateEditView
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: templateId
        in: path
        description: The ID of the template being accessed.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/returnUrlRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/returnUrlRequest'
        required: false
      responses:
        "201":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/viewUrl'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: createEditView
      x-ds-method: createEdit
      x-ds-service: Templates
      x-ds-in-sdk: true
      x-codegen-request-body-name: returnUrlRequest
  /v2/accounts/{accountId}/unsupported_file_types:
    get:
      tags:
      - Accounts
      summary: Gets a list of unsupported file types.
      description: Retrieves a list of file types (mime-types and file-extensions)
        that are not supported for upload through the DocuSign system.
      operationId: UnsupportedFileTypes_GetUnsupportedFileTypes
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/fileTypeList'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: listUnsupportedFileTypes
      x-ds-method: listUnsupportedFileTypes
      x-ds-service: Accounts
      x-ds-in-sdk: true
  /v2/accounts/{accountId}/users:
    get:
      tags:
      - Users
      summary: Retrieves the list of users for the specified account.
      description: |-
        Retrieves the list of users for the specified account.

        The response returns the list of users for the account along with the information about the result set. If the `additional_info` query was added to the endpoint and set to **true**, the full user information is returned for each user
      operationId: Users_GetUsers
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: additional_info
        in: query
        description: "When set to **true**, the full list of user information is returned\
          \ for each user in the account."
        schema:
          type: string
      - name: count
        in: query
        description: 'Number of records to return. The number must be greater than
          0 and less than or equal to 100. '
        schema:
          type: string
      - name: email
        in: query
        schema:
          type: string
      - name: email_substring
        in: query
        description: Filters the returned user records by the email address or a sub-string
          of email address.
        schema:
          type: string
      - name: group_id
        in: query
        description: Filters user records returned by one or more group Id's.
        schema:
          type: string
      - name: login_status
        in: query
        schema:
          type: string
      - name: not_group_id
        in: query
        schema:
          type: string
      - name: start_position
        in: query
        description: 'Starting value for the list. '
        schema:
          type: string
      - name: status
        in: query
        description: |
          Filters the user records by account status. One of:

          * ActivationRequired
          * ActivationSent
          * Active
          * Closed
          * Disabled
        schema:
          type: string
      - name: user_name_substring
        in: query
        description: Filters the user records returned by the user name or a sub-string
          of user name.
        schema:
          type: string
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/userInformationList'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: list
      x-ds-method: list
      x-ds-service: Users
      x-ds-in-sdk: true
    put:
      tags:
      - Users
      summary: Change one or more user in the specified account.
      operationId: Users_PutUsers
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/userInformationList'
          application/xml:
            schema:
              $ref: '#/components/schemas/userInformationList'
        required: false
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/userInformationList'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: updateUsers
      x-ds-method: updateList
      x-ds-service: Users
      x-ds-in-sdk: true
      x-codegen-request-body-name: userInformationList
    post:
      tags:
      - Users
      summary: Adds news user to the specified account.
      description: |
        Adds new users to an account.

        The body of this request
        is an array
        of [`Users`][usersobject] objects.
        For each new user,
        you must provide at least
        the `userName`
        and
        an `email`.

        The
        [`userSettings` property](#user-settings)
        is a [name/value][nameValue]
        list that specifies the actions users can
        perform.
        In the example below,
        Tal Mason
        will be able to send envelopes,
        and the activation email
        will be in French
        because the `locale`
        is set to `fr`.


        ```
        POST /restapi/v2/accounts/{accountId}/users
        Content-Type: application/json
        ```
        ```
        {
          "newUsers": [
            {
              "userName": "Claire Horace",
              "email": "claire@example.com.com"
            },
            {
              "userName": "Tal Mason",
              "email": "tal@example.com.com",
              "userSettings": [
                {
                  "name": "canSendEnvelope",
                  "value": "true"
                },
                {
                  "name": "locale",
                  "value": "fr"
                }
              ]
            }
          ]
        }
        ```


        A successful response
        is a
        `newUsers` array
        with information about
        the newly created users.
        If there was problem creating a user,
        that entry will contain
        an `errorDetails` property
        that describes what went wrong.

        ```json
        {
          "newUsers": [
            {
              "userId": "e064a4fc-c0da-c0c0-95fa-8bac87ede98a",
              "uri": "/users/e064a4fc-c0da-c0c0-95fa-8bac87ede98a",
              "email": "claire@example.com",
              "userName": "Claire Horace",
              "createdDateTime": "0001-01-01T08:00:00.0000000Z",
              "errorDetails": {
                "errorCode": "USER_ALREADY_EXISTS_IN_ACCOUNT",
                "message": "Username and email combination already exists for this account."
              }
            },
            {
              "userId": "a0e6c64b-feed-cafe-9af0-805ff3c8cffd",
              "uri": "/users/a0e6c64b-feed-cafe-9af0-805ff3c8cffd",
              "email": "tal@example.com",
              "userName": "Tal Mason",
              "userStatus": "ActivationSent",
              "createdDateTime": "2017-09-15T05:54:36.1265683Z"
            }
          ]
        }
        ```


        ### User Settings

        User settings
        specify the capabilities
        a newly created user will have.


        | Name                             | Value   | Authorization Requried                                         | Description|
        | :------------------------------- | :------ | :------------------------------------------------------------- ||
        | allowBulkRecipients              | Boolean | Admin                                                          | When **true**, this user can use the bulk send functionality|
        | allowRecipientLanguageSelection  | Boolean | Admin                                                          | When **true**, this user can set the language used in the standard email format for a recipient when creating an envelope.                                                                                                                                                                                                                                                                                                                                                                                                                                                              |
        | allowSendOnBehalfOf              | Boolean | Admin                                                          | When **true**, this user can send envelopes 'on behalf of' other users through the API.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 |
        | apiAccountWideAccess             | Boolean | Admin                                                          | When **true**, this user can send and manage envelopes for the entire account using the DocuSign API.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   |
        | canEditSharedAddressBook         | String  | Admin                                                          | Sets the address book usage and management rights for the user. Possible values: <ul> <li><code>none</code></li> <li><code>use_only_shared</code></li> <li><code>use_private_and_shared</code></li> <li><code>share</code></li> </ul>                                                                                                                                                                                                                                                                                                                                                   |
        | canManageAccount                 | Boolean | Admin &amp; not setting for self                               | When **true**, this user can manage account settings, manage user settings, add users, and remove users.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                |
        | canManageTemplates               | String  | Admin &amp; not setting for self                               | Sets the template usage and management rights for the user. Possible values: <ul> <li><code>none</code></li> <li><code>use</code></li> <li><code>create</code></li> <li><code>share</code></li> </ul>                                                                                                                                                                                                                                                                                                                                                                                   |
        | canSendAPIRequests               | Boolean | Admin &amp; [account setting][accountsettings] `usesAPI` is set| Only needed if integrator key is not used. When **true**, this user can send and manage envelopes using the DocuSign API.                                                                                                                                                                                                                                                                                                                                                                                                                                                               |
        | canSendEnvelope                  | Boolean | Admin &amp; not setting for self                               | When **true**, this user can send envelopes though the DocuSign Console.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                |
        | enableDSPro                      | Boolean | SysAdmin                                                       | When **true**, this user can send and manage envelopes from the DocuSign Desktop Client.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                |
        | enableSequentialSigningAPI       | Boolean | SysAdmin                                                       | When **true**, this user can define the routing order of recipients for envelopes sent using the DocuSign API.                                                                                                                                                                                                                                                                                                                                                                                                                                                                          |
        | enableSequentialSigningUI        | Boolean | SysAdmin                                                       | When **true**, this user can define the routing order of recipients while sending documents for signature.                                                                                                                                                                                                                                                                                                                                                                                                                                                                              |
        | enableSignerAttachments          | Boolean | Admin                                                          | When **true**, this user can add requests for attachments from signers while sending documents.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         |
        | enableSignOnPaperOverride        | Boolean | Admin                                                          | When **true**, this user can override the account setting that determines if signers may sign their documents on paper as an option to signing electronically.                                                                                                                                                                                                                                                                                                                                                                                                                          |
        | enableTransactionPoint           | Boolean | SysAdmin                                                       | When **true**, this user can select an envelope from their member console and upload the envelope documents to TransactionPoint.                                                                                                                                                                                                                                                                                                                                                                                                                                                        |
        | enableVaulting                   | Boolean | Admin                                                          | When **true**, this user can use electronic vaulting for documents|
        | locale                           | String  | Admin                                                          | Sets the default language for the user. The supported languages are: <ul> <li>Chinese Simplified: <code>zh_CN</code></li> <li>Chinese Traditional: <code>zh_TW</code></li> <li>Dutch: <code>nl</code></li> <li>English US: <code>en</code></li> <li>French: <code>fr</code></li> <li>German: <code>de</code></li> <li>Italian: <code>it</code></li> <li>Japanese: <code>ja</code></li> <li>Korean: <code>ko</code></li> <li>Portuguese: <code>pt</code></li> <li>Portuguese (Brazil): <code>pt_BR</code></li> <li>Russian: <code>ru</code></li> <li>Spanish: <code>es</code></li> </ul> |
        | powerFormAdmin                   | Boolean | Admin                                                          | When **true**, this user can create, manage and download the PowerForms documents.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      |
        | powerFormUser                    | Boolean | Admin                                                          | When **true**, this user can view and download PowerForms documents|
        | selfSignedRecipientEmailDocument | String  | Admin                                                          | Sets how self-signed documents are presented to the email recipients. This can only be changed if the <code>selfSignedRecipientEmailDocumentUserOverride</code> <a href="https://developers.docusign.com/esign-rest-api/reference/Accounts/Accounts/create/#account-settings">account setting</a> is <strong>true</strong>. This setting overrides the account setting. Possibe values are: <ul> <li><code>include_pdf</code>: A PDF of the completed document is attached to the email.</li> <li><code>include_link</code>: A secure link to the self-signed documents is included in the email.</li> </ul>                      |
        | vaultingMode                     | String  | Admin                                                          | Sets the electronic vaulting mode for the user. Possible values: <ul> <li><code>none</code></li> <li><code>estored</code></li> <li><code>electronic_original</code></li> </ul>                                                                                                                                                                                                                                                                                                                                                                                                          |

        [accountsettings]:  https://developers.docusign.com/esign-rest-api/reference/Accounts/Accounts/create/#account-settings
        [nameValue]:        #/definitions/nameValue
        [usersobject]:      #/definitions/Users
      operationId: Users_PostUsers
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/newUsersDefinition'
          application/xml:
            schema:
              $ref: '#/components/schemas/newUsersDefinition'
        required: false
      responses:
        "201":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/newUsersSummary'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: create
      x-ds-method: create
      x-ds-service: Users
      x-ds-in-sdk: true
      x-codegen-request-body-name: newUsersDefinition
    delete:
      tags:
      - Users
      summary: Removes users account privileges.
      description: |-
        This closes one or more user records in the account. Users are never deleted from an account, but closing a user prevents them from using account functions.

        The response returns whether the API execution was successful (200 - OK) or  if it failed. The response contains a user structure similar to the request and includes the user changes. If an error occurred during the DELETE operation for any of the users, the response for that user contains an `errorDetails` node with `errorCode` and `message` properties.
      operationId: Users_DeleteUsers
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: delete
        in: query
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/userInfoList'
          application/xml:
            schema:
              $ref: '#/components/schemas/userInfoList'
        required: false
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/usersResponse'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: delete
      x-ds-method: delete
      x-ds-service: Users
      x-ds-in-sdk: true
      x-codegen-request-body-name: userInfoList
  /v2/accounts/{accountId}/users/{userId}:
    get:
      tags:
      - Users
      summary: Gets the user information for a specified user.
      description: "Retrieves the user information for the specified user. \n\nTo\
        \ return additional user information that details the last login date, login\
        \ status, and the user's password expiration date, set the optional `additional_info`\
        \ query string parameter to **true**."
      operationId: User_GetUser
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: userId
        in: path
        description: "The user ID of the user being accessed. Generally this is the\
          \ user ID of the authenticated user, but if the authenticated user is an\
          \ Admin on the account, this may be another user the Admin user is accessing.\
          \ **Note**: For the [GET /v2/accounts/{accountId}/envelopes](https://developers.docusign.com/esign-rest-api/reference/Envelopes/Envelopes/listStatusChanges/#envelopesInformation)\
          \ method, the `user_id` query parameter is not implemented and should not\
          \ be used."
        required: true
        schema:
          type: string
      - name: additional_info
        in: query
        description: "When set to **true**, the full list of user information is returned\
          \ for each user in the account."
        schema:
          type: string
      - name: email
        in: query
        schema:
          type: string
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/userInformation'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: getInformation
      x-ds-method: get
      x-ds-service: Users
      x-ds-in-sdk: true
    put:
      tags:
      - Users
      summary: Updates the specified user information.
      operationId: User_PutUser
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: userId
        in: path
        description: "The user ID of the user being accessed. Generally this is the\
          \ user ID of the authenticated user, but if the authenticated user is an\
          \ Admin on the account, this may be another user the Admin user is accessing.\
          \ **Note**: For the [GET /v2/accounts/{accountId}/envelopes](https://developers.docusign.com/esign-rest-api/reference/Envelopes/Envelopes/listStatusChanges/#envelopesInformation)\
          \ method, the `user_id` query parameter is not implemented and should not\
          \ be used."
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/userInformation'
          application/xml:
            schema:
              $ref: '#/components/schemas/userInformation'
        required: false
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/userInformation'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: updateUser
      x-ds-method: update
      x-ds-service: Users
      x-ds-in-sdk: true
      x-codegen-request-body-name: userInformation
  /v2/accounts/{accountId}/users/{userId}/cloud_storage:
    get:
      tags:
      - CloudStorageProviders
      summary: Get the Cloud Storage Provider configuration for the specified user.
      description: |
        Retrieves the list of cloud storage providers enabled for the account and the configuration information for the user.
      operationId: CloudStorage_GetCloudStorageProviders
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: userId
        in: path
        description: "The user ID of the user being accessed. Generally this is the\
          \ user ID of the authenticated user, but if the authenticated user is an\
          \ Admin on the account, this may be another user the Admin user is accessing.\
          \ **Note**: For the [GET /v2/accounts/{accountId}/envelopes](https://developers.docusign.com/esign-rest-api/reference/Envelopes/Envelopes/listStatusChanges/#envelopesInformation)\
          \ method, the `user_id` query parameter is not implemented and should not\
          \ be used."
        required: true
        schema:
          type: string
      - name: redirectUrl
        in: query
        description: " The URL the user is redirected to after the cloud storage provider\
          \ authenticates the user. Using this will append the redirectUrl to the\
          \ authenticationUrl.\n\nThe redirectUrl is restricted to URLs in the docusign.com\
          \ or docusign.net domains.\n "
        schema:
          type: string
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/cloudStorageProviders'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: listProviders
      x-ds-method: list
      x-ds-service: CloudStorage
      x-ds-in-sdk: true
    post:
      tags:
      - CloudStorageProviders
      summary: Configures the redirect URL information  for one or more cloud storage
        providers for the specified user.
      description: Configures the redirect URL information  for one or more cloud
        storage providers for the specified user. The redirect URL is added to the
        authentication URL to complete the return route.
      operationId: CloudStorage_PostCloudStorage
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: userId
        in: path
        description: "The user ID of the user being accessed. Generally this is the\
          \ user ID of the authenticated user, but if the authenticated user is an\
          \ Admin on the account, this may be another user the Admin user is accessing.\
          \ **Note**: For the [GET /v2/accounts/{accountId}/envelopes](https://developers.docusign.com/esign-rest-api/reference/Envelopes/Envelopes/listStatusChanges/#envelopesInformation)\
          \ method, the `user_id` query parameter is not implemented and should not\
          \ be used."
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/cloudStorageProviders'
          application/xml:
            schema:
              $ref: '#/components/schemas/cloudStorageProviders'
        required: false
      responses:
        "201":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/cloudStorageProviders'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: createProvider
      x-ds-method: create
      x-ds-service: CloudStorage
      x-ds-in-sdk: true
      x-codegen-request-body-name: cloudStorageProviders
    delete:
      tags:
      - CloudStorageProviders
      summary: Deletes the user authentication information for one or more cloud storage
        providers.
      description: "Deletes the user authentication information for one or more cloud\
        \ storage providers. The next time the user tries to access the cloud storage\
        \ provider, they must pass normal authentication."
      operationId: CloudStorage_DeleteCloudStorageProviders
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: userId
        in: path
        description: "The user ID of the user being accessed. Generally this is the\
          \ user ID of the authenticated user, but if the authenticated user is an\
          \ Admin on the account, this may be another user the Admin user is accessing.\
          \ **Note**: For the [GET /v2/accounts/{accountId}/envelopes](https://developers.docusign.com/esign-rest-api/reference/Envelopes/Envelopes/listStatusChanges/#envelopesInformation)\
          \ method, the `user_id` query parameter is not implemented and should not\
          \ be used."
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/cloudStorageProviders'
          application/xml:
            schema:
              $ref: '#/components/schemas/cloudStorageProviders'
        required: false
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/cloudStorageProviders'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: deleteProviders
      x-ds-method: deleteList
      x-ds-service: CloudStorage
      x-ds-in-sdk: true
      x-codegen-request-body-name: cloudStorageProviders
  /v2/accounts/{accountId}/users/{userId}/cloud_storage/{serviceId}:
    get:
      tags:
      - CloudStorageProviders
      summary: Gets the specified Cloud Storage Provider configuration for the User.
      description: Retrieves the list of cloud storage providers enabled for the account
        and the configuration information for the user.
      operationId: CloudStorage_GetCloudStorage
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: serviceId
        in: path
        description: "The ID of the service to access. \n\nValid values are the service\
          \ name (\"Box\") or the numerical serviceId (\"4136\")."
        required: true
        schema:
          type: string
      - name: userId
        in: path
        description: "The user ID of the user being accessed. Generally this is the\
          \ user ID of the authenticated user, but if the authenticated user is an\
          \ Admin on the account, this may be another user the Admin user is accessing.\
          \ **Note**: For the [GET /v2/accounts/{accountId}/envelopes](https://developers.docusign.com/esign-rest-api/reference/Envelopes/Envelopes/listStatusChanges/#envelopesInformation)\
          \ method, the `user_id` query parameter is not implemented and should not\
          \ be used."
        required: true
        schema:
          type: string
      - name: redirectUrl
        in: query
        description: " The URL the user is redirected to after the cloud storage provider\
          \ authenticates the user. Using this will append the redirectUrl to the\
          \ authenticationUrl.\n\nThe redirectUrl is restricted to URLs in the docusign.com\
          \ or docusign.net domains.\n "
        schema:
          type: string
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/cloudStorageProviders'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: getProvider
      x-ds-method: get
      x-ds-service: CloudStorage
      x-ds-in-sdk: true
    delete:
      tags:
      - CloudStorageProviders
      summary: Deletes the user authentication information for the specified cloud
        storage provider.
      description: "Deletes the user authentication information for the specified\
        \ cloud storage provider. The next time the user tries to access the cloud\
        \ storage provider, they must pass normal authentication for this cloud storage\
        \ provider."
      operationId: CloudStorage_DeleteCloudStorage
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: serviceId
        in: path
        description: "The ID of the service to access. \n\nValid values are the service\
          \ name (\"Box\") or the numerical serviceId (\"4136\")."
        required: true
        schema:
          type: string
      - name: userId
        in: path
        description: "The user ID of the user being accessed. Generally this is the\
          \ user ID of the authenticated user, but if the authenticated user is an\
          \ Admin on the account, this may be another user the Admin user is accessing.\
          \ **Note**: For the [GET /v2/accounts/{accountId}/envelopes](https://developers.docusign.com/esign-rest-api/reference/Envelopes/Envelopes/listStatusChanges/#envelopesInformation)\
          \ method, the `user_id` query parameter is not implemented and should not\
          \ be used."
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/cloudStorageProviders'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: deleteProvider
      x-ds-method: delete
      x-ds-service: CloudStorage
      x-ds-in-sdk: true
  /v2/accounts/{accountId}/users/{userId}/cloud_storage/{serviceId}/folders:
    get:
      tags:
      - CloudStorage
      summary: Retrieves a list of all the items in a specified folder from the specified
        cloud storage provider.
      description: 'Retrieves a list of all the items in a specified folder from the
        specified cloud storage provider. '
      operationId: CloudStorageFolder_GetCloudStorageFolderAll
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: serviceId
        in: path
        description: "The ID of the service to access. \n\nValid values are the service\
          \ name (\"Box\") or the numerical serviceId (\"4136\")."
        required: true
        schema:
          type: string
      - name: userId
        in: path
        description: "The user ID of the user being accessed. Generally this is the\
          \ user ID of the authenticated user, but if the authenticated user is an\
          \ Admin on the account, this may be another user the Admin user is accessing.\
          \ **Note**: For the [GET /v2/accounts/{accountId}/envelopes](https://developers.docusign.com/esign-rest-api/reference/Envelopes/Envelopes/listStatusChanges/#envelopesInformation)\
          \ method, the `user_id` query parameter is not implemented and should not\
          \ be used."
        required: true
        schema:
          type: string
      - name: cloud_storage_folder_path
        in: query
        description: 'A comma separated list of folder IDs included in the request. '
        schema:
          type: string
      - name: count
        in: query
        description: "An optional value that sets how many items are included in the\
          \ response. \n\nThe default setting for this is 25. "
        schema:
          type: string
      - name: order
        in: query
        description: "An optional value that sets the direction order used to sort\
          \ the item list. \n\nValid values are: \n\n* asc = ascending sort order\n\
          * desc = descending sort order "
        schema:
          type: string
      - name: order_by
        in: query
        description: "An optional value that sets the file attribute used to sort\
          \ the item list. \n\nValid values are: \n\n* modified\n* name  "
        schema:
          type: string
      - name: search_text
        in: query
        schema:
          type: string
      - name: start_position
        in: query
        description: 'Indicates the starting point of the first item included in the
          response set. It uses a 0-based index. The default setting for this is 0.  '
        schema:
          type: string
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/externalFolder'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: listFolders
      x-ds-method: listFolders
      x-ds-service: CloudStorage
      x-ds-in-sdk: true
  /v2/accounts/{accountId}/users/{userId}/cloud_storage/{serviceId}/folders/{folderId}:
    get:
      tags:
      - CloudStorage
      summary: Gets a list of all the items from the specified cloud storage provider.
      description: Retrieves a list of all the items in all  the folders associated
        with the user from the specified cloud storage provider. You can limit the
        scope of the returned items by providing a comma separated list of folder
        IDs in the request.
      operationId: CloudStorageFolder_GetCloudStorageFolder
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: folderId
        in: path
        description: The ID of the folder being accessed.
        required: true
        schema:
          type: string
      - name: serviceId
        in: path
        description: "The ID of the service to access. \n\nValid values are the service\
          \ name (\"Box\") or the numerical serviceId (\"4136\")."
        required: true
        schema:
          type: string
      - name: userId
        in: path
        description: "The user ID of the user being accessed. Generally this is the\
          \ user ID of the authenticated user, but if the authenticated user is an\
          \ Admin on the account, this may be another user the Admin user is accessing.\
          \ **Note**: For the [GET /v2/accounts/{accountId}/envelopes](https://developers.docusign.com/esign-rest-api/reference/Envelopes/Envelopes/listStatusChanges/#envelopesInformation)\
          \ method, the `user_id` query parameter is not implemented and should not\
          \ be used."
        required: true
        schema:
          type: string
      - name: cloud_storage_folder_path
        in: query
        schema:
          type: string
      - name: count
        in: query
        description: "An optional value that sets how many items are included in the\
          \ response. \n\nThe default setting for this is 25. "
        schema:
          type: string
      - name: order
        in: query
        description: "An optional value that sets the direction order used to sort\
          \ the item list. \n\nValid values are: \n\n* asc = ascending sort order\n\
          * desc = descending sort order "
        schema:
          type: string
      - name: order_by
        in: query
        description: "An optional value that sets the file attribute used to sort\
          \ the item list. \n\nValid values are: \n\n* modified\n* name  "
        schema:
          type: string
      - name: search_text
        in: query
        schema:
          type: string
      - name: start_position
        in: query
        description: 'Indicates the starting point of the first item included in the
          response set. It uses a 0-based index. The default setting for this is 0.  '
        schema:
          type: string
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/externalFolder'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: list
      x-ds-method: list
      x-ds-service: CloudStorage
      x-ds-in-sdk: true
  /v2/accounts/{accountId}/users/{userId}/custom_settings:
    get:
      tags:
      - UserCustomSettings
      summary: Retrieves the custom user settings for a specified user.
      description: |-
        Retrieves a list of custom user settings for a single user.

        Custom settings provide a flexible way to store and retrieve custom user information that can be used in your own system.

        ###### Note: Custom user settings are not the same as user account settings.

        ###Getting Grouped Custom User Settings###

        If the custom user settings you want to retrieve are grouped, you must include the following information in the header, after Content-Type, in the request:

        `X-DocuSign-User-Settings-Key:group_name`

        Where the `group_name` is your designated name for the group of customer user settings.

        If the extra header information is not included, only the custom user settings that were added without a group are retrieved.
      operationId: UserCustomSettings_GetCustomSettings
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: userId
        in: path
        description: "The user ID of the user being accessed. Generally this is the\
          \ user ID of the authenticated user, but if the authenticated user is an\
          \ Admin on the account, this may be another user the Admin user is accessing.\
          \ **Note**: For the [GET /v2/accounts/{accountId}/envelopes](https://developers.docusign.com/esign-rest-api/reference/Envelopes/Envelopes/listStatusChanges/#envelopesInformation)\
          \ method, the `user_id` query parameter is not implemented and should not\
          \ be used."
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/customSettingsInformation'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: listCustomSettings
      x-ds-method: list
      x-ds-service: Users
      x-ds-in-sdk: true
    put:
      tags:
      - UserCustomSettings
      summary: Adds or updates custom user settings for the specified user.
      description: |-
        Adds or updates custom user settings for the specified user.

        ###### Note: Custom user settings are not the same as user account settings.

        Custom settings provide a flexible way to store and retrieve custom user information that you can use in your own system.

        **Important**: There is a limit on the size for all the custom user settings for a single user. The limit is 4,000 characters, which includes the XML and JSON structure for the settings.

        ### Grouping Custom User Settings ###

        You can group custom user settings when adding them. Grouping allows you to retrieve settings that are in a specific group, instead of retrieving all the user custom settings.

        To group custom user settings, add the following information in the header, after Content-Type:

        `X-DocuSign-User-Settings-Key:group_name`

        Where the `group_name` is your designated name for the group of customer user settings. Grouping is shown in the Example Request Body below.

        When getting or deleting grouped custom user settings, you must include the extra header information.

        Grouping custom user settings is not required and if the extra header information is not included, the custom user settings are added normally and can be retrieved or deleted without including the additional header.
      operationId: UserCustomSettings_PutCustomSettings
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: userId
        in: path
        description: "The user ID of the user being accessed. Generally this is the\
          \ user ID of the authenticated user, but if the authenticated user is an\
          \ Admin on the account, this may be another user the Admin user is accessing.\
          \ **Note**: For the [GET /v2/accounts/{accountId}/envelopes](https://developers.docusign.com/esign-rest-api/reference/Envelopes/Envelopes/listStatusChanges/#envelopesInformation)\
          \ method, the `user_id` query parameter is not implemented and should not\
          \ be used."
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/customSettingsInformation'
          application/xml:
            schema:
              $ref: '#/components/schemas/customSettingsInformation'
        required: false
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/customSettingsInformation'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: updateCustomSettings
      x-ds-method: update
      x-ds-service: Users
      x-ds-in-sdk: true
      x-codegen-request-body-name: customSettingsInformation
    delete:
      tags:
      - UserCustomSettings
      summary: Deletes custom user settings for a specified user.
      description: |-
        Deletes the specified custom user settings for a single user.

        ###Deleting Grouped Custom User Settings###

        If the custom user settings you want to delete are grouped, you must include the following information in the header, after Content-Type, in the request:

        `X-DocuSign-User-Settings-Key:group_name`

        Where the `group_name` is your designated name for the group of customer user settings.

        If the extra header information is not included, only the custom user settings that were added without a group are deleted.
      operationId: UserCustomSettings_DeleteCustomSettings
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: userId
        in: path
        description: "The user ID of the user being accessed. Generally this is the\
          \ user ID of the authenticated user, but if the authenticated user is an\
          \ Admin on the account, this may be another user the Admin user is accessing.\
          \ **Note**: For the [GET /v2/accounts/{accountId}/envelopes](https://developers.docusign.com/esign-rest-api/reference/Envelopes/Envelopes/listStatusChanges/#envelopesInformation)\
          \ method, the `user_id` query parameter is not implemented and should not\
          \ be used."
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/customSettingsInformation'
          application/xml:
            schema:
              $ref: '#/components/schemas/customSettingsInformation'
        required: false
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/customSettingsInformation'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: deleteCustomSettings
      x-ds-method: delete
      x-ds-service: Users
      x-ds-in-sdk: true
      x-codegen-request-body-name: customSettingsInformation
  /v2/accounts/{accountId}/users/{userId}/profile:
    get:
      tags:
      - UserProfiles
      summary: Retrieves the user profile for a specified user.
      description: |-
        Retrieves the user profile information, the privacy settings and personal information (address, phone number, etc.) for the specified user.

        The userId parameter specified in the endpoint must match the authenticated user's user ID and the user must be a member of the specified account.
      operationId: UserProfile_GetProfile
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: userId
        in: path
        description: "The user ID of the user being accessed. Generally this is the\
          \ user ID of the authenticated user, but if the authenticated user is an\
          \ Admin on the account, this may be another user the Admin user is accessing.\
          \ **Note**: For the [GET /v2/accounts/{accountId}/envelopes](https://developers.docusign.com/esign-rest-api/reference/Envelopes/Envelopes/listStatusChanges/#envelopesInformation)\
          \ method, the `user_id` query parameter is not implemented and should not\
          \ be used."
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/userProfile'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: getProfile
      x-ds-method: get
      x-ds-service: Users
      x-ds-in-sdk: true
    put:
      tags:
      - UserProfiles
      summary: Updates the user profile information for the specified user.
      description: |-
        Updates the user's detail information, profile information, privacy settings, and personal information in the user ID card.

        You can also change a user's name by changing the information in the `userDetails` property. When changing a user's name, you can either change the information in the `userName` property OR change the information in `firstName`, `middleName`, `lastName, suffixName`, and `title` properties. Changes to `firstName`, `middleName`, `lastName`, `suffixName`, and `title` properties take precedence over changes to the `userName` property.
      operationId: UserProfile_PutProfile
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: userId
        in: path
        description: "The user ID of the user being accessed. Generally this is the\
          \ user ID of the authenticated user, but if the authenticated user is an\
          \ Admin on the account, this may be another user the Admin user is accessing.\
          \ **Note**: For the [GET /v2/accounts/{accountId}/envelopes](https://developers.docusign.com/esign-rest-api/reference/Envelopes/Envelopes/listStatusChanges/#envelopesInformation)\
          \ method, the `user_id` query parameter is not implemented and should not\
          \ be used."
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/userProfile'
          application/xml:
            schema:
              $ref: '#/components/schemas/userProfile'
        required: false
      responses:
        "200":
          description: Successful response.
          content: {}
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: updateProfile
      x-ds-method: update
      x-ds-service: Users
      x-ds-in-sdk: true
      x-codegen-request-body-name: userProfile
  /v2/accounts/{accountId}/users/{userId}/profile/image:
    get:
      tags:
      - Users
      summary: Retrieves the user profile image for the specified user.
      description: |-
        Retrieves the user profile picture for the specified user. The image is returned in the same format as uploaded.

        The userId parameter specified in the endpoint must match the authenticated user's user ID and the user must be a member of the specified account.

        If successful, the response returns a 200 - OK and the user profile image.
      operationId: UserProfileImage_GetUserProfileImage
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: userId
        in: path
        description: "The user ID of the user being accessed. Generally this is the\
          \ user ID of the authenticated user, but if the authenticated user is an\
          \ Admin on the account, this may be another user the Admin user is accessing.\
          \ **Note**: For the [GET /v2/accounts/{accountId}/envelopes](https://developers.docusign.com/esign-rest-api/reference/Envelopes/Envelopes/listStatusChanges/#envelopesInformation)\
          \ method, the `user_id` query parameter is not implemented and should not\
          \ be used."
        required: true
        schema:
          type: string
      - name: encoding
        in: query
        schema:
          type: string
      responses:
        "200":
          description: Successful response.
          content:
            image/gif:
              schema:
                type: string
                format: binary
        "400":
          description: Error encountered.
          content:
            image/gif:
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: getProfileImage
      x-ds-method: getProfileImage
      x-ds-service: Users
      x-ds-in-sdk: true
    put:
      tags:
      - Users
      summary: Updates the user profile image for a specified user.
      description: |-
        Updates the user profile image by uploading an image to the user profile.

        The supported image formats are: gif, png, jpeg, and bmp. The file must be less than 200K. For best viewing results, DocuSign recommends that the image is no more than 79 pixels wide and high.
      operationId: UserProfileImage_PutUserProfileImage
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: userId
        in: path
        description: "The user ID of the user being accessed. Generally this is the\
          \ user ID of the authenticated user, but if the authenticated user is an\
          \ Admin on the account, this may be another user the Admin user is accessing.\
          \ **Note**: For the [GET /v2/accounts/{accountId}/envelopes](https://developers.docusign.com/esign-rest-api/reference/Envelopes/Envelopes/listStatusChanges/#envelopesInformation)\
          \ method, the `user_id` query parameter is not implemented and should not\
          \ be used."
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful response.
          content: {}
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: updateProfileImage
      x-ds-method: updateProfileImage
      x-ds-service: Users
      x-ds-in-sdk: true
    delete:
      tags:
      - Users
      summary: Deletes the user profile image for the specified user.
      description: |-
        Deletes the user profile image from the  specified user's profile.

        The userId parameter specified in the endpoint must match the authenticated user's user ID and the user must be a member of the specified account.
      operationId: UserProfileImage_DeleteUserProfileImage
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: userId
        in: path
        description: "The user ID of the user being accessed. Generally this is the\
          \ user ID of the authenticated user, but if the authenticated user is an\
          \ Admin on the account, this may be another user the Admin user is accessing.\
          \ **Note**: For the [GET /v2/accounts/{accountId}/envelopes](https://developers.docusign.com/esign-rest-api/reference/Envelopes/Envelopes/listStatusChanges/#envelopesInformation)\
          \ method, the `user_id` query parameter is not implemented and should not\
          \ be used."
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful response.
          content: {}
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: deleteProfileImage
      x-ds-method: deleteProfileImage
      x-ds-service: Users
      x-ds-in-sdk: true
  /v2/accounts/{accountId}/users/{userId}/settings:
    get:
      tags:
      - Users
      summary: Gets the user account settings for a specified user.
      description: |-
        Retrieves a list of the account settings and email notification information for the specified user.

        The response returns the account setting name/value information and the email notification settings for the specified user. For more information about the different user settings, see the [ML:userSettings list].
      operationId: UserSettings_GetUserSettings
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: userId
        in: path
        description: "The user ID of the user being accessed. Generally this is the\
          \ user ID of the authenticated user, but if the authenticated user is an\
          \ Admin on the account, this may be another user the Admin user is accessing.\
          \ **Note**: For the [GET /v2/accounts/{accountId}/envelopes](https://developers.docusign.com/esign-rest-api/reference/Envelopes/Envelopes/listStatusChanges/#envelopesInformation)\
          \ method, the `user_id` query parameter is not implemented and should not\
          \ be used."
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/userSettingsInformation'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: getSettings
      x-ds-method: getSettings
      x-ds-service: Users
      x-ds-in-sdk: true
    put:
      tags:
      - Users
      summary: Updates the user account settings for a specified user.
      description: Updates the account settings list and email notification types
        for the specified user.
      operationId: UserSettings_PutUserSettings
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: userId
        in: path
        description: "The user ID of the user being accessed. Generally this is the\
          \ user ID of the authenticated user, but if the authenticated user is an\
          \ Admin on the account, this may be another user the Admin user is accessing.\
          \ **Note**: For the [GET /v2/accounts/{accountId}/envelopes](https://developers.docusign.com/esign-rest-api/reference/Envelopes/Envelopes/listStatusChanges/#envelopesInformation)\
          \ method, the `user_id` query parameter is not implemented and should not\
          \ be used."
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/userSettingsInformation'
          application/xml:
            schema:
              $ref: '#/components/schemas/userSettingsInformation'
        required: false
      responses:
        "200":
          description: Successful response.
          content: {}
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: updateSettings
      x-ds-method: updateSettings
      x-ds-service: Users
      x-ds-in-sdk: true
      x-codegen-request-body-name: userSettingsInformation
  /v2/accounts/{accountId}/users/{userId}/signatures:
    get:
      tags:
      - UserSignatures
      summary: Retrieves a list of user signature definitions for a specified user.
      description: "Retrieves the signature definitions for the specified user.\n\n\
        The userId parameter specified in the endpoint must match the authenticated\
        \ user's user ID and the user must be a member of the account.\n\nThe `signatureId`\
        \ parameter accepts a signature ID or a signature name. DocuSign recommends\
        \ you use signature ID (`signatureId`), since some names contain characters\
        \ that do not properly encode into a URL. If you use the user name, it is\
        \ likely that the name includes spaces. In that case, URL encode the name\
        \ before using it in the endpoint. \n\nFor example encode \"Bob Smith\" as\
        \ \"Bob%20Smith\"."
      operationId: UserSignatures_GetUserSignatures
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: userId
        in: path
        description: "The user ID of the user being accessed. Generally this is the\
          \ user ID of the authenticated user, but if the authenticated user is an\
          \ Admin on the account, this may be another user the Admin user is accessing.\
          \ **Note**: For the [GET /v2/accounts/{accountId}/envelopes](https://developers.docusign.com/esign-rest-api/reference/Envelopes/Envelopes/listStatusChanges/#envelopesInformation)\
          \ method, the `user_id` query parameter is not implemented and should not\
          \ be used."
        required: true
        schema:
          type: string
      - name: stamp_type
        in: query
        schema:
          type: string
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/userSignaturesInformation'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: listSignatures
      x-ds-method: list
      x-ds-service: Users
      x-ds-in-sdk: true
    put:
      tags:
      - UserSignatures
      summary: Adds/updates a user signature.
      operationId: UserSignatures_PutUserSignature
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: userId
        in: path
        description: "The user ID of the user being accessed. Generally this is the\
          \ user ID of the authenticated user, but if the authenticated user is an\
          \ Admin on the account, this may be another user the Admin user is accessing.\
          \ **Note**: For the [GET /v2/accounts/{accountId}/envelopes](https://developers.docusign.com/esign-rest-api/reference/Envelopes/Envelopes/listStatusChanges/#envelopesInformation)\
          \ method, the `user_id` query parameter is not implemented and should not\
          \ be used."
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/userSignaturesInformation'
          application/xml:
            schema:
              $ref: '#/components/schemas/userSignaturesInformation'
        required: false
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/userSignaturesInformation'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: updateSignatures
      x-ds-method: updateList
      x-ds-service: Users
      x-ds-in-sdk: true
      x-codegen-request-body-name: userSignaturesInformation
    post:
      tags:
      - UserSignatures
      summary: Adds user Signature and initials images to a Signature.
      description: "Adds a user signature image and/or user initials image to the\
        \ specified user. \n\nThe userId property specified in the endpoint must match\
        \ the authenticated user's userId and the user must be a member of the account.\n\
        \nThe rules and processes associated with this are:\n\n* If Content-Type is\
        \ set to application/json, then the default behavior for creating a default\
        \ signature image, based on the name and a DocuSign font, is used.\n* If Content-Type\
        \ is set to multipart/form-data, then the request must contain a first part\
        \ with the user signature information, followed by parts that contain the\
        \ images.\n\nFor each Image part, the Content-Disposition header has a \"\
        filename\" value that is used to map to the `signatureName` and/or `signatureInitials`\
        \ properties in the JSON to the image. \n\nFor example: \n`Content-Disposition:\
        \ file; filename=\"Ron Test20121127083900\"`\n\nIf no matching image (by filename\
        \ value) is found, then the image is not set. One, both, or neither of the\
        \ signature and initials images can be set with this call.\n\nThe Content-Transfer-Encoding:\
        \ base64 header, set in the header for the part containing the image, can\
        \ be set to indicate that the images are formatted as base64 instead of as\
        \ binary.\n\nIf successful, 200-OK is returned, and a JSON structure containing\
        \ the signature information is provided, note that the signatureId can change\
        \ with each API POST, PUT, or DELETE since the changes to the signature structure\
        \ cause the current signature to be closed, and a new signature record to\
        \ be created."
      operationId: UserSignatures_PostUserSignatures
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: userId
        in: path
        description: "The user ID of the user being accessed. Generally this is the\
          \ user ID of the authenticated user, but if the authenticated user is an\
          \ Admin on the account, this may be another user the Admin user is accessing.\
          \ **Note**: For the [GET /v2/accounts/{accountId}/envelopes](https://developers.docusign.com/esign-rest-api/reference/Envelopes/Envelopes/listStatusChanges/#envelopesInformation)\
          \ method, the `user_id` query parameter is not implemented and should not\
          \ be used."
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/userSignaturesInformation'
          application/xml:
            schema:
              $ref: '#/components/schemas/userSignaturesInformation'
        required: false
      responses:
        "201":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/userSignaturesInformation'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: createSignatures
      x-ds-method: create
      x-ds-service: Users
      x-ds-in-sdk: true
      x-codegen-request-body-name: userSignaturesInformation
  /v2/accounts/{accountId}/users/{userId}/signatures/{signatureId}:
    get:
      tags:
      - UserSignatures
      summary: Gets the user signature information for the specified user.
      description: "Retrieves the structure of a single signature with a known signature\
        \ name.\n\nThe userId specified in the endpoint must match the authenticated\
        \ user's user ID and the user must be a member of the account.\n\nThe `signatureId`\
        \ parameter accepts a signature ID or a signature name. DocuSign recommends\
        \ you use signature ID (`signatureId`), since some names contain characters\
        \ that do not properly encode into a URL. If you use the user name, it is\
        \ likely that the name includes spaces. In that case, URL encode the name\
        \ before using it in the endpoint. \n\nFor example encode \"Bob Smith\" as\
        \ \"Bob%20Smith\"."
      operationId: UserSignatures_GetUserSignature
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: signatureId
        in: path
        description: The ID of the signature being accessed.
        required: true
        schema:
          type: string
      - name: userId
        in: path
        description: "The user ID of the user being accessed. Generally this is the\
          \ user ID of the authenticated user, but if the authenticated user is an\
          \ Admin on the account, this may be another user the Admin user is accessing.\
          \ **Note**: For the [GET /v2/accounts/{accountId}/envelopes](https://developers.docusign.com/esign-rest-api/reference/Envelopes/Envelopes/listStatusChanges/#envelopesInformation)\
          \ method, the `user_id` query parameter is not implemented and should not\
          \ be used."
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/userSignature'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: getSignature
      x-ds-method: get
      x-ds-service: Users
      x-ds-in-sdk: true
    put:
      tags:
      - UserSignatures
      summary: Updates the user signature for a specified user.
      description: "Creates, or updates, the signature font and initials for the specified\
        \ user. When creating a signature, you use this resource to create the signature\
        \ name and then add the signature and initials images into the signature.\n\
        \n###### Note: This will also create a default signature for the user when\
        \ one does not exist.\n\nThe userId property specified in the endpoint must\
        \ match the authenticated user's user ID and the user must be a member of\
        \ the account.\n\nThe `signatureId` parameter accepts a signature ID. DocuSign\
        \ recommends you use signature ID (`signatureId`), since some names contain\
        \ characters that do not properly encode into a URL. If you use the user name,\
        \ it is likely that the name includes spaces. In that case, URL encode the\
        \ name before using it in the endpoint. \n\nFor example encode \"Bob Smith\"\
        \ as \"Bob%20Smith\"."
      operationId: UserSignatures_PutUserSignatureById
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: signatureId
        in: path
        description: The ID of the signature being accessed.
        required: true
        schema:
          type: string
      - name: userId
        in: path
        description: "The user ID of the user being accessed. Generally this is the\
          \ user ID of the authenticated user, but if the authenticated user is an\
          \ Admin on the account, this may be another user the Admin user is accessing.\
          \ **Note**: For the [GET /v2/accounts/{accountId}/envelopes](https://developers.docusign.com/esign-rest-api/reference/Envelopes/Envelopes/listStatusChanges/#envelopesInformation)\
          \ method, the `user_id` query parameter is not implemented and should not\
          \ be used."
        required: true
        schema:
          type: string
      - name: close_existing_signature
        in: query
        description: "When set to **true**, closes the current signature."
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/userSignatureDefinition'
          application/xml:
            schema:
              $ref: '#/components/schemas/userSignatureDefinition'
        required: false
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/userSignature'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: updateSignature
      x-ds-method: update
      x-ds-service: Users
      x-ds-in-sdk: true
      x-codegen-request-body-name: userSignatureDefinition
    delete:
      tags:
      - UserSignatures
      summary: Removes removes signature information for the specified user.
      description: "Removes the signature information for the user.\n\nThe userId\
        \ parameter specified in the endpoint must match the authenticated user's\
        \ user ID and the user must be a member of the account.\n\nThe `signatureId`\
        \ accepts a signature ID or a signature name. DocuSign recommends you use\
        \ signature ID (`signatureId`), since some names contain characters that do\
        \ not properly encode into a URL. If you use the user name, it is likely that\
        \ the name includes spaces. In that case, URL encode the name before using\
        \ it in the endpoint. \n\nFor example encode \"Bob Smith\" as \"Bob%20Smith\"\
        ."
      operationId: UserSignatures_DeleteUserSignature
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: signatureId
        in: path
        description: The ID of the signature being accessed.
        required: true
        schema:
          type: string
      - name: userId
        in: path
        description: "The user ID of the user being accessed. Generally this is the\
          \ user ID of the authenticated user, but if the authenticated user is an\
          \ Admin on the account, this may be another user the Admin user is accessing.\
          \ **Note**: For the [GET /v2/accounts/{accountId}/envelopes](https://developers.docusign.com/esign-rest-api/reference/Envelopes/Envelopes/listStatusChanges/#envelopesInformation)\
          \ method, the `user_id` query parameter is not implemented and should not\
          \ be used."
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful response.
          content: {}
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: deleteSignature
      x-ds-method: delete
      x-ds-service: Users
      x-ds-in-sdk: true
  /v2/accounts/{accountId}/users/{userId}/signatures/{signatureId}/{imageType}:
    get:
      tags:
      - UserSignatures
      summary: Retrieves the user initials image or the  user signature image for
        the specified user.
      description: "Retrieves the specified initials image or signature image for\
        \ the specified user. The image is returned in the same format as uploaded.\
        \ In the request you can specify if the chrome (the added line and identifier\
        \ around the initial image) is returned with the image.\n\nThe userId property\
        \ specified in the endpoint must match the authenticated user's user ID and\
        \ the user must be a member of the account.\n\nThe `signatureId` parameter\
        \ accepts a signature ID or a signature name. DocuSign recommends you use\
        \ signature ID (`signatureId`), since some names contain characters that do\
        \ not properly encode into a URL. If you use the user name, it is likely that\
        \ the name includes spaces. In that case, URL encode the name before using\
        \ it in the endpoint. \n\nFor example encode \"Bob Smith\" as \"Bob%20Smith\"\
        .\n\n###### Note: Older envelopes might only have chromed images. If getting\
        \ the non-chromed image fails, try getting the chromed image."
      operationId: UserSignatures_GetUserSignatureImage
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: imageType
        in: path
        description: One of **signature_image** or **initials_image**.
        required: true
        schema:
          type: string
      - name: signatureId
        in: path
        description: The ID of the signature being accessed.
        required: true
        schema:
          type: string
      - name: userId
        in: path
        description: "The user ID of the user being accessed. Generally this is the\
          \ user ID of the authenticated user, but if the authenticated user is an\
          \ Admin on the account, this may be another user the Admin user is accessing.\
          \ **Note**: For the [GET /v2/accounts/{accountId}/envelopes](https://developers.docusign.com/esign-rest-api/reference/Envelopes/Envelopes/listStatusChanges/#envelopesInformation)\
          \ method, the `user_id` query parameter is not implemented and should not\
          \ be used."
        required: true
        schema:
          type: string
      - name: include_chrome
        in: query
        schema:
          type: string
      responses:
        "200":
          description: Successful response.
          content:
            image/gif:
              schema:
                type: string
                format: binary
        "400":
          description: Error encountered.
          content:
            image/gif:
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: getSignatureImage
      x-ds-method: getImage
      x-ds-service: Users
      x-ds-in-sdk: true
    put:
      tags:
      - UserSignatures
      summary: Updates the user signature image or user initials image for the specified
        user.
      description: "Updates the user signature image or user initials image for the\
        \ specified user. The supported image formats for this file are: gif, png,\
        \ jpeg, and bmp. The file must be less than 200K.\n\nThe userId property specified\
        \ in the endpoint must match the authenticated user's user ID and the user\
        \ must be a member of the account.\n\nThe `signatureId` parameter accepts\
        \ a signature ID or a signature name. DocuSign recommends you use signature\
        \ ID (`signatureId`), since some names contain characters that do not properly\
        \ encode into a URL. If you use the user name, it is likely that the name\
        \ includes spaces. In that case, URL encode the name before using it in the\
        \ endpoint. \n\nFor example encode \"Bob Smith\" as \"Bob%20Smith\".\n"
      operationId: UserSignatures_PutUserSignatureImage
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: imageType
        in: path
        description: One of **signature_image** or **initials_image**.
        required: true
        schema:
          type: string
      - name: signatureId
        in: path
        description: The ID of the signature being accessed.
        required: true
        schema:
          type: string
      - name: userId
        in: path
        description: "The user ID of the user being accessed. Generally this is the\
          \ user ID of the authenticated user, but if the authenticated user is an\
          \ Admin on the account, this may be another user the Admin user is accessing.\
          \ **Note**: For the [GET /v2/accounts/{accountId}/envelopes](https://developers.docusign.com/esign-rest-api/reference/Envelopes/Envelopes/listStatusChanges/#envelopesInformation)\
          \ method, the `user_id` query parameter is not implemented and should not\
          \ be used."
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/userSignature'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: updateSignatureImage
      x-ds-method: updateImage
      x-ds-service: Users
      x-ds-in-sdk: true
    delete:
      tags:
      - UserSignatures
      summary: Deletes the user initials image or the  user signature image for the
        specified user.
      description: "Deletes the specified initials image or signature image for the\
        \ specified user.\n\nThe function deletes one or the other of the image types,\
        \ to delete both the initials image and signature image you must call the\
        \ endpoint twice.\n\nThe userId parameter specified in the endpoint must match\
        \ the authenticated user's user ID and the user must be a member of the account.\n\
        \nThe `signatureId` parameter accepts a signature ID or a signature name.\
        \ DocuSign recommends you use signature ID (`signatureId`), since some names\
        \ contain characters that do not properly encode into a URL. If you use the\
        \ user name, it is likely that the name includes spaces. In that case, URL\
        \ encode the name before using it in the endpoint. \n\nFor example encode\
        \ \"Bob Smith\" as \"Bob%20Smith\"."
      operationId: UserSignatures_DeleteUserSignatureImage
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: imageType
        in: path
        description: One of **signature_image** or **initials_image**.
        required: true
        schema:
          type: string
      - name: signatureId
        in: path
        description: The ID of the signature being accessed.
        required: true
        schema:
          type: string
      - name: userId
        in: path
        description: "The user ID of the user being accessed. Generally this is the\
          \ user ID of the authenticated user, but if the authenticated user is an\
          \ Admin on the account, this may be another user the Admin user is accessing.\
          \ **Note**: For the [GET /v2/accounts/{accountId}/envelopes](https://developers.docusign.com/esign-rest-api/reference/Envelopes/Envelopes/listStatusChanges/#envelopesInformation)\
          \ method, the `user_id` query parameter is not implemented and should not\
          \ be used."
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/userSignature'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: deleteSignatureImage
      x-ds-method: deleteImage
      x-ds-service: Users
      x-ds-in-sdk: true
  /v2/accounts/{accountId}/users/{userId}/social:
    get:
      tags:
      - UserSocialAccountLogins
      summary: Gets a list of a user's social accounts.
      description: Retrieves a list of social accounts linked to a user's account.
      operationId: UserSocialLogin_GetUserSocialLogin
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: userId
        in: path
        description: "The user ID of the user being accessed. Generally this is the\
          \ user ID of the authenticated user, but if the authenticated user is an\
          \ Admin on the account, this may be another user the Admin user is accessing.\
          \ **Note**: For the [GET /v2/accounts/{accountId}/envelopes](https://developers.docusign.com/esign-rest-api/reference/Envelopes/Envelopes/listStatusChanges/#envelopesInformation)\
          \ method, the `user_id` query parameter is not implemented and should not\
          \ be used."
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/userSocialIdResult'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: listSocialLogins
      x-ds-method: list
      x-ds-service: Authentication
      x-ds-in-sdk: true
    put:
      tags:
      - UserSocialAccountLogins
      summary: Adds social account for a user.
      description: Adds a new social account to a user's account.
      operationId: UserSocialLogin_PutUserSocialLogin
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: userId
        in: path
        description: "The user ID of the user being accessed. Generally this is the\
          \ user ID of the authenticated user, but if the authenticated user is an\
          \ Admin on the account, this may be another user the Admin user is accessing.\
          \ **Note**: For the [GET /v2/accounts/{accountId}/envelopes](https://developers.docusign.com/esign-rest-api/reference/Envelopes/Envelopes/listStatusChanges/#envelopesInformation)\
          \ method, the `user_id` query parameter is not implemented and should not\
          \ be used."
        required: true
        schema:
          type: string
      requestBody:
        description: "Contains properties that map a DocuSign user to a social account\
          \ (Facebook, Yahoo, etc.)"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/socialAccountInformation'
          application/xml:
            schema:
              $ref: '#/components/schemas/socialAccountInformation'
        required: false
      responses:
        "200":
          description: Successful response.
          content: {}
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: updateSocialLogin
      x-ds-method: update
      x-ds-service: Authentication
      x-ds-in-sdk: true
      x-codegen-request-body-name: socialAccountInformation
    delete:
      tags:
      - UserSocialAccountLogins
      summary: Deletes user's social account.
      description: Deletes a social account from a use's account.
      operationId: UserSocialLogin_DeleteUserSocialLogin
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: userId
        in: path
        description: "The user ID of the user being accessed. Generally this is the\
          \ user ID of the authenticated user, but if the authenticated user is an\
          \ Admin on the account, this may be another user the Admin user is accessing.\
          \ **Note**: For the [GET /v2/accounts/{accountId}/envelopes](https://developers.docusign.com/esign-rest-api/reference/Envelopes/Envelopes/listStatusChanges/#envelopesInformation)\
          \ method, the `user_id` query parameter is not implemented and should not\
          \ be used."
        required: true
        schema:
          type: string
      requestBody:
        description: "Contains properties that map a DocuSign user to a social account\
          \ (Facebook, Yahoo, etc.)"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/socialAccountInformation'
          application/xml:
            schema:
              $ref: '#/components/schemas/socialAccountInformation'
        required: false
      responses:
        "200":
          description: Successful response.
          content: {}
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: deleteSocialLogin
      x-ds-method: delete
      x-ds-service: Authentication
      x-ds-in-sdk: true
      x-codegen-request-body-name: socialAccountInformation
  /v2/accounts/{accountId}/views/console:
    post:
      tags:
      - EnvelopeViews
      summary: Returns a URL to the authentication view UI.
      description: Returns a URL that allows you to embed the authentication view
        of the DocuSign UI in your applications.
      operationId: Views_PostAccountConsoleView
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/consoleViewRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/consoleViewRequest'
        required: false
      responses:
        "201":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/EnvelopeViews'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: createConsoleView
      x-ds-method: createConsole
      x-ds-service: Envelopes
      x-ds-in-sdk: true
      x-ds-examples:
      - description: |+
          The response contains the URL
          of the the account's cosole.

          The request body contains
          a `returnUrl`.
          This is the URL
          that the DocuSign platform
          will redirect the user to
          when the view is closed.

        direction: both
        format: json
        response:
          url: https://demo.docusign.net/Member/StartInSession.aspx?StartConsole=1&t=644ea697-2541-46ea-a8a5-d95a5c23340b&accountid=624e3e00-36cb-4bcf-a4af-43918c520dab
        request:
          returnUrl: https://dsapp.example.com/return/from/console/view
        style: custom
        title: Getting a Console View URL and Setting a Return URL
      x-codegen-request-body-name: consoleViewRequest
  /v2/accounts/{accountId}/watermark:
    get:
      tags:
      - AccountWatermarks
      summary: Get watermark information.
      operationId: Watermark_GetWatermark
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/watermark'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: getWatermark
      x-ds-method: get
      x-ds-service: Accounts
      x-ds-in-sdk: true
    put:
      tags:
      - AccountWatermarks
      summary: Update watermark information.
      operationId: Watermark_PutWatermark
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      requestBody:
        description: "When set to **true**, the account has the watermark feature\
          \ enabled, and the envelope is not complete, the watermark for the account\
          \ is added to the PDF documents. This option can remove the watermark. "
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/watermark'
          application/xml:
            schema:
              $ref: '#/components/schemas/watermark'
        required: false
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/watermark'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: updateWatermark
      x-ds-method: update
      x-ds-service: Accounts
      x-ds-in-sdk: true
      x-codegen-request-body-name: watermark
  /v2/accounts/{accountId}/watermark/preview:
    put:
      tags:
      - AccountWatermarks
      summary: Get watermark preview.
      operationId: WatermarkPreview_PutWatermarkPreview
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      requestBody:
        description: "When set to **true**, the account has the watermark feature\
          \ enabled, and the envelope is not complete, the watermark for the account\
          \ is added to the PDF documents. This option can remove the watermark. "
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/watermark'
          application/xml:
            schema:
              $ref: '#/components/schemas/watermark'
        required: false
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/watermark'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: getWatermarkPreview
      x-ds-method: preview
      x-ds-service: Accounts
      x-ds-in-sdk: true
      x-codegen-request-body-name: watermark
  /v2/accounts/{accountId}/workspaces:
    get:
      tags:
      - Workspaces
      summary: List Workspaces
      description: Gets information about the Workspaces that have been created.
      operationId: Workspace_GetWorkspaces
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/workspaceList'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: listWorkspaces
      x-ds-method: list
      x-ds-service: Workspaces
      x-ds-in-sdk: true
    post:
      tags:
      - Workspaces
      summary: Create a Workspace
      description: Creates a new workspace.
      operationId: Workspace_PostWorkspace
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/workspace'
          application/xml:
            schema:
              $ref: '#/components/schemas/workspace'
        required: false
      responses:
        "201":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/workspace'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: createWorkspace
      x-ds-method: create
      x-ds-service: Workspaces
      x-ds-in-sdk: true
      x-codegen-request-body-name: workspace
  /v2/accounts/{accountId}/workspaces/{workspaceId}:
    get:
      tags:
      - Workspaces
      summary: Get Workspace
      description: 'Retrives properties about a workspace given a unique workspaceId. '
      operationId: Workspace_GetWorkspace
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: workspaceId
        in: path
        description: Specifies the workspace ID GUID.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/workspace'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: getWorkspace
      x-ds-method: get
      x-ds-service: Workspaces
      x-ds-in-sdk: true
    put:
      tags:
      - Workspaces
      summary: Update Workspace
      description: Updates information about a specific workspace.
      operationId: Workspace_PutWorkspace
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: workspaceId
        in: path
        description: Specifies the workspace ID GUID.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/workspace'
          application/xml:
            schema:
              $ref: '#/components/schemas/workspace'
        required: false
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/workspace'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: updateWorkspace
      x-ds-method: update
      x-ds-service: Workspaces
      x-ds-in-sdk: true
      x-codegen-request-body-name: workspace
    delete:
      tags:
      - Workspaces
      summary: Delete Workspace
      description: Deletes an existing workspace (logically).
      operationId: Workspace_DeleteWorkspace
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: workspaceId
        in: path
        description: Specifies the workspace ID GUID.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/workspace'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: deleteWorkspace
      x-ds-method: delete
      x-ds-service: Workspaces
      x-ds-in-sdk: true
  /v2/accounts/{accountId}/workspaces/{workspaceId}/folders/{folderId}:
    get:
      tags:
      - WorkspaceItems
      summary: List Workspace Folder Contents
      description: "Retrieves workspace folder contents, which can include sub folders\
        \ and files."
      operationId: WorkspaceFolder_GetWorkspaceFolder
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: folderId
        in: path
        description: The ID of the folder being accessed.
        required: true
        schema:
          type: string
      - name: workspaceId
        in: path
        description: Specifies the workspace ID GUID.
        required: true
        schema:
          type: string
      - name: count
        in: query
        description: The maximum number of results to be returned by this request.
        schema:
          type: string
      - name: include_files
        in: query
        description: "When set to **true**, file information is returned in the response\
          \ along with folder information. The default is **false**."
        schema:
          type: string
      - name: include_sub_folders
        in: query
        description: "When set to **true**, information about the sub-folders of the\
          \ current folder is returned. The default is **false**."
        schema:
          type: string
      - name: include_thumbnails
        in: query
        description: "When set to **true**, thumbnails are returned as part of the\
          \ response.  The default is **false**."
        schema:
          type: string
      - name: include_user_detail
        in: query
        description: Set to **true** to return extended details about the user. The
          default is **false**.
        schema:
          type: string
      - name: start_position
        in: query
        description: The position within the total result set from which to start
          returning values.
        schema:
          type: string
      - name: workspace_user_id
        in: query
        description: "If set, then the results are filtered to those associated with\
          \ the specified userId."
        schema:
          type: string
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/workspaceFolderContents'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: listWorkspaceFolderItems
      x-ds-method: listFolderItems
      x-ds-service: Workspaces
      x-ds-in-sdk: true
    delete:
      tags:
      - WorkspaceItems
      summary: Deletes workspace one or more specific files/folders from the given
        folder or root.
      operationId: WorkspaceFolder_DeleteWorkspaceItems
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: folderId
        in: path
        description: The ID of the folder being accessed.
        required: true
        schema:
          type: string
      - name: workspaceId
        in: path
        description: Specifies the workspace ID GUID.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/workspaceItemList'
          application/xml:
            schema:
              $ref: '#/components/schemas/workspaceItemList'
        required: false
      responses:
        "200":
          description: Successful response.
          content: {}
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: deleteWorkspaceFolderItems
      x-ds-method: deleteFolderItems
      x-ds-service: Workspaces
      x-ds-in-sdk: true
      x-codegen-request-body-name: workspaceItemList
  /v2/accounts/{accountId}/workspaces/{workspaceId}/folders/{folderId}/files:
    post:
      tags:
      - WorkspaceItems
      summary: Creates a workspace file.
      operationId: WorkspaceFile_PostWorkspaceFiles
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: folderId
        in: path
        description: The ID of the folder being accessed.
        required: true
        schema:
          type: string
      - name: workspaceId
        in: path
        description: Specifies the workspace ID GUID.
        required: true
        schema:
          type: string
      responses:
        "201":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/workspaceItem'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: createWorkspaceFile
      x-ds-method: createFIle
      x-ds-service: Workspaces
      x-ds-in-sdk: true
  /v2/accounts/{accountId}/workspaces/{workspaceId}/folders/{folderId}/files/{fileId}:
    get:
      tags:
      - WorkspaceItems
      summary: Get Workspace File
      description: Retrieves a workspace file (the binary).
      operationId: WorkspaceFile_GetWorkspaceFile
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: fileId
        in: path
        description: Specifies the room file ID GUID.
        required: true
        schema:
          type: string
      - name: folderId
        in: path
        description: The ID of the folder being accessed.
        required: true
        schema:
          type: string
      - name: workspaceId
        in: path
        description: Specifies the workspace ID GUID.
        required: true
        schema:
          type: string
      - name: is_download
        in: query
        description: "When set to **true**, the Content-Disposition header is set\
          \ in the response. The value of the header provides the filename of the\
          \ file. Default is **false**."
        schema:
          type: string
      - name: pdf_version
        in: query
        description: When set to **true** the file returned as a PDF.
        schema:
          type: string
      responses:
        "200":
          description: Successful response.
          content: {}
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: getWorkspaceFile
      x-ds-method: getFile
      x-ds-service: Workspaces
      x-ds-in-sdk: true
    put:
      tags:
      - WorkspaceItems
      summary: Update Workspace File Metadata
      description: Updates workspace item metadata for one or more specific files/folders.
      operationId: WorkspaceFile_PutWorkspaceFile
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: fileId
        in: path
        description: Specifies the room file ID GUID.
        required: true
        schema:
          type: string
      - name: folderId
        in: path
        description: The ID of the folder being accessed.
        required: true
        schema:
          type: string
      - name: workspaceId
        in: path
        description: Specifies the workspace ID GUID.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/workspaceItem'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: updateWorkspaceFile
      x-ds-method: updateFile
      x-ds-service: Workspaces
      x-ds-in-sdk: true
  /v2/accounts/{accountId}/workspaces/{workspaceId}/folders/{folderId}/files/{fileId}/pages:
    get:
      tags:
      - WorkspaceItems
      summary: List File Pages
      description: Retrieves a workspace file as rasterized pages.
      operationId: WorkspaceFilePages_GetWorkspaceFilePages
      parameters:
      - name: accountId
        in: path
        description: The external account number (int) or account id GUID.
        required: true
        schema:
          type: string
      - name: fileId
        in: path
        description: Specifies the room file ID GUID.
        required: true
        schema:
          type: string
      - name: folderId
        in: path
        description: The ID of the folder being accessed.
        required: true
        schema:
          type: string
      - name: workspaceId
        in: path
        description: Specifies the workspace ID GUID.
        required: true
        schema:
          type: string
      - name: count
        in: query
        description: The maximum number of results to be returned by this request.
        schema:
          type: string
      - name: dpi
        in: query
        description: Number of dots per inch for the resulting image. The default
          if not used is 94. The range is 1-310.
        schema:
          type: string
      - name: max_height
        in: query
        description: Sets the maximum height (in pixels) of the returned image.
        schema:
          type: string
      - name: max_width
        in: query
        description: Sets the maximum width (in pixels) of the returned image.
        schema:
          type: string
      - name: start_position
        in: query
        description: The position within the total result set from which to start
          returning values. The value **thumbnail** may be used to return the page
          image.
        schema:
          type: string
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/pageImages'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: listWorkspaceFilePages
      x-ds-method: listFilePages
      x-ds-service: Workspaces
      x-ds-in-sdk: true
  /v2/accounts/provisioning:
    get:
      tags:
      - Accounts
      summary: Retrieves the account provisioning information for the account.
      description: Retrieves the account provisioning information for the account.
      operationId: Accounts_GetProvisioning
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/provisioningInformation'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: getProvisioning
      x-ds-method: getProvisioning
      x-ds-service: Accounts
      x-ds-in-sdk: true
  /v2/billing_plans:
    get:
      tags:
      - BillingPlans
      summary: Gets the list of available billing plans.
      description: Retrieves a list of the billing plans associated with a distributor.
      operationId: BillingPlans_GetBillingPlans
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/billingPlansResponse'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: listBillingPlans
      x-ds-method: list
      x-ds-service: Billing
      x-ds-in-sdk: true
  /v2/billing_plans/{billingPlanId}:
    get:
      tags:
      - BillingPlans
      summary: Get the billing plan details.
      description: Retrieves the billing plan details for the specified billing plan
        ID.
      operationId: BillingPlans_GetBillingPlan
      parameters:
      - name: billingPlanId
        in: path
        description: The ID of the billing plan being accessed.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/billingPlanResponse'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: getBillingPlan
      x-ds-method: get
      x-ds-service: Billing
      x-ds-in-sdk: true
  /v2/current_user/notary/journals:
    get:
      tags:
      - NotaryJournals
      operationId: NotaryJournals_GetNotaryJournals
      parameters:
      - name: count
        in: query
        description: The maximum number of results to be returned by this request.
        schema:
          type: string
      - name: search_text
        in: query
        schema:
          type: string
      - name: start_position
        in: query
        description: The position within the total result set from which to start
          returning values. The value **thumbnail** may be used to return the page
          image.
        schema:
          type: string
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/notaryJournalList'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: listNotaryJournals
      x-ds-method: list
      x-ds-service: Notary
      x-ds-in-sdk: true
  /v2/current_user/password_rules:
    get:
      tags:
      - AccountPasswordRules
      summary: Get membership account password rules
      operationId: PasswordRules_GetPasswordRules
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/userPasswordRules'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: getPasswordRules
      x-ds-method: getForUser
      x-ds-service: Accounts
      x-ds-in-sdk: true
  /v2/diagnostics/request_logs:
    get:
      tags:
      - RequestLogs
      summary: Gets the API request logging log files.
      description: "Retrieves a list of log entries as a JSON or xml object or as\
        \ a zip file containing the entries.\n\nIf the Accept header is set to application/zip,\
        \ the response is a zip file containing individual text files, each representing\
        \ an API request.\n\nIf the Accept header is set to `application/json` or\
        \ `application/xml`, the response returns list of log entries in either JSON\
        \ or XML. An example JSON response body is shown below. "
      operationId: APIRequestLog_GetRequestLogs
      parameters:
      - name: encoding
        in: query
        schema:
          type: string
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/apiRequestLogsResult'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: listRequestLogs
      x-ds-method: list
      x-ds-service: Diagnostics
      x-ds-in-sdk: true
    delete:
      tags:
      - RequestLogs
      summary: Deletes the request log files.
      description: Deletes the request log files.
      operationId: APIRequestLog_DeleteRequestLogs
      responses:
        "200":
          description: Successful response.
          content: {}
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: deleteRequestLogs
      x-ds-method: delete
      x-ds-service: Diagnostics
      x-ds-in-sdk: true
  /v2/diagnostics/request_logs/{requestLogId}:
    get:
      tags:
      - RequestLogs
      summary: Gets a request logging log file.
      description: |-
        Retrieves information for a single log entry.

        **Request**
        The `requestLogfId` property can be retrieved by getting the list of log entries. The Content-Transfer-Encoding header can be set to base64 to retrieve the API request/response as base 64 string. Otherwise the bytes of the request/response are returned.

        **Response**
        If the Content-Transfer-Encoding header was set to base64, the log is returned as a base64 string.
      operationId: APIRequestLog_GetRequestLog
      parameters:
      - name: requestLogId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful response.
          content:
            text/plain:
              schema:
                type: string
                format: binary
        "400":
          description: Error encountered.
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: getRequestLog
      x-ds-method: get
      x-ds-service: Diagnostics
      x-ds-in-sdk: true
  /v2/diagnostics/settings:
    get:
      tags:
      - RequestLogs
      summary: Gets the API request logging settings.
      description: |-
        Retrieves the current API request logging setting for the user and remaining log entries.

        **Response**
        The response includes the current API request logging setting for the user, along with the maximum log entries and remaining log entries.
      operationId: APIRequestLog_GetRequestLogSettings
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/diagnosticsSettingsInformation'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: getRequestLogSettings
      x-ds-method: getSettings
      x-ds-service: Diagnostics
      x-ds-in-sdk: true
    put:
      tags:
      - RequestLogs
      summary: Enables or disables API request logging for troubleshooting.
      description: |
        Enables or disables API request logging for troubleshooting.

        When enabled (`apiRequestLogging` is set to true), REST API requests and responses for the user are added to a log. A log can have up to 50 requests/responses and the current number of log entries can be determined by getting the settings. Logging is automatically disabled when the log limit of 50 is reached.

        You can call [ML:GetRequestLog] or [ML:GetRequestLogs] to download the log files (individually or as a zip file). Call [ML:DeleteRequestLogs] to clear the log by deleting current entries.

        Private information, such as passwords and integrator key information, which is normally located in the call header is omitted from the request/response log.

        ###### Note: API request logging only captures requests from the authenticated user. Any call that does not authenticate the user and resolve a userId isn't logged. Meaning that login_information, NewAccounts, or other distributor-credential calls are not logged.
      operationId: APIRequestLog_PutRequestLogSettings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/diagnosticsSettingsInformation'
          application/xml:
            schema:
              $ref: '#/components/schemas/diagnosticsSettingsInformation'
        required: false
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/diagnosticsSettingsInformation'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: updateRequestLogSettings
      x-ds-method: updateSettings
      x-ds-service: Diagnostics
      x-ds-in-sdk: true
      x-codegen-request-body-name: diagnosticsSettingsInformation
  /v2/login_information:
    get:
      tags:
      - Authentication
      summary: Gets login information for a specified user.
      description: |
        Retrieves account information for the authenticated user. Since the API is sessionless, this method does not actually log you in.
        Instead, the method returns information about the account or accounts that the authenticated user has access to.

        ###### Important: This method must only be used for the [Legacy Header Authentication](https://developers.docusign.com/esign-rest-api/guides/authentication/legacy) flow. Use the [`AccountServer: userInfo` method](https://developers.docusign.com/esign-rest-api/guides/authentication/user-info-endpoints) for the OAuth2 Authentication Code and [Implicit Grant flows](https://developers.docusign.com/esign-rest-api/guides/authentication/oauth2-implicit).

        Each account has a `baseUrl` property, returned in the response.
        Use this `baseUrl` in all future API calls as the base of the request URL.

        For each account, the `baseUrl` property includes the DocuSign server, the API version, and the `accountId` property.

        It is not uncommon for an authenticated user to have access to more than one account (and more than one `baseUrl`). Depending on your integration's use case, your integration may choose to:

        * Use the account whose `isDefault` field is `true`.
        * List the available accounts and ask the user to choose one.
        * Enable the system administrator to set the account that should be used by your integration.

        If this method returns successfully, then you also know that the user has successfully authenticated with the DocuSign Signature platform.

        For more information on Authentication Login, please see our [REST API Authentication Guides](https://developers.docusign.com/esign-rest-api/guides/authentication).

        ###### Note: Certain reference items maybe out of date and the latest information is available in the new Authentication Guides.
      operationId: LoginInformation_GetLoginInformation
      parameters:
      - name: api_password
        in: query
        description: |
          Reserved for DocuSign.
        schema:
          type: string
      - name: embed_account_id_guid
        in: query
        schema:
          type: string
      - name: include_account_id_guid
        in: query
        description: "When set to **true**, shows the account ID GUID in the response."
        schema:
          type: string
      - name: login_settings
        in: query
        description: "Determines whether login settings are returned in the response.\n\
          \nValid Values:\n\n* all -  All the login settings are returned. \n* none\
          \ - no login settings are returned."
        schema:
          type: string
      responses:
        "200":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/loginInformation'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: login
      x-ds-method: login
      x-ds-service: Authentication
      x-ds-in-sdk: true
      x-ds-examples:
      - description: |
          This example shows a typical response to calling
          this method with the default parameters.
          Note that the `name` of the account
          may be different than the `userName`.
        direction: response
        format: json
        response:
          loginAccounts:
          - accountId: "1703061"
            baseUrl: https://demo.docusign.net/restapi/v2/accounts/1703061
            email: nirving@example.com
            isDefault: "true"
            name: LoanCo
            siteDescription: ""
            userId: 1470ff66-f92e-4e8e-ab81-8c46f140da37
            userName: Nat Irving
        style: custom
        title: Authentication Success Response Example
      - description: |
          This example shows a typical response when the integrator key is invalid.
        direction: response
        format: json
        response:
          errorCode: PARTNER_AUTHENTICATION_FAILED
          message: The specified Integrator Key was not found or is disabled. An Integrator
            key was not specified.
        style: custom
        title: Authentication Failure Response Example
  /v2/login_information/{loginPart}:
    put:
      tags:
      - Authentication
      summary: Updates the password for a specified user.
      description: Updates the password for a specified user.
      operationId: LoginInformation_PutLoginInformation
      parameters:
      - name: loginPart
        in: path
        description: "Currently, only the value **password** is supported."
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/userPasswordInformation'
          application/xml:
            schema:
              $ref: '#/components/schemas/userPasswordInformation'
        required: false
      responses:
        "200":
          description: Successful response.
          content: {}
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: updatePassword
      x-ds-method: updatePassword
      x-ds-service: Authentication
      x-ds-in-sdk: true
      x-codegen-request-body-name: userPasswordInformation
  /v2/oauth2/revoke:
    post:
      tags:
      - Authentication
      summary: |
        **Deprecated** Revokes an authorization token.
      description: |
        **Deprecated**

        **Note:**  This information is provided for legacy reference only. Please see our supported forms of authentication referenced below and use our [REST API Authentication Guides](https://developers.docusign.com/esign-rest-api/guides/authentication) for more information.<p>
        Revokes an OAuth2 authorization server token. After the revocation is complete, a caller must re-authenticate to restore access.
      operationId: OAuth2_PostRevoke
      responses:
        "201":
          description: Successful response.
          content: {}
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: revokeOAuthToken
      x-ds-method: revokeOAuthToken
      x-ds-service: Authentication
      x-ds-in-sdk: true
  /v2/oauth2/token:
    post:
      tags:
      - Authentication
      summary: |
        **Deprecated** Creates an authorization token.
      description: |
        **Deprecated**

        **Note:**  This information is provided for legacy reference only. Please see our supported forms of authentication referenced below and use our [REST API Authentication Guides](https://developers.docusign.com/esign-rest-api/guides/authentication) for more information.<p>
        Creates an OAuth2 authorization server token endpoint. For more information about OAuth 2.0 please see [OAuth2.0](https://oauth.net/2/).
      operationId: OAuth2_PostToken
      responses:
        "201":
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/oauthAccess'
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: getOAuthToken
      x-ds-method: getOAuthToken
      x-ds-service: Authentication
      x-ds-in-sdk: true
  /v2/organization_exports/{organizationId}/account_settings/{resultId}:
    get:
      tags:
      - Accounts
      operationId: OrganizationExports_GetAccountSettingsExport
      parameters:
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
      - name: resultId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful response.
          content: {}
        "400":
          description: Error encountered.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errorDetails'
      deprecated: false
      x-ds-methodname: getAccountSettingsExport
      x-ds-api-status: beta
      x-ds-method: getAccountSettingsExport
      x-ds-service: Uncategorized
      x-ds-in-sdk: true
components:
  schemas:
    accountAddress:
      type: object
      properties:
        address1:
          type: string
          description: |-
            First Line of the address.
            Maximum length: 100 characters.
        address2:
          type: string
          description: |-
            Second Line of the address.
            Maximum length: 100 characters.
        city:
          type: string
          description: The city value of the address.
        country:
          type: string
          description: Specifies the country associated with the address.
        email:
          type: string
          description: ""
        fax:
          type: string
          description: ""
        firstName:
          type: string
          description: "The user's first name. \nMaximum Length: 50 characters."
        lastName:
          type: string
          description: The recipient's last name.
        phone:
          type: string
          description: ""
        postalCode:
          type: string
          description: ""
        state:
          type: string
          description: The state or province associated with the address.
        supportedCountries:
          type: array
          description: Contains an array of countries supported by the billing plan.
          items:
            $ref: '#/components/schemas/country'
      description: Contains information about an account address.
      x-ds-definition-name: accountAddress
      x-ms-summary: Contains information about an account address.
    accountBillingPlan:
      type: object
      properties:
        addOns:
          type: array
          description: 'Reserved:'
          items:
            $ref: '#/components/schemas/addOn'
        appStoreReceiptExpirationDate:
          type: string
          description: ""
        appStoreReceiptPurchaseDate:
          type: string
          description: ""
        canCancelRenewal:
          type: string
          description: "Reserved: TBD"
        canUpgrade:
          type: string
          description: "When set to **true**, specifies that you can upgrade the account\
            \ through the API."
        currencyCode:
          type: string
          description: Specifies the ISO currency code for the account.
        enableSupport:
          type: string
          description: "When set to **true**, then customer support is provided as\
            \ part of the account plan."
        includedSeats:
          type: string
          description: The number of seats (users) included.
        incrementalSeats:
          type: string
          description: "Reserved: TBD"
        isDowngrade:
          type: string
          description: ""
        notificationType:
          type: string
          description: ""
        otherDiscountPercent:
          type: string
          description: ' Any other percentage discount for the plan. '
        paymentCycle:
          type: string
          description: ""
        paymentMethod:
          type: string
          description: " The payment method used with the plan. The possible values\
            \ are: CreditCard, PurchaseOrder, Premium, or Freemium. "
        perSeatPrice:
          type: string
          description: ""
        planClassification:
          type: string
          description: "Identifies the type of plan. Examples include Business, Corporate,\
            \ Enterprise, Free."
        planFeatureSets:
          type: array
          description: |
            A complex type that sets the feature sets for the account. It contains the following information (all string content):

            * currencyFeatureSetPrices - Contains the currencyCode and currencySymbol for the alternate currency values for envelopeFee, fixedFee, seatFee that are configured for this plan feature set.
            * envelopeFee - An incremental envelope cost for plans with envelope overages (when isEnabled=true).
            * featureSetId - A unique ID for the feature set.
            * fixedFee - A one-time fee associated with the plan (when isEnabled=true).
            * isActive - Specifies whether the feature set is actively set as part of the plan.
            * isEnabled - Specifies whether the feature set is actively enabled as part of the plan.
            * name - The name of the feature set.
            * seatFee - An incremental seat cost for seat-based plans (when isEnabled=true).
          items:
            $ref: '#/components/schemas/featureSet'
        planId:
          type: string
          description: The DocuSign Plan ID for the account.
        planName:
          type: string
          description: The name of the Billing Plan.
        renewalStatus:
          type: string
          description: |-
            The renewal status for the account. The acceptable values are:

            * auto: The account automatically renews.
            * queued_for_close: Account will be closed at the billingPeriodEndDate.
            * queued_for_downgrade: Account will be downgraded at the billingPeriodEndDate.
        seatDiscounts:
          type: array
          description: " A complex type that contains any seat discount information.\n\
            \nValues are: BeginSeatCount, EndSeatCount, and SeatDiscountPercent.\n\
            \ "
          items:
            $ref: '#/components/schemas/seatDiscount'
        supportIncidentFee:
          type: string
          description: The support incident fee charged for each support incident.
        supportPlanFee:
          type: string
          description: The support plan fee charged for this plan.
      description: Contains information about an account billing plan.
      x-ds-definition-name: accountBillingPlan
      x-ms-summary: Contains information about an account billing plan.
    accountBillingPlanResponse:
      type: object
      properties:
        billingAddress:
          $ref: '#/components/schemas/accountAddress'
        billingAddressIsCreditCardAddress:
          type: string
          description: "When set to **true**, the credit card address information\
            \ is the same as that returned as the billing address. If false, then\
            \ the billing address is considered a billing contact address, and the\
            \ credit card address can be different."
        billingPlan:
          $ref: '#/components/schemas/accountBillingPlan'
        creditCardInformation:
          $ref: '#/components/schemas/creditCardInformation'
        paymentProcessorInformation:
          $ref: '#/components/schemas/paymentProcessorInformation'
        referralInformation:
          $ref: '#/components/schemas/referralInformation'
        successorPlans:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/billingPlan'
      description: ""
      x-ds-definition-name: accountBillingPlanResponse
      x-ms-summary: ""
    accountIdentityVerificationResponse:
      type: object
      properties:
        identityVerification:
          type: array
          description: "Specifies the ID Verification workflow applied on an envelope\
            \ by workflow ID. <br/>See the [list](https://developers.docusign.com/esign-rest-api/reference/Accounts/IdentityVerifications/list)\
            \ method in the [IdentityVerifications](https://developers.docusign.com/esign-rest-api/reference/Accounts/IdentityVerifications)\
            \ resource for more information on how to retrieve workflow IDs available\
            \ for an account. <br/>This can be used in addition to other [recipient\
            \ authentication](https://support.docusign.com/en/guides/ndse-user-guide-recipient-authentication)\
            \ methods. <br/>Note that ID Verification and ID Check are two distinct\
            \ methods. ID Verification checks recipients' identity by verifying their\
            \ ID while ID Check relies on data available on public records (such as\
            \ current and former address)."
          items:
            $ref: '#/components/schemas/accountIdentityVerificationWorkflow'
      description: ""
      x-ds-definition-name: accountIdentityVerificationResponse
      x-ms-summary: ""
    accountIdentityVerificationStep:
      type: object
      properties:
        name:
          type: string
          description: ""
        type:
          type: string
          description: "Type of the user. Valid values: type_owner, type_participant."
      description: ""
      x-ds-definition-name: accountIdentityVerificationStep
      x-ms-summary: ""
    accountIdentityVerificationWorkflow:
      type: object
      properties:
        defaultName:
          type: string
          description: ""
        steps:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/accountIdentityVerificationStep'
        workflowId:
          type: string
          description: ""
      description: ""
      x-ds-definition-name: accountIdentityVerificationWorkflow
      x-ms-summary: ""
    accountInformation:
      type: object
      properties:
        accountIdGuid:
          type: string
          description: The GUID associated with the account ID.
        accountName:
          type: string
          description: The name of the account that the workspace user belongs to.
        allowTransactionRooms:
          type: string
          description: "When set to **true**, the transaction rooms feature exposed\
            \ through the Workspaces API is enabled."
        billingPeriodDaysRemaining:
          type: string
          description: "Reserved: TBD"
        billingPeriodEndDate:
          type: string
          description: "Reserved: TBD"
        billingPeriodEnvelopesAllowed:
          type: string
          description: "Reserved: TBD"
        billingPeriodEnvelopesSent:
          type: string
          description: "Reserved: TBD"
        billingPeriodStartDate:
          type: string
          description: "Reserved: TBD"
        billingProfile:
          type: string
          description: "Reserved: TBD"
        canCancelRenewal:
          type: string
          description: "Reserved: TBD"
        canUpgrade:
          type: string
          description: "When set to **true**, specifies that you can upgrade the account\
            \ through the API."
        connectPermission:
          type: string
          description: ""
        createdDate:
          type: string
          description: ""
        currencyCode:
          type: string
          description: Specifies the ISO currency code of the purchase. This is based
            on the ISO 4217 currency code information.
        currentPlanId:
          type: string
          description: Identifies the plan that was used create this account.
        distributorCode:
          type: string
          description: The code that identifies the billing plan groups and plans
            for the new account.
        docuSignLandingUrl:
          type: string
          description: ""
        envelopeSendingBlocked:
          type: string
          description: ""
        envelopeUnitPrice:
          type: string
          description: ""
        externalAccountId:
          type: string
          description: ""
        forgottenPasswordQuestionsCount:
          type: string
          description: ' A complex element that contains up to four Question/Answer
            pairs for forgotten password information for a user.'
        isDowngrade:
          type: string
          description: ""
        paymentMethod:
          type: string
          description: ""
        planClassification:
          type: string
          description: "Identifies the type of plan. Examples include Business, Corporate,\
            \ Enterprise, Free."
        planEndDate:
          type: string
          description: The date that the current plan will end.
        planName:
          type: string
          description: ""
        planStartDate:
          type: string
          description: The date that the Account started using the current plan.
        seatsAllowed:
          type: string
          description: ""
        seatsInUse:
          type: string
          description: ""
        status21CFRPart11:
          type: string
          description: ""
        suspensionDate:
          type: string
          description: ""
        suspensionStatus:
          type: string
          description: ""
      description: ""
      x-ds-definition-name: accountInformation
      x-ms-summary: ""
    accountMinimumPasswordLength:
      type: object
      properties:
        maximumLength:
          type: string
          description: ""
        minimumLength:
          type: string
          description: ""
      description: ""
      x-ds-definition-name: accountMinimumPasswordLength
      x-ms-summary: ""
    accountPasswordExpirePasswordDays:
      type: object
      properties:
        maximumDays:
          type: string
          description: ""
        minimumDays:
          type: string
          description: ""
      description: ""
      x-ds-definition-name: accountPasswordExpirePasswordDays
      x-ms-summary: ""
    accountPasswordLockoutDurationMinutes:
      type: object
      properties:
        maximumMinutes:
          type: string
          description: ""
        minimumMinutes:
          type: string
          description: ""
      description: ""
      x-ds-definition-name: accountPasswordLockoutDurationMinutes
      x-ms-summary: ""
    accountPasswordLockoutDurationType:
      type: object
      properties:
        options:
          type: array
          description: ""
          items:
            type: string
      description: ""
      x-ds-definition-name: accountPasswordLockoutDurationType
      x-ms-summary: ""
    accountPasswordMinimumPasswordAgeDays:
      type: object
      properties:
        maximumAge:
          type: string
          description: ""
        minimumAge:
          type: string
          description: ""
      description: ""
      x-ds-definition-name: accountPasswordMinimumPasswordAgeDays
      x-ms-summary: ""
    accountPasswordQuestionsRequired:
      type: object
      properties:
        maximumQuestions:
          type: string
          description: "The maximum number of password reset questions allowed for\
            \ the account. This number must be between `0` and `4`, and equal to or\
            \ greater than `minimumQuestions`."
        minimumQuestions:
          type: string
          description: "The minimum number of password reset questions allowed for\
            \ the account. This number must be between `0` and `4`, and equal to or\
            \ less than `maximumQuestions`."
      description: Information about the number of password questions required (0
        to 4) to confirm a user's identity when a user needs to reset their password.
      x-ds-definition-name: accountPasswordQuestionsRequired
      x-ms-summary: Information about the number of password questions required (0
        to 4) to confirm a user's identity when a user needs to reset their password.
    accountPasswordRules:
      type: object
      properties:
        expirePassword:
          type: string
          description: ""
        expirePasswordDays:
          type: string
          description: ""
        expirePasswordDaysMetadata:
          $ref: '#/components/schemas/accountPasswordExpirePasswordDays'
        lockoutDurationMinutes:
          type: string
          description: ""
        lockoutDurationMinutesMetadata:
          $ref: '#/components/schemas/accountPasswordLockoutDurationMinutes'
        lockoutDurationType:
          type: string
          description: ""
        lockoutDurationTypeMetadata:
          $ref: '#/components/schemas/accountPasswordLockoutDurationType'
        minimumPasswordAgeDays:
          type: string
          description: ""
        minimumPasswordAgeDaysMetadata:
          $ref: '#/components/schemas/accountPasswordMinimumPasswordAgeDays'
        minimumPasswordLength:
          type: string
          description: ""
        minimumPasswordLengthMetadata:
          $ref: '#/components/schemas/accountMinimumPasswordLength'
        passwordIncludeDigit:
          type: string
          description: ""
        passwordIncludeDigitOrSpecialCharacter:
          type: string
          description: ""
        passwordIncludeLowerCase:
          type: string
          description: ""
        passwordIncludeSpecialCharacter:
          type: string
          description: ""
        passwordIncludeUpperCase:
          type: string
          description: ""
        passwordStrengthType:
          type: string
          description: ""
        passwordStrengthTypeMetadata:
          $ref: '#/components/schemas/accountPasswordStrengthType'
        questionsRequired:
          type: string
          description: ""
        questionsRequiredMetadata:
          $ref: '#/components/schemas/accountPasswordQuestionsRequired'
      description: ""
      x-ds-definition-name: accountPasswordRules
      x-ms-summary: ""
    accountPasswordStrengthType:
      type: object
      properties:
        options:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/accountPasswordStrengthTypeOption'
      description: ""
      x-ds-definition-name: accountPasswordStrengthType
      x-ms-summary: ""
    accountPasswordStrengthTypeOption:
      type: object
      properties:
        minimumLength:
          type: string
          description: ""
        name:
          type: string
          description: ""
        passwordIncludeDigit:
          type: string
          description: ""
        passwordIncludeDigitOrSpecialCharacter:
          type: string
          description: ""
        passwordIncludeLowerCase:
          type: string
          description: ""
        passwordIncludeSpecialCharacter:
          type: string
          description: ""
        passwordIncludeUpperCase:
          type: string
          description: ""
      description: ""
      x-ds-definition-name: accountPasswordStrengthTypeOption
      x-ms-summary: ""
    accountRoleSettings:
      type: object
      properties:
        allowAccountManagement:
          type: string
          description: ""
        allowAccountManagementMetadata:
          $ref: '#/components/schemas/settingsMetadata'
        allowApiAccess:
          type: string
          description: ""
        allowApiAccessMetadata:
          $ref: '#/components/schemas/settingsMetadata'
        allowApiAccessToAccount:
          type: string
          description: ""
        allowApiAccessToAccountMetadata:
          $ref: '#/components/schemas/settingsMetadata'
        allowApiSendingOnBehalfOfOthers:
          type: string
          description: ""
        allowApiSendingOnBehalfOfOthersMetadata:
          $ref: '#/components/schemas/settingsMetadata'
        allowApiSequentialSigning:
          type: string
          description: ""
        allowApiSequentialSigningMetadata:
          $ref: '#/components/schemas/settingsMetadata'
        allowAutoTagging:
          type: string
          description: ""
        allowAutoTaggingMetadata:
          $ref: '#/components/schemas/settingsMetadata'
        allowBulkSending:
          type: string
          description: ""
        allowBulkSendingMetadata:
          $ref: '#/components/schemas/settingsMetadata'
        allowDocuSignDesktopClient:
          type: string
          description: ""
        allowDocuSignDesktopClientMetadata:
          $ref: '#/components/schemas/settingsMetadata'
        allowedAddressBookAccess:
          type: string
          description: ""
        allowedAddressBookAccessMetadata:
          $ref: '#/components/schemas/settingsMetadata'
        allowedTemplateAccess:
          type: string
          description: ""
        allowedTemplateAccessMetadata:
          $ref: '#/components/schemas/settingsMetadata'
        allowedToBeEnvelopeTransferRecipient:
          type: string
          description: ""
        allowedToBeEnvelopeTransferRecipientMetadata:
          $ref: '#/components/schemas/settingsMetadata'
        allowEnvelopeSending:
          type: string
          description: ""
        allowEnvelopeSendingMetadata:
          $ref: '#/components/schemas/settingsMetadata'
        allowESealRecipients:
          type: string
          description: ""
        allowESealRecipientsMetadata:
          $ref: '#/components/schemas/settingsMetadata'
        allowPowerFormsAdminToAccessAllPowerFormEnvelopes:
          type: string
          description: ""
        allowPowerFormsAdminToAccessAllPowerFormEnvelopesMetadata:
          $ref: '#/components/schemas/settingsMetadata'
        allowSendersToSetRecipientEmailLanguage:
          type: string
          description: ""
        allowSendersToSetRecipientEmailLanguageMetadata:
          $ref: '#/components/schemas/settingsMetadata'
        allowSignerAttachments:
          type: string
          description: ""
        allowSignerAttachmentsMetadata:
          $ref: '#/components/schemas/settingsMetadata'
        allowSupplementalDocuments:
          type: string
          description: ""
        allowSupplementalDocumentsMetadata:
          $ref: '#/components/schemas/settingsMetadata'
        allowTaggingInSendAndCorrect:
          type: string
          description: ""
        allowTaggingInSendAndCorrectMetadata:
          $ref: '#/components/schemas/settingsMetadata'
        allowVaulting:
          type: string
          description: ""
        allowVaultingMetadata:
          $ref: '#/components/schemas/settingsMetadata'
        allowWetSigningOverride:
          type: string
          description: ""
        allowWetSigningOverrideMetadata:
          $ref: '#/components/schemas/settingsMetadata'
        canCreateWorkspaces:
          type: string
          description: ""
        canCreateWorkspacesMetadata:
          $ref: '#/components/schemas/settingsMetadata'
        disableDocumentUpload:
          type: string
          description: ""
        disableDocumentUploadMetadata:
          $ref: '#/components/schemas/settingsMetadata'
        disableOtherActions:
          type: string
          description: ""
        disableOtherActionsMetadata:
          $ref: '#/components/schemas/settingsMetadata'
        enableApiRequestLogging:
          type: string
          description: ""
        enableApiRequestLoggingMetadata:
          $ref: '#/components/schemas/settingsMetadata'
        enableRecipientViewingNotifications:
          type: string
          description: ""
        enableRecipientViewingNotificationsMetadata:
          $ref: '#/components/schemas/settingsMetadata'
        enableSequentialSigningInterface:
          type: string
          description: ""
        enableSequentialSigningInterfaceMetadata:
          $ref: '#/components/schemas/settingsMetadata'
        enableTransactionPointIntegration:
          type: string
          description: ""
        enableTransactionPointIntegrationMetadata:
          $ref: '#/components/schemas/settingsMetadata'
        powerFormRole:
          type: string
          description: ""
        powerFormRoleMetadata:
          $ref: '#/components/schemas/settingsMetadata'
        receiveCompletedSelfSignedDocumentsAsEmailLinks:
          type: string
          description: ""
        receiveCompletedSelfSignedDocumentsAsEmailLinksMetadata:
          $ref: '#/components/schemas/settingsMetadata'
        supplementalDocumentsMustAccept:
          type: string
          description: ""
        supplementalDocumentsMustAcceptMetadata:
          $ref: '#/components/schemas/settingsMetadata'
        supplementalDocumentsMustRead:
          type: string
          description: ""
        supplementalDocumentsMustReadMetadata:
          $ref: '#/components/schemas/settingsMetadata'
        supplementalDocumentsMustView:
          type: string
          description: ""
        supplementalDocumentsMustViewMetadata:
          $ref: '#/components/schemas/settingsMetadata'
        useNewDocuSignExperienceInterface:
          type: string
          description: ""
        useNewDocuSignExperienceInterfaceMetadata:
          $ref: '#/components/schemas/settingsMetadata'
        useNewSendingInterface:
          type: string
          description: ""
        useNewSendingInterfaceMetadata:
          $ref: '#/components/schemas/settingsMetadata'
        vaultingMode:
          type: string
          description: ""
        vaultingModeMetadata:
          $ref: '#/components/schemas/settingsMetadata'
      description: ""
      x-ds-definition-name: accountRoleSettings
      x-ms-summary: ""
    accountSeals:
      type: object
      properties:
        seals:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/sealIdentifier'
      description: ""
      x-ds-definition-name: accountSeals
      x-ms-summary: ""
    accountSettingsInformation:
      type: object
      properties:
        accountSettings:
          type: array
          description: |
            The list of
            [account settings][accountsettings]
            that determine
            the features available for the account.
            Note that some features are determined
            by the plan used to create the account and cannot be overridden.

            [accountsettings]: https://developers.docusign.com/esign-rest-api/reference/Accounts/Accounts/create/#account-settings
          items:
            $ref: '#/components/schemas/nameValue'
      description: Contains account settings information.
      x-ds-definition-name: accountSettingsInformation
      x-ms-summary: Contains account settings information.
    accountSharedAccess:
      type: object
      properties:
        accountId:
          type: string
          description: The account ID associated with the envelope.
        endPosition:
          type: string
          description: 'The last position in the result set. '
        errorDetails:
          $ref: '#/components/schemas/errorDetails'
        nextUri:
          type: string
          description: 'The URI for the next chunk of records based on the search
            request. It is `null` if this is the last set of results for the search. '
        previousUri:
          type: string
          description: 'The URI for the prior chunk of records based on the search
            request. It is `null` if this is the first set of results for the search. '
        resultSetSize:
          type: string
          description: 'The number of results returned in this response. '
        sharedAccess:
          type: array
          description: A list of shared access information of envelope and templates
            for the users specified in the request.
          items:
            $ref: '#/components/schemas/memberSharedItems'
        startPosition:
          type: string
          description: Starting position of the current result set.
        totalSetSize:
          type: string
          description: The total number of items in the search's result set. It will
            always be greater than or equal to the value of the `resultSetSize` field.
      description: Contains shared access information.
      x-ds-definition-name: accountSharedAccess
      x-ms-summary: Contains shared access information.
    accountSignatureProvider:
      type: object
      properties:
        isRequired:
          type: string
          description: ""
        priority:
          type: string
          description: ""
        signatureProviderDisplayName:
          type: string
          description: ""
        signatureProviderId:
          type: string
          description: ""
        signatureProviderName:
          type: string
          description: "The name of an Electronic or Standards Based Signature (digital\
            \ signature) provider for the signer to use. [The current provider list.](https://developers.docusign.com/esign-rest-api/guides/standards-based-signatures)"
        signatureProviderOptionsMetadata:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/accountSignatureProviderOption'
        signatureProviderRequiredOptions:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/signatureProviderRequiredOption'
      description: ""
      x-ds-definition-name: accountSignatureProvider
      x-ms-summary: ""
    accountSignatureProviderOption:
      type: object
      properties:
        signatureProviderOptionDisplayName:
          type: string
          description: ""
        signatureProviderOptionId:
          type: string
          description: ""
        signatureProviderOptionName:
          type: string
          description: ""
      description: ""
      x-ds-definition-name: accountSignatureProviderOption
      x-ms-summary: ""
    accountSignatureProviders:
      type: object
      properties:
        signatureProviders:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/accountSignatureProvider'
      description: ""
      x-ds-definition-name: accountSignatureProviders
      x-ms-summary: ""
    addOn:
      type: object
      properties:
        active:
          type: string
          description: 'Reserved:'
        addOnId:
          type: string
          description: 'Reserved:'
        id:
          type: string
          description: ""
        name:
          type: string
          description: 'Reserved:'
      description: Contains information about add ons.
      x-ds-definition-name: addOn
      x-ms-summary: Contains information about add ons.
    addressInformation:
      type: object
      properties:
        city:
          type: string
          description: The city associated with the address.
        country:
          type: string
          description: Specifies the country associated with the address.
        fax:
          type: string
          description: A Fax number associated with the address if one is available.
        phone:
          type: string
          description: A phone number associated with the address.
        state:
          type: string
          description: The state or province associated with the address.
        street1:
          type: string
          description: The first line of the address.
        street2:
          type: string
          description: The second line of the address (optional).
        zip:
          type: string
          description: The zip or postal code associated with the address.
        zipPlus4:
          type: string
          description: ""
      description: Contains address information.
      x-ds-definition-name: addressInformation
      x-ms-summary: Contains address information.
    addressInformation_v2:
      type: object
      properties:
        address1:
          type: string
          description: |-
            First Line of the address.
            Maximum length: 100 characters.
        address2:
          type: string
          description: |-
            Second Line of the address.
            Maximum length: 100 characters.
        city:
          type: string
          description: ""
        country:
          type: string
          description: Specifies the country associated with the address.
        fax:
          type: string
          description: ""
        phone:
          type: string
          description: ""
        postalCode:
          type: string
          description: ""
        stateOrProvince:
          type: string
          description: The state or province associated with the address.
      description: ""
      x-ds-definition-name: addressInformation_v2
      x-ms-summary: ""
    addressInformationInput:
      type: object
      properties:
        addressInformation:
          $ref: '#/components/schemas/addressInformation'
        displayLevelCode:
          type: string
          description: "Specifies the display level for the recipient. \nValid values\
            \ are: \n\n* ReadOnly\n* Editable\n* DoNotDisplay"
        receiveInResponse:
          type: string
          description: "When set to **true**, the information needs to be returned\
            \ in the response."
      description: Contains address input information.
      x-ds-definition-name: addressInformationInput
      x-ms-summary: Contains address input information.
    agent:
      type: object
      properties:
        accessCode:
          type: string
          description: "If a value is provided, the recipient must enter the value\
            \ as the access code to view and sign the envelope. \n\nMaximum Length:\
            \ 50 characters and it must conform to the account's access code format\
            \ setting.\n\nIf blank, but the signer `accessCode` property is set in\
            \ the envelope, then that value is used.\n\nIf blank and the signer `accessCode`\
            \ property is not set, then the access code is not required."
        addAccessCodeToEmail:
          type: string
          description: This Optional attribute indicates that the access code will
            be added to the email sent to the recipient; this nullifies the Security
            measure of Access Code on the recipient.
        clientUserId:
          type: string
          description: "Specifies whether the recipient is embedded or remote. \n\n\
            If the `clientUserId` property is not null then the recipient is embedded.\
            \ Use this field to associate the signer with their userId in your app.\
            \ Authenticating the user is the responsibility of your app when you use\
            \ embedded signing.\n\nNote: if the `clientUserId` property is set and\
            \ either `SignerMustHaveAccount` or `SignerMustLoginToSign` property of\
            \ the account settings is set to  **true**, an error is generated on sending.\
            \ \n\nMaximum length: 100 characters. "
        customFields:
          type: array
          description: An optional array of strings that allows the sender to provide
            custom data about the recipient. This information is returned in the envelope
            status but otherwise not used by DocuSign. Each customField string can
            be a maximum of 100 characters.
          items:
            type: string
        declinedDateTime:
          type: string
          description: The date and time the recipient declined the document. Read
            only.
        declinedReason:
          type: string
          description: The reason the recipient declined the document. Read only.
        deliveredDateTime:
          type: string
          description: "Reserved: For DocuSign use only."
        deliveryMethod:
          type: string
          description: "Reserved: For DocuSign use only."
        documentVisibility:
          type: array
          description: "A list of `documentVisibility` objects. Each object in the\
            \ list specifies whether a document in the envelope is visible to this\
            \ recipient. For the envelope to use this functionality, Document Visibility\
            \ must be enabled for the account and the `enforceSignerVisibility` property\
            \ must be set to **true**."
          items:
            $ref: '#/components/schemas/documentVisibility'
        email:
          type: string
          description: "Email id of the recipient. Notification of the document to\
            \ sign is sent to this email id. \n\nMaximum length: 100 characters. "
        emailNotification:
          $ref: '#/components/schemas/recipientEmailNotification'
        emailRecipientPostSigningURL:
          type: string
          description: ""
        embeddedRecipientStartURL:
          type: string
          description: "Specifies a sender provided valid URL string for redirecting\
            \ an embedded recipient. When using this option, the embedded recipient\
            \ still receives an email from DocuSign, just as a remote recipient would.\
            \ When the document link in the email is clicked the recipient is redirected,\
            \ through DocuSign, to the supplied URL to complete their actions. When\
            \ routing to the URL, the sender's system (the server responding to the\
            \ URL) must request a recipient token to launch a signing session. \n\n\
            If set to `SIGN_AT_DOCUSIGN`, the recipient is directed to an embedded\
            \ signing or viewing process directly at DocuSign. The signing or viewing\
            \ action is initiated by the DocuSign system and the transaction activity\
            \ and Certificate of Completion records will reflect this. In all other\
            \ ways the process is identical to an embedded signing or viewing operation\
            \ that is launched by any partner.\n\nIt is important to remember that\
            \ in a typical embedded workflow the authentication of an embedded recipient\
            \ is the responsibility of the sending application, DocuSign expects that\
            \ senders will follow their own process for establishing the recipient's\
            \ identity. In this workflow the recipient goes through the sending application\
            \ before the embedded signing or viewing process in initiated. However,\
            \ when the sending application sets `EmbeddedRecipientStartURL=SIGN_AT_DOCUSIGN`,\
            \ the recipient goes directly to the embedded signing or viewing process\
            \ bypassing the sending application and any authentication steps the sending\
            \ application would use. In this case, DocuSign recommends that you use\
            \ one of the normal DocuSign authentication features (Access Code, Phone\
            \ Authentication, SMS Authentication, etc.) to verify the identity of\
            \ the recipient.\n\nIf the `clientUserId` property is NOT set, and the\
            \ `embeddedRecipientStartURL` is set, DocuSign will ignore the redirect\
            \ URL and launch the standard signing process for the email recipient.\
            \ Information can be appended to the embedded recipient start URL using\
            \ merge fields. The available merge fields items are: envelopeId, recipientId,\
            \ recipientName, recipientEmail, and customFields. The `customFields`\
            \ property must be set fort the recipient or envelope. The merge fields\
            \ are enclosed in double brackets. \n\n*Example*: \n\n`http://senderHost/[[mergeField1]]/\
            \ beginSigningSession? [[mergeField2]]&[[mergeField3]]` "
        errorDetails:
          $ref: '#/components/schemas/errorDetails'
        excludedDocuments:
          type: array
          description: |-
            Specifies the documents that are not visible to this recipient. Document Visibility must be enabled for the account and the `enforceSignerVisibility` property must be set to **true** for the envelope to use this.

            When enforce signer visibility is enabled, documents with tabs can only be viewed by signers that have a tab on that document. Recipients that have an administrative role (Agent, Editor, or Intermediaries) or informational role (Certified Deliveries or Carbon Copies) can always see all the documents in an envelope, unless they are specifically excluded using this setting when an envelope is sent. Documents that do not have tabs are always visible to all recipients, unless they are specifically excluded using this setting when an envelope is sent.
          items:
            type: string
        faxNumber:
          type: string
          description: Reserved for DocuSign.
        firstName:
          type: string
          description: "The user's first name. \nMaximum Length: 50 characters."
        fullName:
          type: string
          description: Reserved for DocuSign.
        idCheckConfigurationName:
          type: string
          description: "The name of the authentication check to use. This value must\
            \ match one of the authentication types that the account uses. The names\
            \ of these authentication types appear in the web console sending interface\
            \ in the Identify list for a recipient. This setting overrides any default\
            \ authentication setting. Valid values are:\n\n- `Phone Auth $`: The recipient\
            \ must authenticate by using two-factor authentication (2FA). You provide\
            \ the phone number to use for 2FA in the `phoneAuthentication` object.\n\
            - `SMS Auth $`: The recipient must authenticate via SMS. You provide the\
            \ phone number to use in the `smsAuthentication` object.\n- `ID Check\
            \ $`: The  recipient must answer detailed security questions. \n\n**Example**:\
            \ Your account has ID Check and SMS Authentication available. In the web\
            \ console Identify list, these appear as ID Check $ and SMS Auth $. To\
            \ use ID Check in an envelope, the idCheckConfigurationName should be\
            \ ID Check $. For SMS, you would use SMS Auth $, and you would also need\
            \ to add a phone number to the smsAuthentication node."
        idCheckInformationInput:
          $ref: '#/components/schemas/idCheckInformationInput'
        identityVerification:
          $ref: '#/components/schemas/recipientIdentityVerification'
        inheritEmailNotificationConfiguration:
          type: string
          description: "When set to **true** and the envelope recipient creates a\
            \ DocuSign account after signing, the Manage Account Email Notification\
            \ settings are used as the default settings for the recipient's account. "
        lastName:
          type: string
          description: The recipient's last name.
        name:
          type: string
          description: ""
        note:
          type: string
          description: |
            A note sent to the recipient in the signing email.
            This note is unique to this recipient.
            In the user interface,
            it appears near the upper left corner
            of the document
            on the signing screen.

            Maximum Length: 1000 characters.
        phoneAuthentication:
          $ref: '#/components/schemas/recipientPhoneAuthentication'
        recipientAttachments:
          type: array
          description: Reserved for DocuSign.
          items:
            $ref: '#/components/schemas/recipientAttachment'
        recipientAuthenticationStatus:
          $ref: '#/components/schemas/authenticationStatus'
        recipientId:
          type: string
          description: Unique for the recipient. It is used by the tab element to
            indicate which recipient is to sign the Document.
        recipientIdGuid:
          type: string
          description: "The globally-unique identifier (GUID) for a specific recipient\
            \ on a specific envelope. If the same recipient is associated with multiple\
            \ envelopes, they will have a different GUID for each one. Read only."
        requireIdLookup:
          type: string
          description: "When set to **true**, the recipient is required to use the\
            \ specified ID check method (including Phone and SMS authentication) to\
            \ validate their identity. "
        roleName:
          type: string
          description: Optional element. Specifies the role name associated with the
            recipient.<br/><br/>This is required when working with template recipients.
        routingOrder:
          type: string
          description: 'Specifies the routing order of the recipient in the envelope. '
        samlAuthentication:
          $ref: '#/components/schemas/recipientSAMLAuthentication'
        sentDateTime:
          type: string
          description: The UTC DateTime when the envelope was sent. Read only.
        signedDateTime:
          type: string
          description: Reserved for DocuSign.
        signingGroupId:
          type: string
          description: "Optional. The ID of the [signing group](https://support.docusign.com/en/guides/ndse-user-guide-signing-groups).\n\
            \n**Note**: When you send an envelope to a signing group, anyone in the\
            \ group can open it and sign it with their own signature. For this reason,\
            \ we recommend that you do not include non-signer recipients (such as\
            \ carbon copy recipients) in the same signing group as signer recipients.\
            \ However, you could create a second signing group for the non-signer\
            \ recipients and change the default action of Needs to Sign to a different\
            \ value, such as Receives a Copy. "
        signingGroupName:
          type: string
          description: "The display name for the signing group. \n\nMaximum Length:\
            \ 100 characters. "
        signingGroupUsers:
          type: array
          description: A complex type that contains information about users in the
            signing group.
          items:
            $ref: '#/components/schemas/userInfo'
        smsAuthentication:
          $ref: '#/components/schemas/recipientSMSAuthentication'
        socialAuthentications:
          type: array
          description: ' Lists the social ID type that can be used for recipient authentication.'
          items:
            $ref: '#/components/schemas/socialAuthentication'
        status:
          type: string
          description: |
            Recipient status.
            <!-- todo -->
        templateLocked:
          type: string
          description: "When set to **true**, the sender cannot change any attributes\
            \ of the recipient. Used only when working with template recipients. "
        templateRequired:
          type: string
          description: "When set to **true**, the sender may not remove the recipient.\
            \ Used only when working with template recipients."
        totalTabCount:
          type: string
          description: The total number of tabs in the documents. Read only.
        userId:
          type: string
          description: "The user ID of the user being accessed. Generally this is\
            \ the user ID of the authenticated user, but if the authenticated user\
            \ is an Admin on the account, this may be another user the Admin user\
            \ is accessing. **Note**: For the [GET /v2/accounts/{accountId}/envelopes](https://developers.docusign.com/esign-rest-api/reference/Envelopes/Envelopes/listStatusChanges/#envelopesInformation)\
            \ method, the `user_id` query parameter is not implemented and should\
            \ not be used."
      description: Contains information about agent recipients.
      x-ds-definition-name: agent
      x-ms-summary: Contains information about agent recipients.
    apiRequestLog:
      type: object
      properties:
        createdDateTime:
          type: string
          description: Indicates the date and time the item was created.
        description:
          type: string
          description: |
            A sender-defined description of the line item.
        requestLogId:
          type: string
          description: ""
        status:
          type: string
          description: Item status. <!-- TODO -->
      description: Contains API request log information.
      x-ds-definition-name: apiRequestLog
      x-ms-summary: Contains API request log information.
    apiRequestLogsResult:
      type: object
      properties:
        apiRequestLogs:
          type: array
          description: "Reserved: TBD"
          items:
            $ref: '#/components/schemas/apiRequestLog'
      description: Contains information about mutiple API request logs.
      x-ds-definition-name: apiRequestLogsResult
      x-ms-summary: Contains information about mutiple API request logs.
    approve:
      type: object
      properties:
        anchorCaseSensitive:
          type: string
          description: |-
            Reserved for DocuSign.
            <!--
            When set to **true**, the anchor string does not consider case when matching strings in the document. The default value is **true**.
            -->
        anchorHorizontalAlignment:
          type: string
          description: |
            Reserved for DocuSign.
            <!--
            Specifies the alignment of anchor tabs with anchor strings. Possible values are **left** or **right**. The default value is **left**.
            -->
        anchorIgnoreIfNotPresent:
          type: string
          description: "When set to **true**, this tab is ignored if anchorString\
            \ is not found in the document."
        anchorMatchWholeWord:
          type: string
          description: |
            Reserved for DocuSign.
            <!--
            When set to **true**, the anchor string in this tab matches whole words only (strings embedded in other strings are ignored.) The default value is **true**.
            -->
        anchorString:
          type: string
          description: Specifies the anchor string.
        anchorUnits:
          type: string
          description: |
            Specifies units of the
            `anchorXOffset` and
            `anchorYOffset`.
            Valid units are:

            - `pixels`
            - `inches`
            - `mms`
            - `cms`
        anchorXOffset:
          type: string
          description: |
            Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.
        anchorYOffset:
          type: string
          description: |
            Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.
        bold:
          type: string
          description: "When set to **true**, the information in the tab is bold."
        buttonText:
          type: string
          description: ' Specifies the approval text displayed in the tab. '
        conditionalParentLabel:
          type: string
          description: For conditional fields this is the TabLabel of the parent tab
            that controls this tab's visibility.
        conditionalParentValue:
          type: string
          description: |
            For conditional fields, this is the value of the parent tab that controls the tab's visibility.

            If the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use "on" as the value to show that the parent tab is active.
        customTabId:
          type: string
          description: "The DocuSign generated custom tab ID for the custom tab to\
            \ be applied. This can only be used when adding new tabs for a recipient.\
            \ When used, the new tab inherits all the custom tab properties."
        documentId:
          type: string
          description: Specifies the document ID number that the tab is placed on.
            This must refer to an existing Document's ID attribute.
        errorDetails:
          $ref: '#/components/schemas/errorDetails'
        font:
          type: string
          description: |
            The font to be used for the tab value. Supported Fonts include:

            - Default
            - Arial
            - ArialNarrow
            - Calibri
            - CourierNew
            - Garamond
            - Georgia
            - Helvetica
            - LucidaConsole
            - MSGothic
            - MSMincho
            - OCR-A
            - Tahoma
            - TimesNewRoman
            - Trebuchet
            - Verdana
        fontColor:
          type: string
          description: "The font color used for the information in the tab. Possible\
            \ values are: \n\n- Black\n- BrightBlue\n- BrightRed\n- DarkGreen\n- DarkRed\n\
            - Gold\n- Green\n- NavyBlue\n- Purple\n- White\n"
        fontSize:
          type: string
          description: |-
            The font size used for the information in the tab. Possible values are:

            - Size7
            - Size8
            - Size9
            - Size10
            - Size11
            - Size12
            - Size14
            - Size16
            - Size18
            - Size20
            - Size22
            - Size24
            - Size26
            - Size28
            - Size36
            - Size48
            - Size72
        height:
          type: integer
          description: Height of the tab in pixels.
          format: int32
        italic:
          type: string
          description: "When set to **true**, the information in the tab is italic."
        mergeField:
          $ref: '#/components/schemas/mergeField'
        pageNumber:
          type: string
          description: |
            Specifies the page number on which the tab is located.
            Must be 1 for supplemental documents.
        recipientId:
          type: string
          description: Unique for the recipient. It is used by the tab element to
            indicate which recipient is to sign the Document.
        status:
          type: string
          description: |
            Tab status
            <!-- todo -->
        tabGroupLabels:
          type: array
          description: ""
          items:
            type: string
        tabId:
          type: string
          description: The unique identifier for the tab.
        tabLabel:
          type: string
          description: |
            The label string associated with the tab.
            The string may be the empty string.
            If no value is provided, the tab type is used as the value.

            Maximum of 500 characters.
        tabOrder:
          type: string
          description: |-
            A positive integer that sets the order the tab is navigated to during signing.

            Tabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.
        templateLocked:
          type: string
          description: "When set to **true**, the sender cannot change any attributes\
            \ of the recipient. Used only when working with template recipients. "
        templateRequired:
          type: string
          description: "When set to **true**, the sender may not remove the recipient.\
            \ Used only when working with template recipients."
        tooltip:
          type: string
          description: ""
        underline:
          type: string
          description: "When set to **true**, the information in the tab is underlined."
        width:
          type: integer
          description: Width of the tab in pixels.
          format: int32
        xPosition:
          type: string
          description: |
            This property indicates the horizontal offset of the object on the page.
            DocuSign uses 72 DPI when determining position.
            Required. May be zero.

            To improve the tab's position on the document,
            DocuSign recommends
            adjusting `xPosition`
            and `yPosition`
            coordinates
            by (-3, -2)
        yPosition:
          type: string
          description: |
            This property indicates the vertical offset of the object on the page.
            DocuSign uses 72 DPI when determining position.
            Required. May be zero.

            To improve the tab's position on the document,
            DocuSign recommends
            adjusting `xPosition`
            and `yPosition`
            coordinates
            by (-3, -2)
      description: |
        A tab that allows the recipient to approve documents
        without placing a signature or initials on the
        document.
      x-ds-definition-name: approve
      x-ms-summary: |
        A tab that allows the recipient to approve documents
        without placing a signature or initials on the
        document.
    appStoreProduct:
      type: object
      properties:
        marketPlace:
          type: string
          description: ""
        productId:
          type: string
          description: The Product ID from the AppStore.
      description: Contains information about an APP store product.
      x-ds-definition-name: appStoreProduct
      x-ms-summary: Contains information about an APP store product.
    appStoreReceipt:
      type: object
      properties:
        productId:
          type: string
          description: The Product ID from the AppStore.
        receiptData:
          type: string
          description: "Reserved: TBD"
      description: Contains information about an APP store receipt.
      x-ds-definition-name: appStoreReceipt
      x-ms-summary: Contains information about an APP store receipt.
    attachment:
      type: object
      properties:
        accessControl:
          type: string
          description: ""
        attachmentId:
          type: string
          description: ""
        attachmentType:
          type: string
          description: Specifies the type of the attachment for the recipient.
        data:
          type: string
          description: ""
        label:
          type: string
          description: ""
        name:
          type: string
          description: ""
        remoteUrl:
          type: string
          description: ""
      description: Contains information about an attachment.
      x-ds-definition-name: attachment
      x-ms-summary: Contains information about an attachment.
    authenticationMethod:
      type: object
      properties:
        authenticationType:
          type: string
          description: "Indicates the type of authentication. Valid values are: PhoneAuth,\
            \ STAN, ISCheck, OFAC, AccessCode, AgeVerify, or SSOAuth. "
        lastProvider:
          type: string
          description: 'The last provider that authenticated the user. '
        lastTimestamp:
          type: string
          description: ' The data and time the user last used the authentication method. '
        totalCount:
          type: integer
          description: 'The number of times the authentication method was used. '
          format: int32
      description: Contains information about the method used for authentication.
      x-ds-definition-name: authenticationMethod
      x-ms-summary: Contains information about the method used for authentication.
    authenticationStatus:
      type: object
      properties:
        accessCodeResult:
          $ref: '#/components/schemas/eventResult'
        ageVerifyResult:
          $ref: '#/components/schemas/eventResult'
        anySocialIDResult:
          $ref: '#/components/schemas/eventResult'
        facebookResult:
          $ref: '#/components/schemas/eventResult'
        googleResult:
          $ref: '#/components/schemas/eventResult'
        identityVerificationResult:
          $ref: '#/components/schemas/eventResult'
        idLookupResult:
          $ref: '#/components/schemas/eventResult'
        idQuestionsResult:
          $ref: '#/components/schemas/eventResult'
        linkedinResult:
          $ref: '#/components/schemas/eventResult'
        liveIDResult:
          $ref: '#/components/schemas/eventResult'
        ofacResult:
          $ref: '#/components/schemas/eventResult'
        openIDResult:
          $ref: '#/components/schemas/eventResult'
        phoneAuthResult:
          $ref: '#/components/schemas/eventResult'
        salesforceResult:
          $ref: '#/components/schemas/eventResult'
        signatureProviderResult:
          $ref: '#/components/schemas/eventResult'
        smsAuthResult:
          $ref: '#/components/schemas/eventResult'
        sTANPinResult:
          $ref: '#/components/schemas/eventResult'
        twitterResult:
          $ref: '#/components/schemas/eventResult'
        yahooResult:
          $ref: '#/components/schemas/eventResult'
      description: Contains information about the authentication status.
      x-ds-definition-name: authenticationStatus
      x-ms-summary: Contains information about the authentication status.
    bccEmailAddress:
      type: object
      properties:
        bccEmailAddressId:
          type: string
          description: "Only users with canManageAccount setting can use this option.\
            \ An array of up to 5 email addresses the envelope is sent to as a BCC\
            \ email. \n \nExample: If your account has BCC for Email Archive set up\
            \ for the email address 'archive@mycompany.com' and you send an envelope\
            \ using the BCC Email Override to send a BCC email to 'salesarchive@mycompany.com',\
            \ then a copy of the envelope is only sent to the 'salesarchive@mycompany.com'\
            \ email address."
        email:
          type: string
          description: "Specifies the BCC email address. DocuSign verifies that the\
            \ email format is correct, but does not verify that the email is active.Using\
            \ this overrides the BCC for Email Archive information setting for this\
            \ envelope.\n\nMaximum of length: 100 characters. "
      description: Contains information about the BCC email address.
      x-ds-definition-name: bccEmailAddress
      x-ms-summary: Contains information about the BCC email address.
    billingCharge:
      type: object
      properties:
        allowedQuantity:
          type: string
          description: "Reserved: TBD"
        blocked:
          type: string
          description: "Reserved: TBD"
        chargeName:
          type: string
          description: |-
            Provides information on what services the charge item is for.

            The following table provides a description of the different chargeName values available at this time.

            | chargeName | Description |
            | --- | --- |
            | id_check | ID Check Charge |
            | in_person_signing | In Person Signing charge |
            | envelopes Included | Sent Envelopes for the account |
            | age_verify | Age verification check |
            | ofac | OFAC Check |
            | id_confirm | ID confirmation check |
            | student_authentication | STAN PIN authentication check |
            | wet_sign_fax | Pages for returning signed documents by fax |
            | attachment_fax | Pages for returning attachments by fax |
            | phone_authentication | Phone authentication charge |
            | powerforms | PowerForm envelopes sent |
            | signer_payments | Payment processing charge |
            | outbound_fax | Send by fax charge |
            | bulk_recipient_envelopes | Bulk Recipient Envelopes sent |
            | sms_authentications | SMS authentication charge |
            | saml_authentications | SAML authentication charge |
            | express_signer_certificate | DocuSign Express Certificate charge |
            | personal_signer_certificate | Personal Signer Certificate charge |
            | safe_certificate | SAFE BioPharma Signer Certificate charge |
            | seats | Included active seats charge |
            | open_trust_certificate | OpenTrust Signer Certificate charge |
        chargeType:
          type: string
          description: "Reserved: TBD"
        chargeUnitOfMeasure:
          type: string
          description: "Reserved: TBD"
        discounts:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/billingDiscount'
        firstEffectiveDate:
          type: string
          description: ""
        includedQuantity:
          type: string
          description: ""
        incrementalQuantity:
          type: string
          description: "Reserved: TBD"
        lastEffectiveDate:
          type: string
          description: ""
        prices:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/billingPrice'
        unitPrice:
          type: string
          description: "Reserved: TBD"
        usedQuantity:
          type: string
          description: ""
      description: Contains information about a billing charge.
      x-ds-definition-name: billingCharge
      x-ms-summary: Contains information about a billing charge.
    billingChargeResponse:
      type: object
      properties:
        billingChargeItems:
          type: array
          description: "Reserved: TBD"
          items:
            $ref: '#/components/schemas/billingCharge'
      description: Defines a billing charge response object.
      x-ds-definition-name: billingChargeResponse
      x-ms-summary: Defines a billing charge response object.
    billingDiscount:
      type: object
      properties:
        beginQuantity:
          type: string
          description: "Reserved: TBD"
        discount:
          type: string
          description: ""
        endQuantity:
          type: string
          description: ""
      description: ""
      x-ds-definition-name: billingDiscount
      x-ms-summary: ""
    billingInvoice:
      type: object
      properties:
        amount:
          type: string
          description: The total amount of the purchase.
        balance:
          type: string
          description: "Reserved: TBD"
        dueDate:
          type: string
          description: "Reserved: TBD"
        invoiceId:
          type: string
          description: ""
        invoiceItems:
          type: array
          description: "Reserved: TBD"
          items:
            $ref: '#/components/schemas/billingInvoiceItem'
        invoiceNumber:
          type: string
          description: "Reserved: TBD"
        invoiceUri:
          type: string
          description: Contains a URI for an endpoint that you can use to retrieve
            invoice information.
        nonTaxableAmount:
          type: string
          description: ""
        pdfAvailable:
          type: string
          description: ""
        taxableAmount:
          type: string
          description: ""
      description: ""
      x-ds-definition-name: billingInvoice
      x-ms-summary: ""
    billingInvoiceItem:
      type: object
      properties:
        chargeAmount:
          type: string
          description: "Reserved: TBD"
        chargeName:
          type: string
          description: "Reserved: TBD"
        invoiceItemId:
          type: string
          description: "Reserved: TBD"
        quantity:
          type: string
          description: The quantity of envelopes to add to the account.
        unitPrice:
          type: string
          description: "Reserved: TBD"
      description: Contains information about an item on a billing invoice.
      x-ds-definition-name: billingInvoiceItem
      x-ms-summary: Contains information about an item on a billing invoice.
    billingInvoicesResponse:
      type: object
      properties:
        billingInvoices:
          type: array
          description: "Reserved: TBD"
          items:
            $ref: '#/components/schemas/billingInvoice'
        nextUri:
          type: string
          description: 'The URI for the next chunk of records based on the search
            request. It is `null` if this is the last set of results for the search. '
        previousUri:
          type: string
          description: 'The URI for the prior chunk of records based on the search
            request. It is `null` if this is the first set of results for the search. '
      description: Defines a billing invoice response object.
      x-ds-definition-name: billingInvoicesResponse
      x-ms-summary: Defines a billing invoice response object.
    billingInvoicesSummary:
      type: object
      properties:
        billingInvoices:
          type: array
          description: "Reserved: TBD"
          items:
            $ref: '#/components/schemas/billingInvoice'
        pastDueBalance:
          type: string
          description: ""
        paymentAllowed:
          type: string
          description: ""
      description: ""
      x-ds-definition-name: billingInvoicesSummary
      x-ms-summary: ""
    billingPayment:
      type: object
      properties:
        amount:
          type: string
          description: "Reserved: TBD"
        invoiceId:
          type: string
          description: "Reserved: TBD"
        paymentId:
          type: string
          description: ""
      description: Contains information on a billing plan.
      x-ds-definition-name: billingPayment
      x-ms-summary: Contains information on a billing plan.
    billingPaymentItem:
      type: object
      properties:
        amount:
          type: string
          description: The total amount of the purchase.
        description:
          type: string
          description: |
            A sender-defined description of the line item.
        paymentDate:
          type: string
          description: ""
        paymentId:
          type: string
          description: ""
        paymentNumber:
          type: string
          description: "When set to **true**, a PDF version of the invoice is available.\
            \ \n\nTo get the PDF, make the call again and change \"Accept:\" in the\
            \ header to \"Accept: application/pdf\"."
      description: ""
      x-ds-definition-name: billingPaymentItem
      x-ms-summary: ""
    billingPaymentRequest:
      type: object
      properties:
        paymentAmount:
          type: string
          description: The payment amount for the past due invoices. This value must
            match the pastDueBalance value retrieved using Get Past Due Invoices.
      description: ""
      x-ds-definition-name: billingPaymentRequest
      x-ms-summary: ""
    billingPaymentResponse:
      type: object
      properties:
        billingPayments:
          type: array
          description: "Reserved: TBD"
          items:
            $ref: '#/components/schemas/billingPayment'
      description: Defines an billing payment response object.
      x-ds-definition-name: billingPaymentResponse
      x-ms-summary: Defines an billing payment response object.
    billingPaymentsResponse:
      type: object
      properties:
        billingPayments:
          type: array
          description: "Reserved: TBD"
          items:
            $ref: '#/components/schemas/billingPaymentItem'
        nextUri:
          type: string
          description: 'The URI for the next chunk of records based on the search
            request. It is `null` if this is the last set of results for the search. '
        previousUri:
          type: string
          description: 'The URI for the prior chunk of records based on the search
            request. It is `null` if this is the first set of results for the search. '
      description: Defines a billing payments response object.
      x-ds-definition-name: billingPaymentsResponse
      x-ms-summary: Defines a billing payments response object.
    billingPlan:
      type: object
      properties:
        appStoreProducts:
          type: array
          description: "Reserved: TBD"
          items:
            $ref: '#/components/schemas/appStoreProduct'
        currencyPlanPrices:
          type: array
          description: "Contains the currencyCode and currencySymbol for the alternate\
            \ currency values for envelopeFee, fixedFee, and seatFee that are configured\
            \ for this plan feature set."
          items:
            $ref: '#/components/schemas/currencyPlanPrice'
        enableSupport:
          type: string
          description: "When set to **true**, then customer support is provided as\
            \ part of the account plan."
        includedSeats:
          type: string
          description: The number of seats (users) included.
        otherDiscountPercent:
          type: string
          description: ""
        paymentCycle:
          type: string
          description: " The payment cycle associated with the plan. The possible\
            \ values are: Monthly or Annually. "
        paymentMethod:
          type: string
          description: ""
        perSeatPrice:
          type: string
          description: The per seat price for the plan.
        planClassification:
          type: string
          description: "Identifies the type of plan. Examples include Business, Corporate,\
            \ Enterprise, Free."
        planFeatureSets:
          type: array
          description: A complex type that sets the feature sets for the account.
          items:
            $ref: '#/components/schemas/featureSet'
        planId:
          type: string
          description: The DocuSign Plan ID for the account.
        planName:
          type: string
          description: The name of the Billing Plan.
        seatDiscounts:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/seatDiscount'
        supportIncidentFee:
          type: string
          description: The support incident fee charged for each support incident.
        supportPlanFee:
          type: string
          description: The support plan fee charged for this plan.
      description: Contains information about a billing plan.
      x-ds-definition-name: billingPlan
      x-ms-summary: Contains information about a billing plan.
    billingPlanInformation:
      type: object
      properties:
        appStoreReceipt:
          $ref: '#/components/schemas/appStoreReceipt'
        billingAddress:
          $ref: '#/components/schemas/accountAddress'
        creditCardInformation:
          $ref: '#/components/schemas/creditCardInformation'
        downgradeReason:
          type: string
          description: ""
        enableSupport:
          type: string
          description: "When set to **true**, then customer support is provided as\
            \ part of the account plan."
        includedSeats:
          type: string
          description: The number of seats (users) included.
        incrementalSeats:
          type: string
          description: "Reserved: TBD"
        paymentProcessorInformation:
          $ref: '#/components/schemas/paymentProcessorInformation'
        planInformation:
          $ref: '#/components/schemas/planInformation'
        referralInformation:
          $ref: '#/components/schemas/referralInformation'
        renewalStatus:
          type: string
          description: ""
        saleDiscountAmount:
          type: string
          description: Reserved for DocuSign use only.
        saleDiscountFixedAmount:
          type: string
          description: Reserved for DocuSign use only.
        saleDiscountPercent:
          type: string
          description: Reserved for DocuSign use only.
        saleDiscountPeriods:
          type: string
          description: Reserved for DocuSign use only.
        saleDiscountSeatPriceOverride:
          type: string
          description: Reserved for DocuSign use only.
      description: ""
      x-ds-definition-name: billingPlanInformation
      x-ms-summary: ""
    billingPlanPreview:
      type: object
      properties:
        currencyCode:
          type: string
          description: Specifies the ISO currency code for the account.
        invoice:
          $ref: '#/components/schemas/billingInvoice'
        isProrated:
          type: string
          description: ""
        subtotalAmount:
          type: string
          description: ""
        taxAmount:
          type: string
          description: ""
        totalAmount:
          type: string
          description: ""
      description: Contains information about a preview billing plan.
      x-ds-definition-name: billingPlanPreview
      x-ms-summary: Contains information about a preview billing plan.
    billingPlanResponse:
      type: object
      properties:
        billingPlan:
          $ref: '#/components/schemas/billingPlan'
        successorPlans:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/billingPlan'
      description: Defines a billing plan response object.
      x-ds-definition-name: billingPlanResponse
      x-ms-summary: Defines a billing plan response object.
    billingPlansResponse:
      type: object
      properties:
        billingPlans:
          type: array
          description: "Reserved: TBD"
          items:
            $ref: '#/components/schemas/billingPlan'
      description: Defines a billing plans response object.
      x-ds-definition-name: billingPlansResponse
      x-ms-summary: Defines a billing plans response object.
    billingPlanUpdateResponse:
      type: object
      properties:
        accountPaymentMethod:
          type: string
          description: ""
        billingPlanPreview:
          $ref: '#/components/schemas/billingPlanPreview'
        currencyCode:
          type: string
          description: Specifies the ISO currency code for the account.
        includedSeats:
          type: string
          description: The number of seats (users) included.
        paymentCycle:
          type: string
          description: ""
        paymentMethod:
          type: string
          description: ""
        planId:
          type: string
          description: The DocuSign Plan ID for the account.
        planName:
          type: string
          description: ""
      description: Defines a billing plan update response object.
      x-ds-definition-name: billingPlanUpdateResponse
      x-ms-summary: Defines a billing plan update response object.
    billingPrice:
      type: object
      properties:
        beginQuantity:
          type: string
          description: "Reserved: TBD"
        endQuantity:
          type: string
          description: ""
        unitPrice:
          type: string
          description: "Reserved: TBD"
      description: ""
      x-ds-definition-name: billingPrice
      x-ms-summary: ""
    brand:
      type: object
      properties:
        brandCompany:
          type: string
          description: The name of the company associated with this brand.
        brandId:
          type: string
          description: The ID used to identify a specific brand in API calls.
        brandName:
          type: string
          description: The name of the brand.
        colors:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/nameValue'
        emailContent:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/brandEmailContent'
        errorDetails:
          $ref: '#/components/schemas/errorDetails'
        isOverridingCompanyName:
          type: string
          description: ""
        isSendingDefault:
          type: string
          description: ""
        isSigningDefault:
          type: string
          description: ""
        landingPages:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/nameValue'
        links:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/brandLink'
        logos:
          $ref: '#/components/schemas/brandLogos'
        resources:
          $ref: '#/components/schemas/brandResourceUrls'
      description: ""
      x-ds-definition-name: brand
      x-ms-summary: ""
    brandEmailContent:
      type: object
      properties:
        content:
          type: string
          description: ""
        emailContentType:
          type: string
          description: ""
        emailToLink:
          type: string
          description: ""
        linkText:
          type: string
          description: ""
      description: ""
      x-ds-definition-name: brandEmailContent
      x-ms-summary: ""
    brandLink:
      type: object
      properties:
        linkText:
          type: string
          description: ""
        linkType:
          type: string
          description: ""
        showLink:
          type: string
          description: ""
        urlOrMailTo:
          type: string
          description: ""
      description: ""
      x-ds-definition-name: brandLink
      x-ms-summary: ""
    brandLogos:
      type: object
      properties:
        email:
          type: string
          description: ""
        primary:
          type: string
          description: ""
        secondary:
          type: string
          description: ""
      description: ""
      x-ds-definition-name: brandLogos
      x-ms-summary: ""
    brandRequest:
      type: object
      properties:
        brandId:
          type: string
          description: The ID of the brand used in API calls
      description: ""
      x-ds-definition-name: brandRequest
      x-ms-summary: ""
    brandResources:
      type: object
      properties:
        createdByUserInfo:
          $ref: '#/components/schemas/userInfo'
        createdDate:
          type: string
          description: ""
        modifiedByUserInfo:
          $ref: '#/components/schemas/userInfo'
        modifiedDate:
          type: string
          description: ""
        modifiedTemplates:
          type: array
          description: ""
          items:
            type: string
        resourcesContentType:
          type: string
          description: ""
        resourcesContentUri:
          type: string
          description: ""
      description: ""
      x-ds-definition-name: brandResources
      x-ms-summary: ""
    brandResourcesList:
      type: object
      properties:
        resourcesContentTypes:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/brandResources'
      description: ""
      x-ds-definition-name: brandResourcesList
      x-ms-summary: ""
    brandResourceUrls:
      type: object
      properties:
        email:
          type: string
          description: ""
        sending:
          type: string
          description: ""
        signing:
          type: string
          description: ""
        signingCaptive:
          type: string
          description: ""
      description: ""
      x-ds-definition-name: brandResourceUrls
      x-ms-summary: ""
    brandsRequest:
      type: object
      properties:
        brands:
          type: array
          description: The list of brands.
          items:
            $ref: '#/components/schemas/brandRequest'
      description: ""
      x-ds-definition-name: brandsRequest
      x-ms-summary: ""
    brandsResponse:
      type: object
      properties:
        brands:
          type: array
          description: The list of brands.
          items:
            $ref: '#/components/schemas/brand'
        recipientBrandIdDefault:
          type: string
          description: The brand seen by envelope recipients when a brand is not explicitly
            set.
        senderBrandIdDefault:
          type: string
          description: The brand seen by envelope senders when a brand is not explicitly
            set.
      description: ""
      x-ds-definition-name: brandsResponse
      x-ms-summary: ""
    bulkEnvelope:
      type: object
      properties:
        bulkRecipientRow:
          type: string
          description: "Reserved: TBD"
        bulkStatus:
          type: string
          description: |-
            Indicates the status of the bulk send operation. Returned values can be:
            * queued
            * processing
            * sent
            * failed
        email:
          type: string
          description: ""
        envelopeId:
          type: string
          description: The envelope ID of the envelope status that failed to post.
        envelopeUri:
          type: string
          description: Contains a URI for an endpoint that you can use to retrieve
            the envelope or envelopes.
        errorDetails:
          $ref: '#/components/schemas/errorDetails'
        name:
          type: string
          description: ""
        submittedDateTime:
          type: string
          description: ""
        transactionId:
          type: string
          description: ' Used to identify an envelope. The id is a sender-generated
            value and is valid in the DocuSign system for 7 days. It is recommended
            that a transaction ID is used for offline signing to ensure that an envelope
            is not sent multiple times. The `transactionId` property can be used determine
            an envelope''s status (i.e. was it created or not) in cases where the
            internet connection was lost before the envelope status was returned.'
      description: ""
      x-ds-definition-name: bulkEnvelope
      x-ms-summary: ""
    bulkEnvelopeStatus:
      type: object
      properties:
        batchId:
          type: string
          description: Specifies an identifier which can be used to retrieve a more
            detailed status of individual bulk recipient batches.
        batchSize:
          type: string
          description: The number of items returned in this response.
        bulkEnvelopes:
          type: array
          description: "Reserved: TBD"
          items:
            $ref: '#/components/schemas/bulkEnvelope'
        bulkEnvelopesBatchUri:
          type: string
          description: "Reserved: TBD"
        endPosition:
          type: string
          description: 'The last position in the result set. '
        failed:
          type: string
          description: 'The number of entries with a status of failed. '
        nextUri:
          type: string
          description: 'The URI for the next chunk of records based on the search
            request. It is `null` if this is the last set of results for the search. '
        previousUri:
          type: string
          description: 'The URI for the prior chunk of records based on the search
            request. It is `null` if this is the first set of results for the search. '
        queued:
          type: string
          description: 'The number of entries with a status of queued. '
        resultSetSize:
          type: string
          description: 'The number of results returned in this response. '
        sent:
          type: string
          description: The number of entries with a status of sent.
        startPosition:
          type: string
          description: Starting position of the current result set.
        submittedDate:
          type: string
          description: ""
        totalSetSize:
          type: string
          description: The total number of items in the search's result set. It will
            always be greater than or equal to the value of the `resultSetSize` field.
      description: ""
      x-ds-definition-name: bulkEnvelopeStatus
      x-ms-summary: ""
    bulkRecipient:
      type: object
      properties:
        accessCode:
          type: string
          description: "If a value is provided, the recipient must enter the value\
            \ as the access code to view and sign the envelope. \n\nMaximum Length:\
            \ 50 characters and it must conform to the account's access code format\
            \ setting.\n\nIf blank, but the signer `accessCode` property is set in\
            \ the envelope, then that value is used.\n\nIf blank and the signer `accessCode`\
            \ property is not set, then the access code is not required."
        email:
          type: string
          description: "Specifies the recipient's email address. \n\nMaximum length:\
            \ 100 characters."
        errorDetails:
          type: array
          description: Array or errors.
          items:
            $ref: '#/components/schemas/errorDetails'
        identification:
          type: string
          description: |-
            Specifies the authentication check used for the signer. If blank then no authentication check is required for the signer. Only one value can be used in this field.

            The acceptable values are:

            * KBA: Enables the normal ID check authentication set up for your account.
            * Phone: Enables phone authentication.
            * SMS: Enables SMS authentication.
        name:
          type: string
          description: "Specifies the recipient's name. \n\nMaximum length: 50 characters."
        note:
          type: string
          description: |
            A note sent to the recipient in the signing email.
            This note is unique to this recipient.
            In the user interface,
            it appears near the upper left corner
            of the document
            on the signing screen.

            Maximum Length: 1000 characters.
        phoneNumber:
          type: string
          description: |-
            This is only used if the Identification field value is Phone or SMS. The value for this field can be a valid telephone number or, if Phone, usersupplied (SMS authentication cannot use a user supplied number). Parenthesis and dashes can be used in the telephone number.

            If `usersupplied` is used, the signer supplies his or her own telephone number.
        recipientSignatureProviderInfo:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/bulkRecipientSignatureProvider'
        rowNumber:
          type: string
          description: ""
        tabLabels:
          type: array
          description: |-
            Specifies values used to populate recipient tabs with information. This allows each bulk recipient signer to have different values for their associated tabs. Any number of `tabLabel` columns can be added to the bulk recipient file.

            The information used in the bulk recipient file header must be the same as the `tabLabel` for the tab.

            The values entered in this column are automatically inserted into the corresponding tab for the recipient in the same row.

            Note that this option cannot be used for tabs that do not have data or that are automatically populated data such as Signature, Full Name, Email Address, Company, Title, and Date Signed tabs.
          items:
            $ref: '#/components/schemas/bulkRecipientTabLabel'
      description: ""
      x-ds-definition-name: bulkRecipient
      x-ms-summary: ""
    bulkRecipientSignatureProvider:
      type: object
      properties:
        name:
          type: string
          description: ""
        value:
          type: string
          description: 'Specifies the value of the tab. '
      description: ""
      x-ds-definition-name: bulkRecipientSignatureProvider
      x-ms-summary: ""
    bulkRecipientsRequest:
      type: object
      properties:
        bulkRecipients:
          type: array
          description: A complex type containing information about the bulk recipients
            in the request.
          items:
            $ref: '#/components/schemas/bulkRecipient'
      description: ""
      x-ds-definition-name: bulkRecipientsRequest
      x-ms-summary: ""
    bulkRecipientsResponse:
      type: object
      properties:
        bulkRecipients:
          type: array
          description: A complex type containing information about the bulk recipients
            in the response.
          items:
            $ref: '#/components/schemas/bulkRecipient'
        endPosition:
          type: string
          description: 'The last position in the result set. '
        nextUri:
          type: string
          description: 'The URI for the next chunk of records based on the search
            request. It is `null` if this is the last set of results for the search. '
        previousUri:
          type: string
          description: 'The URI for the prior chunk of records based on the search
            request. It is `null` if this is the first set of results for the search. '
        resultSetSize:
          type: string
          description: 'The number of results returned in this response. '
        startPosition:
          type: string
          description: Starting position of the current result set.
        totalSetSize:
          type: string
          description: The total number of items in the search's result set. It will
            always be greater than or equal to the value of the `resultSetSize` field.
      description: ""
      x-ds-definition-name: bulkRecipientsResponse
      x-ms-summary: ""
    bulkRecipientsSummaryResponse:
      type: object
      properties:
        bulkRecipients:
          type: array
          description: A complex type containing information about the bulk recipients
            in the response.
          items:
            $ref: '#/components/schemas/bulkRecipient'
        bulkRecipientsCount:
          type: string
          description: The number of items returned in this response.
        bulkRecipientsUri:
          type: string
          description: "The URL for the bulk recipient file with the bulk recipient\
            \ information for this envelope, if applicable. This information is read\
            \ only and is only shown after the bulk recipient file is uploaded to\
            \ the envelope by using the PUT method. "
        errorDetails:
          type: array
          description: Array or errors.
          items:
            $ref: '#/components/schemas/errorDetails'
      description: ""
      x-ds-definition-name: bulkRecipientsSummaryResponse
      x-ms-summary: ""
    bulkRecipientsUpdateResponse:
      type: object
      properties:
        signer:
          $ref: '#/components/schemas/signer'
      description: ""
      x-ds-definition-name: bulkRecipientsUpdateResponse
      x-ms-summary: ""
    bulkRecipientTabLabel:
      type: object
      properties:
        name:
          type: string
          description: ""
        value:
          type: string
          description: 'Specifies the value of the tab. '
      description: ""
      x-ds-definition-name: bulkRecipientTabLabel
      x-ms-summary: ""
    captiveRecipient:
      type: object
      properties:
        clientUserId:
          type: string
          description: "Specifies whether the recipient is embedded or remote. \n\n\
            If the `clientUserId` property is not null then the recipient is embedded.\
            \ Use this field to associate the signer with their userId in your app.\
            \ Authenticating the user is the responsibility of your app when you use\
            \ embedded signing.\n\nNote: if the `clientUserId` property is set and\
            \ either `SignerMustHaveAccount` or `SignerMustLoginToSign` property of\
            \ the account settings is set to  **true**, an error is generated on sending.\
            \ \n\nMaximum length: 100 characters. "
        email:
          type: string
          description: Specifies the email address associated with the captive recipient.
        errorDetails:
          $ref: '#/components/schemas/errorDetails'
        userName:
          type: string
          description: Specifies the user name associated with the captive recipient.
      description: ""
      x-ds-definition-name: captiveRecipient
      x-ms-summary: ""
    captiveRecipientInformation:
      type: object
      properties:
        captiveRecipients:
          type: array
          description: A complex type containing information about one or more captive
            recipients.
          items:
            $ref: '#/components/schemas/captiveRecipient'
      description: ""
      x-ds-definition-name: captiveRecipientInformation
      x-ms-summary: ""
    carbonCopy:
      type: object
      properties:
        accessCode:
          type: string
          description: "If a value is provided, the recipient must enter the value\
            \ as the access code to view and sign the envelope. \n\nMaximum Length:\
            \ 50 characters and it must conform to the account's access code format\
            \ setting.\n\nIf blank, but the signer `accessCode` property is set in\
            \ the envelope, then that value is used.\n\nIf blank and the signer `accessCode`\
            \ property is not set, then the access code is not required."
        addAccessCodeToEmail:
          type: string
          description: This Optional attribute indicates that the access code will
            be added to the email sent to the recipient; this nullifies the Security
            measure of Access Code on the recipient.
        agentCanEditEmail:
          type: string
          description: ""
        agentCanEditName:
          type: string
          description: ""
        clientUserId:
          type: string
          description: "Specifies whether the recipient is embedded or remote. \n\n\
            If the `clientUserId` property is not null then the recipient is embedded.\
            \ Use this field to associate the signer with their userId in your app.\
            \ Authenticating the user is the responsibility of your app when you use\
            \ embedded signing.\n\nNote: if the `clientUserId` property is set and\
            \ either `SignerMustHaveAccount` or `SignerMustLoginToSign` property of\
            \ the account settings is set to  **true**, an error is generated on sending.\
            \ \n\nMaximum length: 100 characters. "
        customFields:
          type: array
          description: An optional array of strings that allows the sender to provide
            custom data about the recipient. This information is returned in the envelope
            status but otherwise not used by DocuSign. Each customField string can
            be a maximum of 100 characters.
          items:
            type: string
        declinedDateTime:
          type: string
          description: The date and time the recipient declined the document. Read
            only.
        declinedReason:
          type: string
          description: The reason the recipient declined the document. Read only.
        deliveredDateTime:
          type: string
          description: "Reserved: For DocuSign use only."
        deliveryMethod:
          type: string
          description: "Reserved: For DocuSign use only."
        documentVisibility:
          type: array
          description: "A list of `documentVisibility` objects. Each object in the\
            \ list specifies whether a document in the envelope is visible to this\
            \ recipient. For the envelope to use this functionality, Document Visibility\
            \ must be enabled for the account and the `enforceSignerVisibility` property\
            \ must be set to **true**."
          items:
            $ref: '#/components/schemas/documentVisibility'
        email:
          type: string
          description: "Email id of the recipient. Notification of the document to\
            \ sign is sent to this email id. \n\nMaximum length: 100 characters. "
        emailNotification:
          $ref: '#/components/schemas/recipientEmailNotification'
        emailRecipientPostSigningURL:
          type: string
          description: ""
        embeddedRecipientStartURL:
          type: string
          description: "Specifies a sender provided valid URL string for redirecting\
            \ an embedded recipient. When using this option, the embedded recipient\
            \ still receives an email from DocuSign, just as a remote recipient would.\
            \ When the document link in the email is clicked the recipient is redirected,\
            \ through DocuSign, to the supplied URL to complete their actions. When\
            \ routing to the URL, the sender's system (the server responding to the\
            \ URL) must request a recipient token to launch a signing session. \n\n\
            If set to `SIGN_AT_DOCUSIGN`, the recipient is directed to an embedded\
            \ signing or viewing process directly at DocuSign. The signing or viewing\
            \ action is initiated by the DocuSign system and the transaction activity\
            \ and Certificate of Completion records will reflect this. In all other\
            \ ways the process is identical to an embedded signing or viewing operation\
            \ that is launched by any partner.\n\nIt is important to remember that\
            \ in a typical embedded workflow the authentication of an embedded recipient\
            \ is the responsibility of the sending application, DocuSign expects that\
            \ senders will follow their own process for establishing the recipient's\
            \ identity. In this workflow the recipient goes through the sending application\
            \ before the embedded signing or viewing process in initiated. However,\
            \ when the sending application sets `EmbeddedRecipientStartURL=SIGN_AT_DOCUSIGN`,\
            \ the recipient goes directly to the embedded signing or viewing process\
            \ bypassing the sending application and any authentication steps the sending\
            \ application would use. In this case, DocuSign recommends that you use\
            \ one of the normal DocuSign authentication features (Access Code, Phone\
            \ Authentication, SMS Authentication, etc.) to verify the identity of\
            \ the recipient.\n\nIf the `clientUserId` property is NOT set, and the\
            \ `embeddedRecipientStartURL` is set, DocuSign will ignore the redirect\
            \ URL and launch the standard signing process for the email recipient.\
            \ Information can be appended to the embedded recipient start URL using\
            \ merge fields. The available merge fields items are: envelopeId, recipientId,\
            \ recipientName, recipientEmail, and customFields. The `customFields`\
            \ property must be set fort the recipient or envelope. The merge fields\
            \ are enclosed in double brackets. \n\n*Example*: \n\n`http://senderHost/[[mergeField1]]/\
            \ beginSigningSession? [[mergeField2]]&[[mergeField3]]` "
        errorDetails:
          $ref: '#/components/schemas/errorDetails'
        excludedDocuments:
          type: array
          description: |-
            Specifies the documents that are not visible to this recipient. Document Visibility must be enabled for the account and the `enforceSignerVisibility` property must be set to **true** for the envelope to use this.

            When enforce signer visibility is enabled, documents with tabs can only be viewed by signers that have a tab on that document. Recipients that have an administrative role (Agent, Editor, or Intermediaries) or informational role (Certified Deliveries or Carbon Copies) can always see all the documents in an envelope, unless they are specifically excluded using this setting when an envelope is sent. Documents that do not have tabs are always visible to all recipients, unless they are specifically excluded using this setting when an envelope is sent.
          items:
            type: string
        faxNumber:
          type: string
          description: Reserved for DocuSign.
        firstName:
          type: string
          description: "The user's first name. \nMaximum Length: 50 characters."
        fullName:
          type: string
          description: Reserved for DocuSign.
        idCheckConfigurationName:
          type: string
          description: "The name of the authentication check to use. This value must\
            \ match one of the authentication types that the account uses. The names\
            \ of these authentication types appear in the web console sending interface\
            \ in the Identify list for a recipient. This setting overrides any default\
            \ authentication setting. Valid values are:\n\n- `Phone Auth $`: The recipient\
            \ must authenticate by using two-factor authentication (2FA). You provide\
            \ the phone number to use for 2FA in the `phoneAuthentication` object.\n\
            - `SMS Auth $`: The recipient must authenticate via SMS. You provide the\
            \ phone number to use in the `smsAuthentication` object.\n- `ID Check\
            \ $`: The  recipient must answer detailed security questions. \n\n**Example**:\
            \ Your account has ID Check and SMS Authentication available. In the web\
            \ console Identify list, these appear as ID Check $ and SMS Auth $. To\
            \ use ID Check in an envelope, the idCheckConfigurationName should be\
            \ ID Check $. For SMS, you would use SMS Auth $, and you would also need\
            \ to add a phone number to the smsAuthentication node."
        idCheckInformationInput:
          $ref: '#/components/schemas/idCheckInformationInput'
        identityVerification:
          $ref: '#/components/schemas/recipientIdentityVerification'
        inheritEmailNotificationConfiguration:
          type: string
          description: "When set to **true** and the envelope recipient creates a\
            \ DocuSign account after signing, the Manage Account Email Notification\
            \ settings are used as the default settings for the recipient's account. "
        lastName:
          type: string
          description: The recipient's last name.
        name:
          type: string
          description: |-
            legal name of the recipient.

            Maximum Length: 100 characters.
        note:
          type: string
          description: |
            A note sent to the recipient in the signing email.
            This note is unique to this recipient.
            In the user interface,
            it appears near the upper left corner
            of the document
            on the signing screen.

            Maximum Length: 1000 characters.
        phoneAuthentication:
          $ref: '#/components/schemas/recipientPhoneAuthentication'
        proofFile:
          $ref: '#/components/schemas/recipientProofFile'
        recipientAttachments:
          type: array
          description: Reserved for DocuSign.
          items:
            $ref: '#/components/schemas/recipientAttachment'
        recipientAuthenticationStatus:
          $ref: '#/components/schemas/authenticationStatus'
        recipientId:
          type: string
          description: Unique for the recipient. It is used by the tab element to
            indicate which recipient is to sign the Document.
        recipientIdGuid:
          type: string
          description: "The globally-unique identifier (GUID) for a specific recipient\
            \ on a specific envelope. If the same recipient is associated with multiple\
            \ envelopes, they will have a different GUID for each one. Read only."
        requireIdLookup:
          type: string
          description: "When set to **true**, the recipient is required to use the\
            \ specified ID check method (including Phone and SMS authentication) to\
            \ validate their identity. "
        roleName:
          type: string
          description: Optional element. Specifies the role name associated with the
            recipient.<br/><br/>This is required when working with template recipients.
        routingOrder:
          type: string
          description: 'Specifies the routing order of the recipient in the envelope. '
        samlAuthentication:
          $ref: '#/components/schemas/recipientSAMLAuthentication'
        sentDateTime:
          type: string
          description: The UTC DateTime when the envelope was sent. Read only.
        signedDateTime:
          type: string
          description: Reserved for DocuSign.
        signingGroupId:
          type: string
          description: "Optional. The ID of the [signing group](https://support.docusign.com/en/guides/ndse-user-guide-signing-groups).\n\
            \n**Note**: When you send an envelope to a signing group, anyone in the\
            \ group can open it and sign it with their own signature. For this reason,\
            \ we recommend that you do not include non-signer recipients (such as\
            \ carbon copy recipients) in the same signing group as signer recipients.\
            \ However, you could create a second signing group for the non-signer\
            \ recipients and change the default action of Needs to Sign to a different\
            \ value, such as Receives a Copy. "
        signingGroupName:
          type: string
          description: "The display name for the signing group. \n\nMaximum Length:\
            \ 100 characters. "
        signingGroupUsers:
          type: array
          description: A complex type that contains information about users in the
            signing group.
          items:
            $ref: '#/components/schemas/userInfo'
        smsAuthentication:
          $ref: '#/components/schemas/recipientSMSAuthentication'
        socialAuthentications:
          type: array
          description: ' Lists the social ID type that can be used for recipient authentication.'
          items:
            $ref: '#/components/schemas/socialAuthentication'
        status:
          type: string
          description: |
            Recipient status.
            <!-- todo -->
        templateLocked:
          type: string
          description: "When set to **true**, the sender cannot change any attributes\
            \ of the recipient. Used only when working with template recipients. "
        templateRequired:
          type: string
          description: "When set to **true**, the sender may not remove the recipient.\
            \ Used only when working with template recipients."
        totalTabCount:
          type: string
          description: The total number of tabs in the documents. Read only.
        userId:
          type: string
          description: "The user ID of the user being accessed. Generally this is\
            \ the user ID of the authenticated user, but if the authenticated user\
            \ is an Admin on the account, this may be another user the Admin user\
            \ is accessing. **Note**: For the [GET /v2/accounts/{accountId}/envelopes](https://developers.docusign.com/esign-rest-api/reference/Envelopes/Envelopes/listStatusChanges/#envelopesInformation)\
            \ method, the `user_id` query parameter is not implemented and should\
            \ not be used."
      description: ""
      x-ds-definition-name: carbonCopy
      x-ms-summary: ""
    certifiedDelivery:
      type: object
      properties:
        accessCode:
          type: string
          description: "If a value is provided, the recipient must enter the value\
            \ as the access code to view and sign the envelope. \n\nMaximum Length:\
            \ 50 characters and it must conform to the account's access code format\
            \ setting.\n\nIf blank, but the signer `accessCode` property is set in\
            \ the envelope, then that value is used.\n\nIf blank and the signer `accessCode`\
            \ property is not set, then the access code is not required."
        addAccessCodeToEmail:
          type: string
          description: This Optional attribute indicates that the access code will
            be added to the email sent to the recipient; this nullifies the Security
            measure of Access Code on the recipient.
        agentCanEditEmail:
          type: string
          description: ""
        agentCanEditName:
          type: string
          description: ""
        clientUserId:
          type: string
          description: "Specifies whether the recipient is embedded or remote. \n\n\
            If the `clientUserId` property is not null then the recipient is embedded.\
            \ Use this field to associate the signer with their userId in your app.\
            \ Authenticating the user is the responsibility of your app when you use\
            \ embedded signing.\n\nNote: if the `clientUserId` property is set and\
            \ either `SignerMustHaveAccount` or `SignerMustLoginToSign` property of\
            \ the account settings is set to  **true**, an error is generated on sending.\
            \ \n\nMaximum length: 100 characters. "
        customFields:
          type: array
          description: An optional array of strings that allows the sender to provide
            custom data about the recipient. This information is returned in the envelope
            status but otherwise not used by DocuSign. Each customField string can
            be a maximum of 100 characters.
          items:
            type: string
        declinedDateTime:
          type: string
          description: The date and time the recipient declined the document. Read
            only.
        declinedReason:
          type: string
          description: The reason the recipient declined the document. Read only.
        deliveredDateTime:
          type: string
          description: "Reserved: For DocuSign use only."
        deliveryMethod:
          type: string
          description: "Reserved: For DocuSign use only."
        documentVisibility:
          type: array
          description: "A list of `documentVisibility` objects. Each object in the\
            \ list specifies whether a document in the envelope is visible to this\
            \ recipient. For the envelope to use this functionality, Document Visibility\
            \ must be enabled for the account and the `enforceSignerVisibility` property\
            \ must be set to **true**."
          items:
            $ref: '#/components/schemas/documentVisibility'
        email:
          type: string
          description: ""
        emailNotification:
          $ref: '#/components/schemas/recipientEmailNotification'
        emailRecipientPostSigningURL:
          type: string
          description: ""
        embeddedRecipientStartURL:
          type: string
          description: "Specifies a sender provided valid URL string for redirecting\
            \ an embedded recipient. When using this option, the embedded recipient\
            \ still receives an email from DocuSign, just as a remote recipient would.\
            \ When the document link in the email is clicked the recipient is redirected,\
            \ through DocuSign, to the supplied URL to complete their actions. When\
            \ routing to the URL, the sender's system (the server responding to the\
            \ URL) must request a recipient token to launch a signing session. \n\n\
            If set to `SIGN_AT_DOCUSIGN`, the recipient is directed to an embedded\
            \ signing or viewing process directly at DocuSign. The signing or viewing\
            \ action is initiated by the DocuSign system and the transaction activity\
            \ and Certificate of Completion records will reflect this. In all other\
            \ ways the process is identical to an embedded signing or viewing operation\
            \ that is launched by any partner.\n\nIt is important to remember that\
            \ in a typical embedded workflow the authentication of an embedded recipient\
            \ is the responsibility of the sending application, DocuSign expects that\
            \ senders will follow their own process for establishing the recipient's\
            \ identity. In this workflow the recipient goes through the sending application\
            \ before the embedded signing or viewing process in initiated. However,\
            \ when the sending application sets `EmbeddedRecipientStartURL=SIGN_AT_DOCUSIGN`,\
            \ the recipient goes directly to the embedded signing or viewing process\
            \ bypassing the sending application and any authentication steps the sending\
            \ application would use. In this case, DocuSign recommends that you use\
            \ one of the normal DocuSign authentication features (Access Code, Phone\
            \ Authentication, SMS Authentication, etc.) to verify the identity of\
            \ the recipient.\n\nIf the `clientUserId` property is NOT set, and the\
            \ `embeddedRecipientStartURL` is set, DocuSign will ignore the redirect\
            \ URL and launch the standard signing process for the email recipient.\
            \ Information can be appended to the embedded recipient start URL using\
            \ merge fields. The available merge fields items are: envelopeId, recipientId,\
            \ recipientName, recipientEmail, and customFields. The `customFields`\
            \ property must be set fort the recipient or envelope. The merge fields\
            \ are enclosed in double brackets. \n\n*Example*: \n\n`http://senderHost/[[mergeField1]]/\
            \ beginSigningSession? [[mergeField2]]&[[mergeField3]]` "
        errorDetails:
          $ref: '#/components/schemas/errorDetails'
        excludedDocuments:
          type: array
          description: |-
            Specifies the documents that are not visible to this recipient. Document Visibility must be enabled for the account and the `enforceSignerVisibility` property must be set to **true** for the envelope to use this.

            When enforce signer visibility is enabled, documents with tabs can only be viewed by signers that have a tab on that document. Recipients that have an administrative role (Agent, Editor, or Intermediaries) or informational role (Certified Deliveries or Carbon Copies) can always see all the documents in an envelope, unless they are specifically excluded using this setting when an envelope is sent. Documents that do not have tabs are always visible to all recipients, unless they are specifically excluded using this setting when an envelope is sent.
          items:
            type: string
        faxNumber:
          type: string
          description: Reserved for DocuSign.
        firstName:
          type: string
          description: "The user's first name. \nMaximum Length: 50 characters."
        fullName:
          type: string
          description: Reserved for DocuSign.
        idCheckConfigurationName:
          type: string
          description: "The name of the authentication check to use. This value must\
            \ match one of the authentication types that the account uses. The names\
            \ of these authentication types appear in the web console sending interface\
            \ in the Identify list for a recipient. This setting overrides any default\
            \ authentication setting. Valid values are:\n\n- `Phone Auth $`: The recipient\
            \ must authenticate by using two-factor authentication (2FA). You provide\
            \ the phone number to use for 2FA in the `phoneAuthentication` object.\n\
            - `SMS Auth $`: The recipient must authenticate via SMS. You provide the\
            \ phone number to use in the `smsAuthentication` object.\n- `ID Check\
            \ $`: The  recipient must answer detailed security questions. \n\n**Example**:\
            \ Your account has ID Check and SMS Authentication available. In the web\
            \ console Identify list, these appear as ID Check $ and SMS Auth $. To\
            \ use ID Check in an envelope, the idCheckConfigurationName should be\
            \ ID Check $. For SMS, you would use SMS Auth $, and you would also need\
            \ to add a phone number to the smsAuthentication node."
        idCheckInformationInput:
          $ref: '#/components/schemas/idCheckInformationInput'
        identityVerification:
          $ref: '#/components/schemas/recipientIdentityVerification'
        inheritEmailNotificationConfiguration:
          type: string
          description: "When set to **true** and the envelope recipient creates a\
            \ DocuSign account after signing, the Manage Account Email Notification\
            \ settings are used as the default settings for the recipient's account. "
        lastName:
          type: string
          description: The recipient's last name.
        name:
          type: string
          description: ""
        note:
          type: string
          description: |
            A note sent to the recipient in the signing email.
            This note is unique to this recipient.
            In the user interface,
            it appears near the upper left corner
            of the document
            on the signing screen.

            Maximum Length: 1000 characters.
        phoneAuthentication:
          $ref: '#/components/schemas/recipientPhoneAuthentication'
        proofFile:
          $ref: '#/components/schemas/recipientProofFile'
        recipientAttachments:
          type: array
          description: Reserved for DocuSign.
          items:
            $ref: '#/components/schemas/recipientAttachment'
        recipientAuthenticationStatus:
          $ref: '#/components/schemas/authenticationStatus'
        recipientId:
          type: string
          description: Unique for the recipient. It is used by the tab element to
            indicate which recipient is to sign the Document.
        recipientIdGuid:
          type: string
          description: "The globally-unique identifier (GUID) for a specific recipient\
            \ on a specific envelope. If the same recipient is associated with multiple\
            \ envelopes, they will have a different GUID for each one. Read only."
        requireIdLookup:
          type: string
          description: "When set to **true**, the recipient is required to use the\
            \ specified ID check method (including Phone and SMS authentication) to\
            \ validate their identity. "
        roleName:
          type: string
          description: Optional element. Specifies the role name associated with the
            recipient.<br/><br/>This is required when working with template recipients.
        routingOrder:
          type: string
          description: 'Specifies the routing order of the recipient in the envelope. '
        samlAuthentication:
          $ref: '#/components/schemas/recipientSAMLAuthentication'
        sentDateTime:
          type: string
          description: The UTC DateTime when the envelope was sent. Read only.
        signedDateTime:
          type: string
          description: Reserved for DocuSign.
        signingGroupId:
          type: string
          description: "Optional. The ID of the [signing group](https://support.docusign.com/en/guides/ndse-user-guide-signing-groups).\n\
            \n**Note**: When you send an envelope to a signing group, anyone in the\
            \ group can open it and sign it with their own signature. For this reason,\
            \ we recommend that you do not include non-signer recipients (such as\
            \ carbon copy recipients) in the same signing group as signer recipients.\
            \ However, you could create a second signing group for the non-signer\
            \ recipients and change the default action of Needs to Sign to a different\
            \ value, such as Receives a Copy. "
        signingGroupName:
          type: string
          description: "The display name for the signing group. \n\nMaximum Length:\
            \ 100 characters. "
        signingGroupUsers:
          type: array
          description: A complex type that contains information about users in the
            signing group.
          items:
            $ref: '#/components/schemas/userInfo'
        smsAuthentication:
          $ref: '#/components/schemas/recipientSMSAuthentication'
        socialAuthentications:
          type: array
          description: ' Lists the social ID type that can be used for recipient authentication.'
          items:
            $ref: '#/components/schemas/socialAuthentication'
        status:
          type: string
          description: |
            Recipient status.
            <!-- todo -->
        templateLocked:
          type: string
          description: "When set to **true**, the sender cannot change any attributes\
            \ of the recipient. Used only when working with template recipients. "
        templateRequired:
          type: string
          description: "When set to **true**, the sender may not remove the recipient.\
            \ Used only when working with template recipients."
        totalTabCount:
          type: string
          description: The total number of tabs in the documents. Read only.
        userId:
          type: string
          description: "The user ID of the user being accessed. Generally this is\
            \ the user ID of the authenticated user, but if the authenticated user\
            \ is an Admin on the account, this may be another user the Admin user\
            \ is accessing. **Note**: For the [GET /v2/accounts/{accountId}/envelopes](https://developers.docusign.com/esign-rest-api/reference/Envelopes/Envelopes/listStatusChanges/#envelopesInformation)\
            \ method, the `user_id` query parameter is not implemented and should\
            \ not be used."
      description: ""
      x-ds-definition-name: certifiedDelivery
      x-ms-summary: ""
    checkbox:
      type: object
      properties:
        anchorCaseSensitive:
          type: string
          description: |-
            Reserved for DocuSign.
            <!--
            When set to **true**, the anchor string does not consider case when matching strings in the document. The default value is **true**.
            -->
        anchorHorizontalAlignment:
          type: string
          description: |
            Reserved for DocuSign.
            <!--
            Specifies the alignment of anchor tabs with anchor strings. Possible values are **left** or **right**. The default value is **left**.
            -->
        anchorIgnoreIfNotPresent:
          type: string
          description: "When set to **true**, this tab is ignored if anchorString\
            \ is not found in the document."
        anchorMatchWholeWord:
          type: string
          description: |
            Reserved for DocuSign.
            <!--
            When set to **true**, the anchor string in this tab matches whole words only (strings embedded in other strings are ignored.) The default value is **true**.
            -->
        anchorString:
          type: string
          description: Specifies the anchor string.
        anchorUnits:
          type: string
          description: |
            Specifies units of the
            `anchorXOffset` and
            `anchorYOffset`.
            Valid units are:

            - `pixels`
            - `inches`
            - `mms`
            - `cms`
        anchorXOffset:
          type: string
          description: |
            Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.
        anchorYOffset:
          type: string
          description: |
            Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.
        conditionalParentLabel:
          type: string
          description: For conditional fields this is the TabLabel of the parent tab
            that controls this tab's visibility.
        conditionalParentValue:
          type: string
          description: |
            For conditional fields, this is the value of the parent tab that controls the tab's visibility.

            If the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use "on" as the value to show that the parent tab is active.
        customTabId:
          type: string
          description: "The DocuSign generated custom tab ID for the custom tab to\
            \ be applied. This can only be used when adding new tabs for a recipient.\
            \ When used, the new tab inherits all the custom tab properties."
        documentId:
          type: string
          description: Specifies the document ID number that the tab is placed on.
            This must refer to an existing Document's ID attribute.
        errorDetails:
          $ref: '#/components/schemas/errorDetails'
        locked:
          type: string
          description: "When set to **true**, the signer cannot change the data of\
            \ the custom tab."
        mergeField:
          $ref: '#/components/schemas/mergeField'
        name:
          type: string
          description: Specifies the tool tip text for the tab.
        pageNumber:
          type: string
          description: |
            Specifies the page number on which the tab is located.
            Must be 1 for supplemental documents.
        recipientId:
          type: string
          description: Unique for the recipient. It is used by the tab element to
            indicate which recipient is to sign the Document.
        required:
          type: string
          description: This property does not apply to `checkbox` tabs. Check boxes
            are always optional.
        requireInitialOnSharedChange:
          type: string
          description: "Optional element for field markup. When set to **true**, the\
            \ signer is required to initial when they modify a shared field."
        selected:
          type: string
          description: "When set to **true**, the checkbox is selected."
        shared:
          type: string
          description: "When set to **true**, this custom tab is shared."
        status:
          type: string
          description: |
            Tab status
            <!-- todo -->
        tabGroupLabels:
          type: array
          description: ""
          items:
            type: string
        tabId:
          type: string
          description: The unique identifier for the tab.
        tabLabel:
          type: string
          description: |
            The label string associated with the tab.
            The string may be the empty string.
            If no value is provided, the tab type is used as the value.

            Maximum of 500 characters.
        tabOrder:
          type: string
          description: |-
            A positive integer that sets the order the tab is navigated to during signing.

            Tabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.
        templateLocked:
          type: string
          description: "When set to **true**, the sender cannot change any attributes\
            \ of the recipient. Used only when working with template recipients. "
        templateRequired:
          type: string
          description: "When set to **true**, the sender may not remove the recipient.\
            \ Used only when working with template recipients."
        tooltip:
          type: string
          description: ""
        xPosition:
          type: string
          description: |
            This property indicates the horizontal offset of the object on the page.
            DocuSign uses 72 DPI when determining position.
            Required. May be zero.

            To improve the tab's position on the document,
            DocuSign recommends
            adjusting `xPosition`
            and `yPosition`
            coordinates
            by (-7, -6)
        yPosition:
          type: string
          description: |
            This property indicates the vertical offset of the object on the page.
            DocuSign uses 72 DPI when determining position.
            Required. May be zero.

            To improve the tab's position on the document,
            DocuSign recommends
            adjusting `xPosition`
            and `yPosition`
            coordinates
            by (-7, -6)
      description: |
        A tab that allows the recipient to select a yes/no (on/off) option.
      x-ds-definition-name: checkbox
      x-ms-summary: |
        A tab that allows the recipient to select a yes/no (on/off) option.
    chunkedUploadPart:
      type: object
      properties:
        sequence:
          type: string
          description: ""
        size:
          type: string
          description: "Reserved: TBD"
      description: ""
      x-ds-definition-name: chunkedUploadPart
      x-ms-summary: ""
    chunkedUploadRequest:
      type: object
      properties:
        chunkedUploadId:
          type: string
          description: ""
        data:
          type: string
          description: ""
      description: ""
      x-ds-definition-name: chunkedUploadRequest
      x-ms-summary: ""
    chunkedUploadResponse:
      type: object
      properties:
        checksum:
          type: string
          description: ""
        chunkedUploadId:
          type: string
          description: ""
        chunkedUploadParts:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/chunkedUploadPart'
        chunkedUploadUri:
          type: string
          description: ""
        committed:
          type: string
          description: ""
        expirationDateTime:
          type: string
          description: ""
        maxChunkedUploadParts:
          type: string
          description: ""
        maxTotalSize:
          type: string
          description: ""
        totalSize:
          type: string
          description: ""
      description: ""
      x-ds-definition-name: chunkedUploadResponse
      x-ms-summary: ""
    cloudStorageProvider:
      type: object
      properties:
        authenticationUrl:
          type: string
          description: "The authentication URL used for the cloud storage provider.\
            \ This information is only included in the response if the user has not\
            \ passed authentication for the cloud storage provider. If the redirectUrl\
            \ query string is provided, the returnUrl is appended to the authenticationUrl. "
        errorDetails:
          $ref: '#/components/schemas/errorDetails'
        redirectUrl:
          type: string
          description: |-
            The URL the user is redirected to after the cloud storage provider authenticates the user. Using this will append the redirectUrl to the authenticationUrl.

            The redirectUrl is restricted to URLs in the docusign.com or docusign.net domains.
        service:
          type: string
          description: The service name for the cloud storage provider.
        serviceId:
          type: string
          description: The DocuSign generated ID for the cloud storage provider
      description: ""
      x-ds-definition-name: cloudStorageProvider
      x-ms-summary: ""
    cloudStorageProviders:
      type: object
      properties:
        storageProviders:
          type: array
          description: An Array containing the storage providers associated with the
            user.
          items:
            $ref: '#/components/schemas/cloudStorageProvider'
      description: ""
      x-ds-definition-name: cloudStorageProviders
      x-ms-summary: ""
    company:
      type: object
      properties:
        anchorCaseSensitive:
          type: string
          description: |-
            Reserved for DocuSign.
            <!--
            When set to **true**, the anchor string does not consider case when matching strings in the document. The default value is **true**.
            -->
        anchorHorizontalAlignment:
          type: string
          description: |
            Reserved for DocuSign.
            <!--
            Specifies the alignment of anchor tabs with anchor strings. Possible values are **left** or **right**. The default value is **left**.
            -->
        anchorIgnoreIfNotPresent:
          type: string
          description: "When set to **true**, this tab is ignored if anchorString\
            \ is not found in the document."
        anchorMatchWholeWord:
          type: string
          description: |
            Reserved for DocuSign.
            <!--
            When set to **true**, the anchor string in this tab matches whole words only (strings embedded in other strings are ignored.) The default value is **true**.
            -->
        anchorString:
          type: string
          description: Specifies the anchor string.
        anchorUnits:
          type: string
          description: |
            Specifies units of the
            `anchorXOffset` and
            `anchorYOffset`.
            Valid units are:

            - `pixels`
            - `inches`
            - `mms`
            - `cms`
        anchorXOffset:
          type: string
          description: |
            Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.
        anchorYOffset:
          type: string
          description: |
            Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.
        bold:
          type: string
          description: "When set to **true**, the information in the tab is bold."
        concealValueOnDocument:
          type: string
          description: |-
            When set to **true**, the field appears normally while the recipient is adding or modifying the information in the field, but the data is not visible (the characters are hidden by asterisks) to any other signer or the sender.

            When an envelope is completed the information is available to the sender through the Form Data link in the DocuSign Console.

            This setting applies only to text boxes and does not affect list boxes, radio buttons, or check boxes.
        conditionalParentLabel:
          type: string
          description: For conditional fields this is the TabLabel of the parent tab
            that controls this tab's visibility.
        conditionalParentValue:
          type: string
          description: |
            For conditional fields, this is the value of the parent tab that controls the tab's visibility.

            If the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use "on" as the value to show that the parent tab is active.
        customTabId:
          type: string
          description: "The DocuSign generated custom tab ID for the custom tab to\
            \ be applied. This can only be used when adding new tabs for a recipient.\
            \ When used, the new tab inherits all the custom tab properties."
        disableAutoSize:
          type: string
          description: "When set to **true**, disables the auto sizing of single line\
            \ text boxes in the signing screen when the signer enters data. If disabled\
            \ users will only be able enter as much data as the text box can hold.\
            \ By default this is false. This property only affects single line text\
            \ boxes."
        documentId:
          type: string
          description: Specifies the document ID number that the tab is placed on.
            This must refer to an existing Document's ID attribute.
        errorDetails:
          $ref: '#/components/schemas/errorDetails'
        font:
          type: string
          description: |
            The font to be used for the tab value. Supported Fonts include:

            - Default
            - Arial
            - ArialNarrow
            - Calibri
            - CourierNew
            - Garamond
            - Georgia
            - Helvetica
            - LucidaConsole
            - MSGothic
            - MSMincho
            - OCR-A
            - Tahoma
            - TimesNewRoman
            - Trebuchet
            - Verdana
        fontColor:
          type: string
          description: "The font color used for the information in the tab. Possible\
            \ values are: \n\n- Black\n- BrightBlue\n- BrightRed\n- DarkGreen\n- DarkRed\n\
            - Gold\n- Green\n- NavyBlue\n- Purple\n- White\n"
        fontSize:
          type: string
          description: |-
            The font size used for the information in the tab. Possible values are:

            - Size7
            - Size8
            - Size9
            - Size10
            - Size11
            - Size12
            - Size14
            - Size16
            - Size18
            - Size20
            - Size22
            - Size24
            - Size26
            - Size28
            - Size36
            - Size48
            - Size72
        italic:
          type: string
          description: "When set to **true**, the information in the tab is italic."
        locked:
          type: string
          description: "When set to **true**, the signer cannot change the data of\
            \ the custom tab."
        maxLength:
          type: integer
          description: An optional value that describes the maximum length of the
            property when the property is a string.
          format: int32
        mergeField:
          $ref: '#/components/schemas/mergeField'
        name:
          type: string
          description: Specifies the tool tip text for the tab.
        originalValue:
          type: string
          description: 'The initial value of the tab when it was sent to the recipient. '
        pageNumber:
          type: string
          description: |
            Specifies the page number on which the tab is located.
            Must be 1 for supplemental documents.
        recipientId:
          type: string
          description: Unique for the recipient. It is used by the tab element to
            indicate which recipient is to sign the Document.
        required:
          type: string
          description: "When set to **true**, the signer is required to fill out this\
            \ tab"
        status:
          type: string
          description: |
            Tab status
            <!-- todo -->
        tabGroupLabels:
          type: array
          description: ""
          items:
            type: string
        tabId:
          type: string
          description: The unique identifier for the tab.
        tabLabel:
          type: string
          description: |
            The label string associated with the tab.
            The string may be the empty string.
            If no value is provided, the tab type is used as the value.

            Maximum of 500 characters.
        tabOrder:
          type: string
          description: |-
            A positive integer that sets the order the tab is navigated to during signing.

            Tabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.
        templateLocked:
          type: string
          description: "When set to **true**, the sender cannot change any attributes\
            \ of the recipient. Used only when working with template recipients. "
        templateRequired:
          type: string
          description: "When set to **true**, the sender may not remove the recipient.\
            \ Used only when working with template recipients."
        tooltip:
          type: string
          description: ""
        underline:
          type: string
          description: "When set to **true**, the information in the tab is underlined."
        value:
          type: string
          description: 'Specifies the value of the tab. '
        width:
          type: integer
          description: Width of the tab in pixels.
          format: int32
        xPosition:
          type: string
          description: |
            This property indicates the horizontal offset of the object on the page.
            DocuSign uses 72 DPI when determining position.
            Required. May be zero.

            To improve the tab's position on the document,
            DocuSign recommends
            adjusting `xPosition`
            and `yPosition`
            coordinates
            by (-3, -2)
        yPosition:
          type: string
          description: |
            This property indicates the vertical offset of the object on the page.
            DocuSign uses 72 DPI when determining position.
            Required. May be zero.

            To improve the tab's position on the document,
            DocuSign recommends
            adjusting `xPosition`
            and `yPosition`
            coordinates
            by (-3, -2)
      description: |
        A tab that displays the recipient's company name.
      x-ds-definition-name: company
      x-ms-summary: |
        A tab that displays the recipient's company name.
    completeSignHashResponse:
      type: object
      properties:
        documents:
          type: array
          description: Complex element contains the details on the documents in the
            envelope.
          items:
            $ref: '#/components/schemas/signHashDocument'
        redirectionUrl:
          type: string
          description: ""
        remainingSignatureRequests:
          type: string
          description: ""
      description: ""
      x-ds-definition-name: completeSignHashResponse
      x-ms-summary: ""
    compositeTemplate:
      type: object
      properties:
        compositeTemplateId:
          type: string
          description: "The identify of this composite template. It is used as a reference\
            \ when adding document object information. If used, the document's `content-disposition`\
            \ must include the composite template ID to which the document should\
            \ be added. If a composite template ID is not specified in the content-disposition,\
            \ the document is applied based on the value of the `documentId` property\
            \ only. If no document object is specified, the composite template inherits\
            \ the first document."
        document:
          $ref: '#/components/schemas/document'
        inlineTemplates:
          type: array
          description: " Zero or more inline templates and their position in the overlay.\
            \ If supplied, they are overlaid into the envelope in the order of their\
            \ Sequence value."
          items:
            $ref: '#/components/schemas/inlineTemplate'
        pdfMetaDataTemplateSequence:
          type: string
          description: ""
        serverTemplates:
          type: array
          description: "0 or more server-side templates and their position in the\
            \ overlay. If supplied, they are overlaid into the envelope in the order\
            \ of their Sequence value"
          items:
            $ref: '#/components/schemas/serverTemplate'
      description: ""
      x-ds-definition-name: compositeTemplate
      x-ms-summary: ""
    connectConfigResults:
      type: object
      properties:
        configurations:
          type: array
          description: Array of Connect Configurations
          items:
            $ref: '#/components/schemas/connectCustomConfiguration'
        totalRecords:
          type: string
          description: Record count.
      description: ""
      x-ds-definition-name: connectConfigResults
      x-ms-summary: ""
    connectCustomConfiguration:
      type: object
      properties:
        allowEnvelopePublish:
          type: string
          description: "When set to **true**, data is sent to the urlToPublishTo web\
            \ address. This option can be set to false to stop sending data while\
            \ maintaining the Connect configuration information."
        allUsers:
          type: string
          description: "When set to **true**, the tracked envelope and recipient events\
            \ for all users, including users that are added a later time, are sent\
            \ through Connect."
        configurationType:
          type: string
          description: "If merge field's are being used, specifies the type of the\
            \ merge field. The only  supported value is **salesforce**."
        connectId:
          type: string
          description: The ID of the custom Connect configuration being accessed.
        enableLog:
          type: string
          description: "This turns Connect logging on or off. When set to **true**,\
            \ logging is turned on."
        envelopeEvents:
          type: string
          description: "A list of envelope-level event statuses that will trigger\
            \ Connect to send updates to the endpoint specified in the `url` property.\
            \ \n\nTo receive notifications, you must include either an `envelopeEvents`\
            \ node or a `recipientEvents` node. You do not need to specify both."
        includeCertificateOfCompletion:
          type: string
          description: "When set to **true**, the Connect Service includes the Certificate\
            \ of Completion with completed envelopes. "
        includeCertSoapHeader:
          type: string
          description: ""
        includeDocumentFields:
          type: string
          description: "When set to **true**, the Document Fields associated with\
            \ the envelope's documents are included in the notification messages.\
            \ Document Fields are optional custom name-value pairs added to documents\
            \ using the API. "
        includeDocuments:
          type: string
          description: reserved
        includeEnvelopeVoidReason:
          type: string
          description: "When set to **true**, if the envelope is voided, the Connect\
            \ Service notification will include the void reason, as entered by the\
            \ person that voided the envelope. "
        includeHMAC:
          type: string
          description: ""
        includeSenderAccountasCustomField:
          type: string
          description: "When set to **true**, Connect will include the sender account\
            \ as Custom Field in the data."
        includeTimeZoneInformation:
          type: string
          description: "When set to **true**, Connect will include the envelope time\
            \ zone information."
        name:
          type: string
          description: ""
        recipientEvents:
          type: string
          description: "An array of recipient event statuses that will trigger Connect\
            \ to send notifications to your webhook listener at the url endpoint specified\
            \ in the `url` property. \n\nTo receive notifications, you must include\
            \ either an `envelopeEvents` node or a `recipientEvents` node. You do\
            \ not need to specify both."
        requiresAcknowledgement:
          type: string
          description: "#### When set to **true**, and SIM mode is activated:\n\n\
            If the HTTP Status response to a notification message is not in the range\
            \ of 200-299 then the message delivery failed, and the configuration is\
            \ marked as *down.*\n\nThe message will be queued and retried once per\
            \ day. While a Connect configuration is marked down, subsequent notifications\
            \ will not be tried, they'll be immediately queued with reason \"Pending.\"\
            \ Once a message succeeds, all queued messages for the configuration will\
            \ be tried immediately, in order.\n\nThere is a maximum of ten retries\
            \ Alternately, you can use Republish Connect Information to manually republish\
            \ the notification.\n\n#### When set to **true**, and SIM mode is not\
            \ activated: \n\nIf the HTTP Status response to a notification message\
            \ is not in the range of 200-299 then the message delivery failed, and\
            \ the message is queued.\n\nThe message will be retried after at least\
            \ a day the next time a subsequent message is successfully sent to this\
            \ configuration (subscription).  Subsequent notifications will be tried\
            \ when they occur.\nThere is a maximum of ten retries Alternately, you\
            \ can use Republish Connect Information to manually republish the notification."
        signMessageWithX509Certificate:
          type: string
          description: "When set to **true**, Mutual TLS will be enabled for notifications.\
            \ Mutual TLS must be initiated by the listener (the customer's web server)\
            \ during the TLS handshake protocol. "
        soapNamespace:
          type: string
          description: |-
            The namespace of the SOAP interface.

            The namespace value must be set if useSoapInterface is set to true.
        urlToPublishTo:
          type: string
          description: This is the web address and name of your listener or Retrieving
            Service endpoint. You need to include HTTPS:// in the web address.
        userIds:
          type: string
          description: "A comma separated list of userIds. This sets the users associated\
            \ with the tracked envelope and recipient events. When a tracked event\
            \ occurs for a set user, the a notification message is sent to your Connect\
            \ listener. \n\n###### Note: If allUsers is set to `false` then you must\
            \ provide a list of user ids."
        useSoapInterface:
          type: string
          description: "When set to **true**, the notifications are sent to your endpoint\
            \ as SOAP requests. "
      description: ""
      x-ds-definition-name: connectCustomConfiguration
      x-ms-summary: ""
    connectDebugLog:
      type: object
      properties:
        connectConfig:
          type: string
          description: ""
        errorDetails:
          $ref: '#/components/schemas/errorDetails'
        eventDateTime:
          type: string
          description: ""
        eventDescription:
          type: string
          description: ""
        payload:
          type: string
          description: ""
      description: ""
      x-ds-definition-name: connectDebugLog
      x-ms-summary: ""
    connectFailureFilter:
      type: object
      properties:
        envelopeIds:
          type: array
          description: ""
          items:
            type: string
        synchronous:
          type: string
          description: ""
      description: ""
      x-ds-definition-name: connectFailureFilter
      x-ms-summary: ""
    connectFailureResult:
      type: object
      properties:
        configId:
          type: string
          description: Reserved for DocuSign.
        configUrl:
          type: string
          description: |
            Reserved for DocuSign.
        envelopeId:
          type: string
          description: The envelope ID of the envelope status that failed to post.
        status:
          type: string
          description: Connection status.
        statusMessage:
          type: string
          description: Connection status message.
      description: ""
      x-ds-definition-name: connectFailureResult
      x-ms-summary: ""
    connectFailureResults:
      type: object
      properties:
        retryQueue:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/connectFailureResult'
      description: ""
      x-ds-definition-name: connectFailureResults
      x-ms-summary: ""
    connectLog:
      type: object
      properties:
        accountId:
          type: string
          description: The account ID associated with the envelope.
        configUrl:
          type: string
          description: The web address of the listener or Retrieving Service end point
            for Connect.
        connectDebugLog:
          type: array
          description: |-
            A complex element containing information about the Connect configuration, error details, date/time, description and payload.

            This is only included in the response if the query additional_info=true is used.
          items:
            $ref: '#/components/schemas/connectDebugLog'
        connectId:
          type: string
          description: "The identifier for the Connect configuration that failed.\
            \ If an account has multiple Connect configurations, this value is used\
            \ to look up the Connect configuration for the failed post."
        created:
          type: string
          description: The date and time the entry was created.
        email:
          type: string
          description: The email that sent the envelope.
        envelopeId:
          type: string
          description: The envelope ID of the envelope status that failed to post.
        error:
          type: string
          description: The error that caused the Connect post to fail.
        failureId:
          type: string
          description: The failure log ID for the failure.
        failureUri:
          type: string
          description: The URI for the failure.
        lastTry:
          type: string
          description: The date and time the last attempt to post.
        logId:
          type: string
          description: The Connect log ID for the entry.
        logUri:
          type: string
          description: The URI for the log item.
        retryCount:
          type: string
          description: The number of times the Connect post has been retried.
        retryUri:
          type: string
          description: The UEI to retry to publish the Connect failure.
        status:
          type: string
          description: "The new envelope status for the failed Connect post. The possible\
            \ values are: Any, Voided, Created, Deleted, Sent, Delivered, Signed,\
            \ Completed, Declined, TimedOut, Template, or Processing."
        subject:
          type: string
          description: The envelope subject.
        userName:
          type: string
          description: The name of the envelope sender.
      description: ""
      x-ds-definition-name: connectLog
      x-ms-summary: ""
    connectLogs:
      type: object
      properties:
        failures:
          type: array
          description: An array of containing failure information from the Connect
            failure log.
          items:
            $ref: '#/components/schemas/connectLog'
        logs:
          type: array
          description: "A complex type containing Connect log information. It is divided\
            \ into two sections, one for regular logs and one for Connect failures. "
          items:
            $ref: '#/components/schemas/connectLog'
        totalRecords:
          type: string
          description: Record count.
        type:
          type: string
          description: "Type of the user. Valid values: type_owner, type_participant."
      description: ""
      x-ds-definition-name: connectLogs
      x-ms-summary: ""
    consoleViewRequest:
      type: object
      properties:
        envelopeId:
          type: string
          description: The envelope ID of the envelope status that failed to post.
        returnUrl:
          type: string
          description: The URL to be redirected to after the console view session
            has ended.
      description: ""
      x-ds-definition-name: consoleViewRequest
      x-ms-summary: ""
    consumerDisclosure:
      type: object
      properties:
        accountEsignId:
          type: string
          description: A GUID identifying the account associated with the consumer
            disclosure
        allowCDWithdraw:
          type: string
          description: Indicates whether the customer can withdraw their acceptance
            of the consumer disclosure.
        allowCDWithdrawMetadata:
          $ref: '#/components/schemas/settingsMetadata'
        changeEmail:
          type: string
          description: ""
        changeEmailOther:
          type: string
          description: ""
        companyName:
          type: string
          description: The name of the user's Company.
        companyPhone:
          type: string
          description: The phone number of the company associated with the consumer
            disclosure.
        copyCostPerPage:
          type: string
          description: ""
        copyFeeCollectionMethod:
          type: string
          description: |-
            Specifies the fee collection method for cases in which the customer requires paper copies of the document.

            Maximum Length: 255 characters
        copyRequestEmail:
          type: string
          description: ""
        custom:
          type: string
          description: ""
        enableEsign:
          type: string
          description: ""
        esignAgreement:
          type: string
          description: The Electronic Record and Signature Disclosure text. The disclosure
            text includes the html formatting.
        esignText:
          type: string
          description: ""
        languageCode:
          type: string
          description: ""
        mustAgreeToEsign:
          type: string
          description: ""
        pdfId:
          type: string
          description: "**Deprecated**\n\nThe `\x80\x9cpdfId` property in the consumer_disclosure\
            \ PUT request is deprecated. For security reasons going forward, any value\
            \ provided in the request packet must be ignored. "
        useBrand:
          type: string
          description: ""
        useConsumerDisclosureWithinAccount:
          type: string
          description: ""
        useConsumerDisclosureWithinAccountMetadata:
          $ref: '#/components/schemas/settingsMetadata'
        withdrawAddressLine1:
          type: string
          description: "Contains the first address line of the postal address to which\
            \ a customer can send a consent withdrawal notification.\n\nMaximum length:\
            \ 100 characters. "
        withdrawAddressLine2:
          type: string
          description: "Contains the second address line of the postal address to\
            \ which a customer can send a consent withdrawal notification.\n\nMaximum\
            \ length: 100 characters. "
        withdrawByEmail:
          type: string
          description: Indicates whether the customer can withdraw consent by email.
        withdrawByMail:
          type: string
          description: Indicates whether the customer can withdraw consent by postal
            mail.
        withdrawByPhone:
          type: string
          description: Indicates whether the customer can withdraw consent by phone.
        withdrawCity:
          type: string
          description: "Contains the city of the postal address to which a customer\
            \ can send a consent withdrawal notification.\n\nMaximum length: 50 characters. "
        withdrawConsequences:
          type: string
          description: Indicates the consequences of withdrawing consent.
        withdrawEmail:
          type: string
          description: "Contains the email address to which a customer can send a\
            \ consent withdrawal notification.\n\nMaximum length: 100 characters. "
        withdrawOther:
          type: string
          description: |-
            Indicates other information need to withdraw consent.

            Maximum length: 255 characters.
        withdrawPhone:
          type: string
          description: "Contains the phone number which a customer can call to register\
            \ consent withdrawal notification.\n\nMaximum length: 20 characters. "
        withdrawPostalCode:
          type: string
          description: "Contains the postal code of the postal address to which a\
            \ customer can send a consent withdrawal notification.\n\nMaximum length:\
            \ 20 characters. "
        withdrawState:
          type: string
          description: Contains the state of the postal address to which a customer
            can send a consent withdrawal notification.
      description: ""
      x-ds-definition-name: consumerDisclosure
      x-ms-summary: ""
    contact:
      type: object
      properties:
        contactId:
          type: string
          description: The unique identifier of a person in the contacts address book.
        contactPhoneNumbers:
          type: array
          description: |-
            A list of the contact's phone numbers.

            **Note**: The phone numbers associated with shared contacts do not display to users other than the user who added the contact. Additionally, in the following scenarios, the phone number of a shared contact does not populate automatically for anyone other than the user who added the contact:

            - Sending an envelope by using SMS
            - Using phone authentication

            You must ask the user who added the contact for the phone number and then manually enter it into the authentication box.
          items:
            $ref: '#/components/schemas/contactPhoneNumber'
        contactUri:
          type: string
          description: The URI for retrieving information about the contact.
        emails:
          type: array
          description: ""
          items:
            type: string
        errorDetails:
          $ref: '#/components/schemas/errorDetails'
        name:
          type: string
          description: ""
        organization:
          type: string
          description: ""
        shared:
          type: string
          description: ""
        signingGroup:
          type: string
          description: ""
        signingGroupName:
          type: string
          description: "The display name for the signing group. \n\nMaximum Length:\
            \ 100 characters. "
      description: ""
      x-ds-definition-name: contact
      x-ms-summary: ""
    contactGetResponse:
      type: object
      properties:
        contacts:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/contact'
        endPosition:
          type: string
          description: 'The last position in the result set. '
        nextUri:
          type: string
          description: 'The URI for the next chunk of records based on the search
            request. It is `null` if this is the last set of results for the search. '
        previousUri:
          type: string
          description: 'The URI for the prior chunk of records based on the search
            request. It is `null` if this is the first set of results for the search. '
        resultSetSize:
          type: string
          description: 'The number of results returned in this response. '
        startPosition:
          type: string
          description: Starting position of the current result set.
        totalSetSize:
          type: string
          description: The total number of items in the search's result set. It will
            always be greater than or equal to the value of the `resultSetSize` field.
      description: ""
      x-ds-definition-name: contactGetResponse
      x-ms-summary: ""
    contactModRequest:
      type: object
      properties:
        contacts:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/contact'
      description: ""
      x-ds-definition-name: contactModRequest
      x-ms-summary: ""
    contactPhoneNumber:
      type: object
      properties:
        phoneNumber:
          type: string
          description: ""
        phoneType:
          type: string
          description: ""
      description: ""
      x-ds-definition-name: contactPhoneNumber
      x-ms-summary: ""
    contactUpdateResponse:
      type: object
      properties:
        contacts:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/contact'
      description: ""
      x-ds-definition-name: contactUpdateResponse
      x-ms-summary: ""
    correctViewRequest:
      type: object
      properties:
        returnUrl:
          type: string
          description: "The url used after correct/send view session has ended. DocuSign\
            \ redirects to the url and includes an event parameter that can be used\
            \ by your app. The event parameters returned are: \n\n* send (user corrected\
            \ and sent the envelope)\n* save (user saved the envelope)\n* cancel (user\
            \ canceled the transaction.)\n* error (there was an error when performing\
            \ the correct or send)\n* sessionEnd (the session ended before the user\
            \ completed a different action)\n\n###### Note: Include https:// in the\
            \ URL or the redirect might not succeed on some browsers. "
        suppressNavigation:
          type: string
          description: Specifies whether the window is displayed with or without dressing.
        viewUrl:
          type: string
          description: ""
      description: ""
      x-ds-definition-name: correctViewRequest
      x-ms-summary: ""
    country:
      type: object
      properties:
        isoCode:
          type: string
          description: ""
        name:
          type: string
          description: ""
        provinces:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/province'
        provinceValidated:
          type: string
          description: ""
      description: ""
      x-ds-definition-name: country
      x-ms-summary: ""
    creditCardInformation:
      type: object
      properties:
        address:
          $ref: '#/components/schemas/addressInformation'
        cardNumber:
          type: string
          description: The number on the credit card.
        cardType:
          type: string
          description: "The credit card type. Valid values are: visa, mastercard,\
            \ or amex."
        expirationMonth:
          type: string
          description: The month that the credit card expires (1-12).
        expirationYear:
          type: string
          description: The year 4 digit year in which the credit card expires.
        nameOnCard:
          type: string
          description: The exact name printed on the credit card.
      description: ""
      x-ds-definition-name: creditCardInformation
      x-ms-summary: ""
    creditCardTypes:
      type: object
      properties:
        cardTypes:
          type: array
          description: An array containing supported credit card types.
          items:
            type: string
      description: ""
      x-ds-definition-name: creditCardTypes
      x-ms-summary: ""
    currencyFeatureSetPrice:
      type: object
      properties:
        currencyCode:
          type: string
          description: 'Specifies the alternate ISO currency code for the account. '
        currencySymbol:
          type: string
          description: Specifies the alternate currency symbol for the account.
        envelopeFee:
          type: string
          description: An incremental envelope cost for plans with envelope overages
            (when `isEnabled` is set to **true**.)
        fixedFee:
          type: string
          description: Specifies a one-time fee associated with the plan (when `isEnabled`
            is set to **true**.)
        seatFee:
          type: string
          description: Specifies an incremental seat cost for seat-based plans (when
            `isEnabled` is set to **true**.)
      description: ""
      x-ds-definition-name: currencyFeatureSetPrice
      x-ms-summary: ""
    currencyPlanPrice:
      type: object
      properties:
        currencyCode:
          type: string
          description: Specifies the ISO currency code for the account.
        currencySymbol:
          type: string
          description: Specifies the currency symbol for the account.
        perSeatPrice:
          type: string
          description: ""
        supportedCardTypes:
          $ref: '#/components/schemas/creditCardTypes'
        supportIncidentFee:
          type: string
          description: The support incident fee charged for each support incident.
        supportPlanFee:
          type: string
          description: The support plan fee charged for this plan.
      description: ""
      x-ds-definition-name: currencyPlanPrice
      x-ms-summary: ""
    customField:
      type: object
      properties:
        customFieldType:
          type: string
          description: ""
        errorDetails:
          $ref: '#/components/schemas/errorDetails'
        fieldId:
          type: string
          description: An ID used to specify a custom field.
        listItems:
          type: array
          description: ""
          items:
            type: string
        name:
          type: string
          description: ""
        required:
          type: string
          description: "When set to **true**, the signer is required to fill out this\
            \ tab"
        show:
          type: string
          description: "A boolean indicating if the value should be displayed.  If\
            \ this value is set to **true**, the custom field is displayed at the\
            \ top of the certificate of completion. If this value is left blank/ or\
            \ set to **false**, then it does not appear in the certificate of completion. "
        value:
          type: string
          description: 'Specifies the value of the tab. '
      description: ""
      x-ds-definition-name: customField
      x-ms-summary: ""
    customField_v2:
      type: object
      properties:
        configurationType:
          type: string
          description: "If merge field's are being used, specifies the type of the\
            \ merge field. The only  supported value is **salesforce**."
        errorDetails:
          $ref: '#/components/schemas/errorDetails'
        fieldId:
          type: string
          description: An ID used to specify a custom field.
        name:
          type: string
          description: ""
        required:
          type: string
          description: "When set to **true**, the signer is required to fill out this\
            \ tab"
        show:
          type: string
          description: "A boolean indicating if the value should be displayed.  If\
            \ this value is set to **true**, the custom field is displayed at the\
            \ top of the certificate of completion. If this value is left blank/ or\
            \ set to **false**, then it does not appear in the certificate of completion. "
        value:
          type: string
          description: The value of the custom field.
      description: ""
      x-ds-definition-name: customField_v2
      x-ms-summary: ""
    customFields:
      type: object
      properties:
        listCustomFields:
          type: array
          description: An array of list custom fields.
          items:
            $ref: '#/components/schemas/listCustomField'
        textCustomFields:
          type: array
          description: An array of text custom fields.
          items:
            $ref: '#/components/schemas/textCustomField'
      description: ""
      x-ds-definition-name: customFields
      x-ms-summary: ""
    customFieldsEnvelope:
      type: object
      properties:
        listCustomFields:
          type: array
          description: An array of list custom fields.
          items:
            $ref: '#/components/schemas/listCustomField'
        textCustomFields:
          type: array
          description: An array of text custom fields.
          items:
            $ref: '#/components/schemas/textCustomField'
      description: ""
      x-ds-definition-name: customFieldsEnvelope
      x-ms-summary: ""
    customSettingsInformation:
      type: object
      properties:
        customSettings:
          type: array
          description: The name/value pair information for the user custom setting.
          items:
            $ref: '#/components/schemas/nameValue'
      description: ""
      x-ds-definition-name: customSettingsInformation
      x-ms-summary: ""
    date:
      type: object
      properties:
        anchorCaseSensitive:
          type: string
          description: |-
            Reserved for DocuSign.
            <!--
            When set to **true**, the anchor string does not consider case when matching strings in the document. The default value is **true**.
            -->
        anchorHorizontalAlignment:
          type: string
          description: |
            Reserved for DocuSign.
            <!--
            Specifies the alignment of anchor tabs with anchor strings. Possible values are **left** or **right**. The default value is **left**.
            -->
        anchorIgnoreIfNotPresent:
          type: string
          description: "When set to **true**, this tab is ignored if anchorString\
            \ is not found in the document."
        anchorMatchWholeWord:
          type: string
          description: |
            Reserved for DocuSign.
            <!--
            When set to **true**, the anchor string in this tab matches whole words only (strings embedded in other strings are ignored.) The default value is **true**.
            -->
        anchorString:
          type: string
          description: Specifies the anchor string.
        anchorUnits:
          type: string
          description: |
            Specifies units of the
            `anchorXOffset` and
            `anchorYOffset`.
            Valid units are:

            - `pixels`
            - `inches`
            - `mms`
            - `cms`
        anchorXOffset:
          type: string
          description: |
            Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.
        anchorYOffset:
          type: string
          description: |
            Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.
        bold:
          type: string
          description: "When set to **true**, the information in the tab is bold."
        concealValueOnDocument:
          type: string
          description: |-
            When set to **true**, the field appears normally while the recipient is adding or modifying the information in the field, but the data is not visible (the characters are hidden by asterisks) to any other signer or the sender.

            When an envelope is completed the information is available to the sender through the Form Data link in the DocuSign Console.

            This setting applies only to text boxes and does not affect list boxes, radio buttons, or check boxes.
        conditionalParentLabel:
          type: string
          description: For conditional fields this is the TabLabel of the parent tab
            that controls this tab's visibility.
        conditionalParentValue:
          type: string
          description: |
            For conditional fields, this is the value of the parent tab that controls the tab's visibility.

            If the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use "on" as the value to show that the parent tab is active.
        customTabId:
          type: string
          description: "The DocuSign generated custom tab ID for the custom tab to\
            \ be applied. This can only be used when adding new tabs for a recipient.\
            \ When used, the new tab inherits all the custom tab properties."
        disableAutoSize:
          type: string
          description: "When set to **true**, disables the auto sizing of single line\
            \ text boxes in the signing screen when the signer enters data. If disabled\
            \ users will only be able enter as much data as the text box can hold.\
            \ By default this is false. This property only affects single line text\
            \ boxes."
        documentId:
          type: string
          description: Specifies the document ID number that the tab is placed on.
            This must refer to an existing Document's ID attribute.
        errorDetails:
          $ref: '#/components/schemas/errorDetails'
        font:
          type: string
          description: |
            The font to be used for the tab value. Supported Fonts include:

            - Default
            - Arial
            - ArialNarrow
            - Calibri
            - CourierNew
            - Garamond
            - Georgia
            - Helvetica
            - LucidaConsole
            - MSGothic
            - MSMincho
            - OCR-A
            - Tahoma
            - TimesNewRoman
            - Trebuchet
            - Verdana
        fontColor:
          type: string
          description: "The font color used for the information in the tab. Possible\
            \ values are: \n\n- Black\n- BrightBlue\n- BrightRed\n- DarkGreen\n- DarkRed\n\
            - Gold\n- Green\n- NavyBlue\n- Purple\n- White\n"
        fontSize:
          type: string
          description: |-
            The font size used for the information in the tab. Possible values are:

            - Size7
            - Size8
            - Size9
            - Size10
            - Size11
            - Size12
            - Size14
            - Size16
            - Size18
            - Size20
            - Size22
            - Size24
            - Size26
            - Size28
            - Size36
            - Size48
            - Size72
        italic:
          type: string
          description: "When set to **true**, the information in the tab is italic."
        locked:
          type: string
          description: "When set to **true**, the signer cannot change the data of\
            \ the custom tab."
        maxLength:
          type: integer
          description: An optional value that describes the maximum length of the
            property when the property is a string.
          format: int32
        mergeField:
          $ref: '#/components/schemas/mergeField'
        name:
          type: string
          description: ""
        originalValue:
          type: string
          description: 'The initial value of the tab when it was sent to the recipient. '
        pageNumber:
          type: string
          description: |
            Specifies the page number on which the tab is located.
            Must be 1 for supplemental documents.
        recipientId:
          type: string
          description: Unique for the recipient. It is used by the tab element to
            indicate which recipient is to sign the Document.
        requireAll:
          type: string
          description: "When set to **true** and shared is true, information must\
            \ be entered in this field to complete the envelope. "
        required:
          type: string
          description: "When set to **true**, the signer is required to fill out this\
            \ tab"
        requireInitialOnSharedChange:
          type: string
          description: "Optional element for field markup. When set to **true**, the\
            \ signer is required to initial when they modify a shared field."
        senderRequired:
          type: string
          description: "When set to **true**, the sender must populate the tab before\
            \ an envelope can be sent using the template. \n\nThis value tab can only\
            \ be changed by modifying (PUT) the template. \n\nTabs with a `senderRequired`\
            \ value of true cannot be deleted from an envelope."
        shared:
          type: string
          description: "When set to **true**, this custom tab is shared."
        status:
          type: string
          description: |
            Tab status
            <!-- todo -->
        tabGroupLabels:
          type: array
          description: ""
          items:
            type: string
        tabId:
          type: string
          description: The unique identifier for the tab.
        tabLabel:
          type: string
          description: |
            The label string associated with the tab.
            The string may be the empty string.
            If no value is provided, the tab type is used as the value.

            Maximum of 500 characters.
        tabOrder:
          type: string
          description: |-
            A positive integer that sets the order the tab is navigated to during signing.

            Tabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.
        templateLocked:
          type: string
          description: "When set to **true**, the sender cannot change any attributes\
            \ of the recipient. Used only when working with template recipients. "
        templateRequired:
          type: string
          description: "When set to **true**, the sender may not remove the recipient.\
            \ Used only when working with template recipients."
        tooltip:
          type: string
          description: ""
        underline:
          type: string
          description: "When set to **true**, the information in the tab is underlined."
        validationMessage:
          type: string
          description: The message displayed if the custom tab fails input validation
            (either custom of embedded).
        validationPattern:
          type: string
          description: A regular expressionn used to validate input for the tab.
        value:
          type: string
          description: 'Specifies the value of the tab. '
        width:
          type: integer
          description: Width of the tab in pixels.
          format: int32
        xPosition:
          type: string
          description: |
            This property indicates the horizontal offset of the object on the page.
            DocuSign uses 72 DPI when determining position.
            Required. May be zero.

            To improve the tab's position on the document,
            DocuSign recommends
            adjusting `xPosition`
            and `yPosition`
            coordinates
            by (-3, -2)
        yPosition:
          type: string
          description: |
            This property indicates the vertical offset of the object on the page.
            DocuSign uses 72 DPI when determining position.
            Required. May be zero.

            To improve the tab's position on the document,
            DocuSign recommends
            adjusting `xPosition`
            and `yPosition`
            coordinates
            by (-3, -2)
      description: |
        A tab that allows the recipient to enter a date. Date tabs
        are one-line fields that allow date information to be
        entered in any format. The tooltip for this tab recommends
        entering the date as MM/DD/YYYY, but this is not enforced.
        The format entered by the signer is retained. If you need a
        particular date format enforced, DocuSign recommends using a
        Text tab with a validation pattern and a validation message
        to enforce the format.
      x-ds-definition-name: date
      x-ms-summary: |
        A tab that allows the recipient to enter a date. Date tabs
        are one-line fields that allow date information to be
        entered in any format. The tooltip for this tab recommends
        entering the date as MM/DD/YYYY, but this is not enforced.
        The format entered by the signer is retained. If you need a
        particular date format enforced, DocuSign recommends using a
        Text tab with a validation pattern and a validation message
        to enforce the format.
    dateSigned:
      type: object
      properties:
        anchorCaseSensitive:
          type: string
          description: |-
            Reserved for DocuSign.
            <!--
            When set to **true**, the anchor string does not consider case when matching strings in the document. The default value is **true**.
            -->
        anchorHorizontalAlignment:
          type: string
          description: |
            Reserved for DocuSign.
            <!--
            Specifies the alignment of anchor tabs with anchor strings. Possible values are **left** or **right**. The default value is **left**.
            -->
        anchorIgnoreIfNotPresent:
          type: string
          description: "When set to **true**, this tab is ignored if anchorString\
            \ is not found in the document."
        anchorMatchWholeWord:
          type: string
          description: |
            Reserved for DocuSign.
            <!--
            When set to **true**, the anchor string in this tab matches whole words only (strings embedded in other strings are ignored.) The default value is **true**.
            -->
        anchorString:
          type: string
          description: Specifies the anchor string.
        anchorUnits:
          type: string
          description: |
            Specifies units of the
            `anchorXOffset` and
            `anchorYOffset`.
            Valid units are:

            - `pixels`
            - `inches`
            - `mms`
            - `cms`
        anchorXOffset:
          type: string
          description: |
            Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.
        anchorYOffset:
          type: string
          description: |
            Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.
        bold:
          type: string
          description: "When set to **true**, the information in the tab is bold."
        conditionalParentLabel:
          type: string
          description: For conditional fields this is the TabLabel of the parent tab
            that controls this tab's visibility.
        conditionalParentValue:
          type: string
          description: |
            For conditional fields, this is the value of the parent tab that controls the tab's visibility.

            If the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use "on" as the value to show that the parent tab is active.
        customTabId:
          type: string
          description: "The DocuSign generated custom tab ID for the custom tab to\
            \ be applied. This can only be used when adding new tabs for a recipient.\
            \ When used, the new tab inherits all the custom tab properties."
        documentId:
          type: string
          description: Specifies the document ID number that the tab is placed on.
            This must refer to an existing Document's ID attribute.
        errorDetails:
          $ref: '#/components/schemas/errorDetails'
        font:
          type: string
          description: |
            The font to be used for the tab value. Supported Fonts include:

            - Default
            - Arial
            - ArialNarrow
            - Calibri
            - CourierNew
            - Garamond
            - Georgia
            - Helvetica
            - LucidaConsole
            - MSGothic
            - MSMincho
            - OCR-A
            - Tahoma
            - TimesNewRoman
            - Trebuchet
            - Verdana
        fontColor:
          type: string
          description: "The font color used for the information in the tab. Possible\
            \ values are: \n\n- Black\n- BrightBlue\n- BrightRed\n- DarkGreen\n- DarkRed\n\
            - Gold\n- Green\n- NavyBlue\n- Purple\n- White\n"
        fontSize:
          type: string
          description: |-
            The font size used for the information in the tab. Possible values are:

            - Size7
            - Size8
            - Size9
            - Size10
            - Size11
            - Size12
            - Size14
            - Size16
            - Size18
            - Size20
            - Size22
            - Size24
            - Size26
            - Size28
            - Size36
            - Size48
            - Size72
        italic:
          type: string
          description: "When set to **true**, the information in the tab is italic."
        mergeField:
          $ref: '#/components/schemas/mergeField'
        name:
          type: string
          description: ""
        pageNumber:
          type: string
          description: |
            Specifies the page number on which the tab is located.
            Must be 1 for supplemental documents.
        recipientId:
          type: string
          description: Unique for the recipient. It is used by the tab element to
            indicate which recipient is to sign the Document.
        status:
          type: string
          description: |
            Tab status
            <!-- todo -->
        tabGroupLabels:
          type: array
          description: ""
          items:
            type: string
        tabId:
          type: string
          description: The unique identifier for the tab.
        tabLabel:
          type: string
          description: |
            The label string associated with the tab.
            The string may be the empty string.
            If no value is provided, the tab type is used as the value.

            Maximum of 500 characters.
        tabOrder:
          type: string
          description: |-
            A positive integer that sets the order the tab is navigated to during signing.

            Tabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.
        templateLocked:
          type: string
          description: "When set to **true**, the sender cannot change any attributes\
            \ of the recipient. Used only when working with template recipients. "
        templateRequired:
          type: string
          description: "When set to **true**, the sender may not remove the recipient.\
            \ Used only when working with template recipients."
        tooltip:
          type: string
          description: ""
        underline:
          type: string
          description: "When set to **true**, the information in the tab is underlined."
        value:
          type: string
          description: 'Specifies the value of the tab. '
        xPosition:
          type: string
          description: |
            This property indicates the horizontal offset of the object on the page.
            DocuSign uses 72 DPI when determining position.
            Required. May be zero.

            To improve the tab's position on the document,
            DocuSign recommends
            adjusting `xPosition`
            and `yPosition`
            coordinates
            by (-3, -2)
        yPosition:
          type: string
          description: |
            This property indicates the vertical offset of the object on the page.
            DocuSign uses 72 DPI when determining position.
            Required. May be zero.

            To improve the tab's position on the document,
            DocuSign recommends
            adjusting `xPosition`
            and `yPosition`
            coordinates
            by (-3, -2)
      description: |
        A tab that displays the date that the recipient signed the
        document.
      x-ds-definition-name: dateSigned
      x-ms-summary: |
        A tab that displays the date that the recipient signed the
        document.
    dateStampProperties:
      type: object
      properties:
        dateAreaHeight:
          type: string
          description: ""
        dateAreaWidth:
          type: string
          description: ""
        dateAreaX:
          type: string
          description: ""
        dateAreaY:
          type: string
          description: ""
      description: ""
      x-ds-definition-name: dateStampProperties
      x-ms-summary: ""
    decline:
      type: object
      properties:
        anchorCaseSensitive:
          type: string
          description: |-
            Reserved for DocuSign.
            <!--
            When set to **true**, the anchor string does not consider case when matching strings in the document. The default value is **true**.
            -->
        anchorHorizontalAlignment:
          type: string
          description: |
            Reserved for DocuSign.
            <!--
            Specifies the alignment of anchor tabs with anchor strings. Possible values are **left** or **right**. The default value is **left**.
            -->
        anchorIgnoreIfNotPresent:
          type: string
          description: "When set to **true**, this tab is ignored if anchorString\
            \ is not found in the document."
        anchorMatchWholeWord:
          type: string
          description: |
            Reserved for DocuSign.
            <!--
            When set to **true**, the anchor string in this tab matches whole words only (strings embedded in other strings are ignored.) The default value is **true**.
            -->
        anchorString:
          type: string
          description: Specifies the anchor string.
        anchorUnits:
          type: string
          description: |
            Specifies units of the
            `anchorXOffset` and
            `anchorYOffset`.
            Valid units are:

            - `pixels`
            - `inches`
            - `mms`
            - `cms`
        anchorXOffset:
          type: string
          description: |
            Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.
        anchorYOffset:
          type: string
          description: |
            Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.
        bold:
          type: string
          description: "When set to **true**, the information in the tab is bold."
        buttonText:
          type: string
          description: ' Specifies the decline text displayed in the tab.'
        conditionalParentLabel:
          type: string
          description: For conditional fields this is the TabLabel of the parent tab
            that controls this tab's visibility.
        conditionalParentValue:
          type: string
          description: |
            For conditional fields, this is the value of the parent tab that controls the tab's visibility.

            If the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use "on" as the value to show that the parent tab is active.
        customTabId:
          type: string
          description: "The DocuSign generated custom tab ID for the custom tab to\
            \ be applied. This can only be used when adding new tabs for a recipient.\
            \ When used, the new tab inherits all the custom tab properties."
        declineReason:
          type: string
          description: The reason the recipient declined the document.
        documentId:
          type: string
          description: Specifies the document ID number that the tab is placed on.
            This must refer to an existing Document's ID attribute.
        errorDetails:
          $ref: '#/components/schemas/errorDetails'
        font:
          type: string
          description: |
            The font to be used for the tab value. Supported Fonts include:

            - Default
            - Arial
            - ArialNarrow
            - Calibri
            - CourierNew
            - Garamond
            - Georgia
            - Helvetica
            - LucidaConsole
            - MSGothic
            - MSMincho
            - OCR-A
            - Tahoma
            - TimesNewRoman
            - Trebuchet
            - Verdana
        fontColor:
          type: string
          description: "The font color used for the information in the tab. Possible\
            \ values are: \n\n- Black\n- BrightBlue\n- BrightRed\n- DarkGreen\n- DarkRed\n\
            - Gold\n- Green\n- NavyBlue\n- Purple\n- White\n"
        fontSize:
          type: string
          description: |-
            The font size used for the information in the tab. Possible values are:

            - Size7
            - Size8
            - Size9
            - Size10
            - Size11
            - Size12
            - Size14
            - Size16
            - Size18
            - Size20
            - Size22
            - Size24
            - Size26
            - Size28
            - Size36
            - Size48
            - Size72
        height:
          type: integer
          description: Height of the tab in pixels.
          format: int32
        italic:
          type: string
          description: "When set to **true**, the information in the tab is italic."
        mergeField:
          $ref: '#/components/schemas/mergeField'
        pageNumber:
          type: string
          description: |
            Specifies the page number on which the tab is located.
            Must be 1 for supplemental documents.
        recipientId:
          type: string
          description: Unique for the recipient. It is used by the tab element to
            indicate which recipient is to sign the Document.
        status:
          type: string
          description: |
            Tab status
            <!-- todo -->
        tabGroupLabels:
          type: array
          description: ""
          items:
            type: string
        tabId:
          type: string
          description: The unique identifier for the tab.
        tabLabel:
          type: string
          description: |
            The label string associated with the tab.
            The string may be the empty string.
            If no value is provided, the tab type is used as the value.

            Maximum of 500 characters.
        tabOrder:
          type: string
          description: |-
            A positive integer that sets the order the tab is navigated to during signing.

            Tabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.
        templateLocked:
          type: string
          description: "When set to **true**, the sender cannot change any attributes\
            \ of the recipient. Used only when working with template recipients. "
        templateRequired:
          type: string
          description: "When set to **true**, the sender may not remove the recipient.\
            \ Used only when working with template recipients."
        tooltip:
          type: string
          description: ""
        underline:
          type: string
          description: "When set to **true**, the information in the tab is underlined."
        width:
          type: integer
          description: Width of the tab in pixels.
          format: int32
        xPosition:
          type: string
          description: |
            This property indicates the horizontal offset of the object on the page.
            DocuSign uses 72 DPI when determining position.
            Required. May be zero.

            To improve the tab's position on the document,
            DocuSign recommends
            adjusting `xPosition`
            and `yPosition`
            coordinates
            by (-3, -2)
        yPosition:
          type: string
          description: |
            This property indicates the vertical offset of the object on the page.
            DocuSign uses 72 DPI when determining position.
            Required. May be zero.

            To improve the tab's position on the document,
            DocuSign recommends
            adjusting `xPosition`
            and `yPosition`
            coordinates
            by (-3, -2)
      description: |
        A tab that allows the recipient the option of declining an
        envelope. If the recipient clicks the tab during the signing
        process, the envelope is voided.
      x-ds-definition-name: decline
      x-ms-summary: |
        A tab that allows the recipient the option of declining an
        envelope. If the recipient clicks the tab during the signing
        process, the envelope is voided.
    diagnosticsSettingsInformation:
      type: object
      properties:
        apiRequestLogging:
          type: string
          description: " When set to **true**, enables API request logging for the\
            \ user. "
        apiRequestLogMaxEntries:
          type: string
          description: Specifies the maximum number of API requests to log.
        apiRequestLogRemainingEntries:
          type: string
          description: Indicates the remaining number of API requests that can be
            logged.
      description: ""
      x-ds-definition-name: diagnosticsSettingsInformation
      x-ms-summary: ""
    dobInformationInput:
      type: object
      properties:
        dateOfBirth:
          type: string
          description: "Specifies the recipient's date, month, and year of birth."
        displayLevelCode:
          type: string
          description: "Specifies the display level for the recipient. \nValid values\
            \ are: \n\n* ReadOnly\n* Editable\n* DoNotDisplay"
        receiveInResponse:
          type: string
          description: "When set to **true**, the information needs to be returned\
            \ in the response."
      description: |-
        Complex type containing:

        * dateOfBirth
        * displayLevelCode
        * receiveInResponse
      x-ds-definition-name: dobInformationInput
      x-ms-summary: |-
        Complex type containing:

        * dateOfBirth
        * displayLevelCode
        * receiveInResponse
    document:
      type: object
      properties:
        applyAnchorTabs:
          type: string
          description: Reserved for DocuSign
        authoritativeCopy:
          type: boolean
          description: |-
            If **true**, this document is considered an authoritative copy.

            If this property is not set, it gets its value from the envelope's `authoritativeCopyDefault` property if it's set, or the envelope's `authoritativeCopy` property.

            If **false**, this document is not an authoritative copy regardless of the envelope's `authoritativeCopyDefault` or `authoritativeCopy` property.
        display:
          type: string
          description: "This string sets the display and behavior properties of\n\
            the document during signing. The possible values are:\n\n* `modal`<br>\n\
            \  The document is shown as a supplement action strip\n  and can be viewed,\
            \ downloaded, or printed in a modal window.\n  This is the recommended\
            \ value for supplemental documents. \n\n* `download`<br>\n  The document\
            \ is shown as a supplement action strip\n  and can be viewed, downloaded,\
            \ or printed in a new browser window. \n\n* `inline`<br>\n  The document\
            \ is shown in the normal signing window.\n  This value is not used with\
            \ supplemental documents,\n  but is the default value for all other documents.\n"
        documentBase64:
          type: string
          description: The document's bytes. This field can be used to include a base64
            version of the document bytes within an envelope definition instead of
            sending the document using a multi-part HTTP request. The maximum document
            size is smaller if this field is used due to the overhead of the base64
            encoding.
        documentFields:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/nameValue'
        documentId:
          type: string
          description: Specifies the document ID of this document. This value is used
            by tabs to determine which document they appear in.
        encryptedWithKeyManager:
          type: string
          description: "When set to **true**, the document is been already encrypted\
            \ by the sender for use with the DocuSign Key Manager Security Appliance.\n\
            \ "
        fileExtension:
          type: string
          description: "The file extension type of the document. Non-PDF documents\
            \ are converted to PDF.\n\nIf the document is not a PDF, `fileExtension`\
            \ is required.\n\nIf you try to upload a non-PDF document without a `fileExtension`,\
            \ you will receive an \"unable to load document\" error message.  \n "
        fileFormatHint:
          type: string
          description: ""
        htmlDefinition:
          $ref: '#/components/schemas/documentHtmlDefinition'
        includeInDownload:
          type: string
          description: "When set to **true**,\nthe document is included in the combined\
            \ document download. \nThe default value is **true**.\n"
        matchBoxes:
          type: array
          description: "Matchboxes define areas in a document for document matching\
            \ when you are creating envelopes. They are only used when you upload\
            \ and edit a template. \n\nA matchbox consists of 5 elements:\n\n* pageNumber\
            \ - The document page number  on which the matchbox will appear. \n* xPosition\
            \ - The x position of the matchbox on a page. \n* yPosition - The y position\
            \ of the matchbox on a page.\n* width - The width of the matchbox. \n\
            * height - The height of the matchbox. \n"
          items:
            $ref: '#/components/schemas/matchBox'
        name:
          type: string
          description: ""
        order:
          type: string
          description: "An optional value that sets the direction order used to sort\
            \ the item list. \n\nValid values are: \n\n* asc = ascending sort order\n\
            * desc = descending sort order "
        pages:
          type: string
          description: ""
        password:
          type: string
          description: ""
        remoteUrl:
          type: string
          description: "The file id from the cloud storage service where the document\
            \ is located. This information is returned using [ML:GET /folders] or\
            \ [ML:/folders/{folderid}]. "
        signerMustAcknowledge:
          type: string
          description: "Sets how the signer interacts with the supplemental document.\n\
            The possible values are: \n\n*\t`no_interaction`<br>\n  No recipient action\
            \ is required. \n\n*\t`view`<br>\n  The recipient is required to view\
            \ the document. \n\n*\t`accept`<br>\n  The recipient is required to accept\
            \ the document by selecting accept during signing, but is not required\
            \ to view the document. \n\n*\t`view_accept`<br>\n  The recipient is required\
            \ to view and accept the document.  \n\n"
        templateLocked:
          type: string
          description: "When set to **true**, the sender cannot change any attributes\
            \ of the recipient. Used only when working with template recipients. "
        templateRequired:
          type: string
          description: "When set to **true**, the sender may not remove the recipient.\
            \ Used only when working with template recipients."
        transformPdfFields:
          type: string
          description: "When set to **true**, PDF form field data is transformed into\
            \ document tab values when the PDF form field name matches the DocuSign\
            \ custom tab tabLabel. The resulting PDF form data is also returned in\
            \ the PDF meta data when requesting the document PDF. See the [ML:Transform\
            \ PDF Fields] section for more information about how fields are transformed\
            \ into DocuSign tabs. "
        uri:
          type: string
          description: ""
      description: A document object.
      x-ds-definition-name: document
      x-ms-summary: A document object.
    documentFieldsInformation:
      type: object
      properties:
        documentFields:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/nameValue'
      description: ""
      x-ds-definition-name: documentFieldsInformation
      x-ms-summary: ""
    documentHtmlCollapsibleDisplaySettings:
      type: object
      properties:
        arrowClosed:
          type: string
          description: ""
        arrowColor:
          type: string
          description: ""
        arrowLocation:
          type: string
          description: ""
        arrowOpen:
          type: string
          description: ""
        arrowSize:
          type: string
          description: ""
        arrowStyle:
          type: string
          description: ""
        containerStyle:
          type: string
          description: ""
        labelStyle:
          type: string
          description: ""
        onlyArrowIsClickable:
          type: boolean
          description: ""
        outerLabelAndArrowStyle:
          type: string
          description: ""
      description: ""
      x-ds-definition-name: documentHtmlCollapsibleDisplaySettings
      x-ms-summary: ""
    documentHtmlDefinition:
      type: object
      properties:
        displayAnchorPrefix:
          type: string
          description: ""
        displayAnchors:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/documentHtmlDisplayAnchor'
        displayOrder:
          type: string
          description: ""
        displayPageNumber:
          type: string
          description: ""
        documentGuid:
          type: string
          description: ""
        documentId:
          type: string
          description: The ID of the document being accessed.
        headerLabel:
          type: string
          description: ""
        maxScreenWidth:
          type: string
          description: ""
        removeEmptyTags:
          type: string
          description: ""
        showMobileOptimizedToggle:
          type: string
          description: ""
        source:
          type: string
          description: ""
      description: ""
      x-ds-definition-name: documentHtmlDefinition
      x-ms-summary: ""
    documentHtmlDefinitionOriginal:
      type: object
      properties:
        documentId:
          type: string
          description: The ID of the document being accessed.
        documentIdGuid:
          type: string
          description: ""
        htmlDefinition:
          $ref: '#/components/schemas/documentHtmlDefinition'
      description: ""
      x-ds-definition-name: documentHtmlDefinitionOriginal
      x-ms-summary: ""
    documentHtmlDefinitionOriginals:
      type: object
      properties:
        htmlDefinitions:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/documentHtmlDefinitionOriginal'
      description: ""
      x-ds-definition-name: documentHtmlDefinitionOriginals
      x-ms-summary: ""
    documentHtmlDefinitions:
      type: object
      properties:
        htmlDefinitions:
          type: array
          description: ""
          items:
            type: string
      description: ""
      x-ds-definition-name: documentHtmlDefinitions
      x-ms-summary: ""
    documentHtmlDisplayAnchor:
      type: object
      properties:
        caseSensitive:
          type: boolean
          description: ""
        displaySettings:
          $ref: '#/components/schemas/documentHtmlDisplaySettings'
        endAnchor:
          type: string
          description: ""
        removeEndAnchor:
          type: boolean
          description: ""
        removeStartAnchor:
          type: boolean
          description: ""
        startAnchor:
          type: string
          description: ""
      description: ""
      x-ds-definition-name: documentHtmlDisplayAnchor
      x-ms-summary: ""
    documentHtmlDisplaySettings:
      type: object
      properties:
        cellStyle:
          type: string
          description: ""
        collapsibleSettings:
          $ref: '#/components/schemas/documentHtmlCollapsibleDisplaySettings'
        display:
          type: string
          description: "This string sets the display and behavior properties of\n\
            the document during signing. The possible values are:\n\n* `modal`<br>\n\
            \  The document is shown as a supplement action strip\n  and can be viewed,\
            \ downloaded, or printed in a modal window.\n  This is the recommended\
            \ value for supplemental documents. \n\n* `download`<br>\n  The document\
            \ is shown as a supplement action strip\n  and can be viewed, downloaded,\
            \ or printed in a new browser window. \n\n* `inline`<br>\n  The document\
            \ is shown in the normal signing window.\n  This value is not used with\
            \ supplemental documents,\n  but is the default value for all other documents.\n"
        displayLabel:
          type: string
          description: ""
        displayOrder:
          type: integer
          description: ""
          format: int32
        displayPageNumber:
          type: integer
          description: ""
          format: int32
        hideLabelWhenOpened:
          type: boolean
          description: ""
        inlineOuterStyle:
          type: string
          description: ""
        labelWhenOpened:
          type: string
          description: ""
        preLabel:
          type: string
          description: ""
        scrollToTopWhenOpened:
          type: boolean
          description: ""
        tableStyle:
          type: string
          description: ""
      description: ""
      x-ds-definition-name: documentHtmlDisplaySettings
      x-ms-summary: ""
    documentTemplate:
      type: object
      properties:
        documentEndPage:
          type: string
          description: ""
        documentId:
          type: string
          description: Specifies the document ID number that the tab is placed on.
            This must refer to an existing Document's ID attribute.
        documentStartPage:
          type: string
          description: ""
        errorDetails:
          $ref: '#/components/schemas/errorDetails'
        templateId:
          type: string
          description: "The unique identifier of the template. If this is not provided,\
            \ DocuSign generates an error and the call fails."
      description: ""
      x-ds-definition-name: documentTemplate
      x-ms-summary: ""
    documentTemplateList:
      type: object
      properties:
        documentTemplates:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/documentTemplate'
      description: ""
      x-ds-definition-name: documentTemplateList
      x-ms-summary: ""
    documentVisibility:
      type: object
      properties:
        documentId:
          type: string
          description: Specifies the document ID number that the tab is placed on.
            This must refer to an existing Document's ID attribute.
        errorDetails:
          $ref: '#/components/schemas/errorDetails'
        recipientId:
          type: string
          description: Unique for the recipient. It is used by the tab element to
            indicate which recipient is to sign the Document.
        rights:
          type: string
          description: ""
        visible:
          type: string
          description: ""
      description: ""
      x-ds-definition-name: documentVisibility
      x-ms-summary: ""
    documentVisibilityList:
      type: object
      properties:
        documentVisibility:
          type: array
          description: "A list of `documentVisibility` objects. Each object in the\
            \ list specifies whether a document in the envelope is visible to this\
            \ recipient. For the envelope to use this functionality, Document Visibility\
            \ must be enabled for the account and the `enforceSignerVisibility` property\
            \ must be set to **true**."
          items:
            $ref: '#/components/schemas/documentVisibility'
      description: ""
      x-ds-definition-name: documentVisibilityList
      x-ms-summary: ""
    editor:
      type: object
      properties:
        accessCode:
          type: string
          description: "If a value is provided, the recipient must enter the value\
            \ as the access code to view and sign the envelope. \n\nMaximum Length:\
            \ 50 characters and it must conform to the account's access code format\
            \ setting.\n\nIf blank, but the signer `accessCode` property is set in\
            \ the envelope, then that value is used.\n\nIf blank and the signer `accessCode`\
            \ property is not set, then the access code is not required."
        addAccessCodeToEmail:
          type: string
          description: This Optional attribute indicates that the access code will
            be added to the email sent to the recipient; this nullifies the Security
            measure of Access Code on the recipient.
        clientUserId:
          type: string
          description: "Specifies whether the recipient is embedded or remote. \n\n\
            If the `clientUserId` property is not null then the recipient is embedded.\
            \ Use this field to associate the signer with their userId in your app.\
            \ Authenticating the user is the responsibility of your app when you use\
            \ embedded signing.\n\nNote: if the `clientUserId` property is set and\
            \ either `SignerMustHaveAccount` or `SignerMustLoginToSign` property of\
            \ the account settings is set to  **true**, an error is generated on sending.\
            \ \n\nMaximum length: 100 characters. "
        customFields:
          type: array
          description: An optional array of strings that allows the sender to provide
            custom data about the recipient. This information is returned in the envelope
            status but otherwise not used by DocuSign. Each customField string can
            be a maximum of 100 characters.
          items:
            type: string
        declinedDateTime:
          type: string
          description: The date and time the recipient declined the document. Read
            only.
        declinedReason:
          type: string
          description: The reason the recipient declined the document. Read only.
        deliveredDateTime:
          type: string
          description: "Reserved: For DocuSign use only."
        deliveryMethod:
          type: string
          description: "Reserved: For DocuSign use only."
        documentVisibility:
          type: array
          description: "A list of `documentVisibility` objects. Each object in the\
            \ list specifies whether a document in the envelope is visible to this\
            \ recipient. For the envelope to use this functionality, Document Visibility\
            \ must be enabled for the account and the `enforceSignerVisibility` property\
            \ must be set to **true**."
          items:
            $ref: '#/components/schemas/documentVisibility'
        email:
          type: string
          description: "Email id of the recipient. Notification of the document to\
            \ sign is sent to this email id. \n\nMaximum length: 100 characters. "
        emailNotification:
          $ref: '#/components/schemas/recipientEmailNotification'
        emailRecipientPostSigningURL:
          type: string
          description: ""
        embeddedRecipientStartURL:
          type: string
          description: "Specifies a sender provided valid URL string for redirecting\
            \ an embedded recipient. When using this option, the embedded recipient\
            \ still receives an email from DocuSign, just as a remote recipient would.\
            \ When the document link in the email is clicked the recipient is redirected,\
            \ through DocuSign, to the supplied URL to complete their actions. When\
            \ routing to the URL, the sender's system (the server responding to the\
            \ URL) must request a recipient token to launch a signing session. \n\n\
            If set to `SIGN_AT_DOCUSIGN`, the recipient is directed to an embedded\
            \ signing or viewing process directly at DocuSign. The signing or viewing\
            \ action is initiated by the DocuSign system and the transaction activity\
            \ and Certificate of Completion records will reflect this. In all other\
            \ ways the process is identical to an embedded signing or viewing operation\
            \ that is launched by any partner.\n\nIt is important to remember that\
            \ in a typical embedded workflow the authentication of an embedded recipient\
            \ is the responsibility of the sending application, DocuSign expects that\
            \ senders will follow their own process for establishing the recipient's\
            \ identity. In this workflow the recipient goes through the sending application\
            \ before the embedded signing or viewing process in initiated. However,\
            \ when the sending application sets `EmbeddedRecipientStartURL=SIGN_AT_DOCUSIGN`,\
            \ the recipient goes directly to the embedded signing or viewing process\
            \ bypassing the sending application and any authentication steps the sending\
            \ application would use. In this case, DocuSign recommends that you use\
            \ one of the normal DocuSign authentication features (Access Code, Phone\
            \ Authentication, SMS Authentication, etc.) to verify the identity of\
            \ the recipient.\n\nIf the `clientUserId` property is NOT set, and the\
            \ `embeddedRecipientStartURL` is set, DocuSign will ignore the redirect\
            \ URL and launch the standard signing process for the email recipient.\
            \ Information can be appended to the embedded recipient start URL using\
            \ merge fields. The available merge fields items are: envelopeId, recipientId,\
            \ recipientName, recipientEmail, and customFields. The `customFields`\
            \ property must be set fort the recipient or envelope. The merge fields\
            \ are enclosed in double brackets. \n\n*Example*: \n\n`http://senderHost/[[mergeField1]]/\
            \ beginSigningSession? [[mergeField2]]&[[mergeField3]]` "
        errorDetails:
          $ref: '#/components/schemas/errorDetails'
        faxNumber:
          type: string
          description: Reserved for DocuSign.
        firstName:
          type: string
          description: "The user's first name. \nMaximum Length: 50 characters."
        fullName:
          type: string
          description: Reserved for DocuSign.
        idCheckConfigurationName:
          type: string
          description: "The name of the authentication check to use. This value must\
            \ match one of the authentication types that the account uses. The names\
            \ of these authentication types appear in the web console sending interface\
            \ in the Identify list for a recipient. This setting overrides any default\
            \ authentication setting. Valid values are:\n\n- `Phone Auth $`: The recipient\
            \ must authenticate by using two-factor authentication (2FA). You provide\
            \ the phone number to use for 2FA in the `phoneAuthentication` object.\n\
            - `SMS Auth $`: The recipient must authenticate via SMS. You provide the\
            \ phone number to use in the `smsAuthentication` object.\n- `ID Check\
            \ $`: The  recipient must answer detailed security questions. \n\n**Example**:\
            \ Your account has ID Check and SMS Authentication available. In the web\
            \ console Identify list, these appear as ID Check $ and SMS Auth $. To\
            \ use ID Check in an envelope, the idCheckConfigurationName should be\
            \ ID Check $. For SMS, you would use SMS Auth $, and you would also need\
            \ to add a phone number to the smsAuthentication node."
        idCheckInformationInput:
          $ref: '#/components/schemas/idCheckInformationInput'
        identityVerification:
          $ref: '#/components/schemas/recipientIdentityVerification'
        inheritEmailNotificationConfiguration:
          type: string
          description: "When set to **true** and the envelope recipient creates a\
            \ DocuSign account after signing, the Manage Account Email Notification\
            \ settings are used as the default settings for the recipient's account. "
        lastName:
          type: string
          description: The recipient's last name.
        name:
          type: string
          description: |-
            legal name of the recipient.

            Maximum Length: 100 characters.
        note:
          type: string
          description: |
            A note sent to the recipient in the signing email.
            This note is unique to this recipient.
            In the user interface,
            it appears near the upper left corner
            of the document
            on the signing screen.

            Maximum Length: 1000 characters.
        phoneAuthentication:
          $ref: '#/components/schemas/recipientPhoneAuthentication'
        recipientAttachments:
          type: array
          description: Reserved for DocuSign.
          items:
            $ref: '#/components/schemas/recipientAttachment'
        recipientAuthenticationStatus:
          $ref: '#/components/schemas/authenticationStatus'
        recipientId:
          type: string
          description: Unique for the recipient. It is used by the tab element to
            indicate which recipient is to sign the Document.
        recipientIdGuid:
          type: string
          description: "The globally-unique identifier (GUID) for a specific recipient\
            \ on a specific envelope. If the same recipient is associated with multiple\
            \ envelopes, they will have a different GUID for each one. Read only."
        requireIdLookup:
          type: string
          description: "When set to **true**, the recipient is required to use the\
            \ specified ID check method (including Phone and SMS authentication) to\
            \ validate their identity. "
        roleName:
          type: string
          description: Optional element. Specifies the role name associated with the
            recipient.<br/><br/>This is required when working with template recipients.
        routingOrder:
          type: string
          description: 'Specifies the routing order of the recipient in the envelope. '
        samlAuthentication:
          $ref: '#/components/schemas/recipientSAMLAuthentication'
        sentDateTime:
          type: string
          description: The UTC DateTime when the envelope was sent. Read only.
        signedDateTime:
          type: string
          description: Reserved for DocuSign.
        signingGroupId:
          type: string
          description: "Optional. The ID of the [signing group](https://support.docusign.com/en/guides/ndse-user-guide-signing-groups).\n\
            \n**Note**: When you send an envelope to a signing group, anyone in the\
            \ group can open it and sign it with their own signature. For this reason,\
            \ we recommend that you do not include non-signer recipients (such as\
            \ carbon copy recipients) in the same signing group as signer recipients.\
            \ However, you could create a second signing group for the non-signer\
            \ recipients and change the default action of Needs to Sign to a different\
            \ value, such as Receives a Copy. "
        signingGroupName:
          type: string
          description: "The display name for the signing group. \n\nMaximum Length:\
            \ 100 characters. "
        signingGroupUsers:
          type: array
          description: A complex type that contains information about users in the
            signing group.
          items:
            $ref: '#/components/schemas/userInfo'
        smsAuthentication:
          $ref: '#/components/schemas/recipientSMSAuthentication'
        socialAuthentications:
          type: array
          description: ' Lists the social ID type that can be used for recipient authentication.'
          items:
            $ref: '#/components/schemas/socialAuthentication'
        status:
          type: string
          description: |
            Recipient status.
            <!-- todo -->
        templateLocked:
          type: string
          description: "When set to **true**, the sender cannot change any attributes\
            \ of the recipient. Used only when working with template recipients. "
        templateRequired:
          type: string
          description: "When set to **true**, the sender may not remove the recipient.\
            \ Used only when working with template recipients."
        totalTabCount:
          type: string
          description: The total number of tabs in the documents. Read only.
        userId:
          type: string
          description: "The user ID of the user being accessed. Generally this is\
            \ the user ID of the authenticated user, but if the authenticated user\
            \ is an Admin on the account, this may be another user the Admin user\
            \ is accessing. **Note**: For the [GET /v2/accounts/{accountId}/envelopes](https://developers.docusign.com/esign-rest-api/reference/Envelopes/Envelopes/listStatusChanges/#envelopesInformation)\
            \ method, the `user_id` query parameter is not implemented and should\
            \ not be used."
      description: ""
      x-ds-definition-name: editor
      x-ms-summary: ""
    email:
      type: object
      properties:
        anchorCaseSensitive:
          type: string
          description: |-
            Reserved for DocuSign.
            <!--
            When set to **true**, the anchor string does not consider case when matching strings in the document. The default value is **true**.
            -->
        anchorHorizontalAlignment:
          type: string
          description: |
            Reserved for DocuSign.
            <!--
            Specifies the alignment of anchor tabs with anchor strings. Possible values are **left** or **right**. The default value is **left**.
            -->
        anchorIgnoreIfNotPresent:
          type: string
          description: "When set to **true**, this tab is ignored if anchorString\
            \ is not found in the document."
        anchorMatchWholeWord:
          type: string
          description: |
            Reserved for DocuSign.
            <!--
            When set to **true**, the anchor string in this tab matches whole words only (strings embedded in other strings are ignored.) The default value is **true**.
            -->
        anchorString:
          type: string
          description: Specifies the anchor string.
        anchorUnits:
          type: string
          description: |
            Specifies units of the
            `anchorXOffset` and
            `anchorYOffset`.
            Valid units are:

            - `pixels`
            - `inches`
            - `mms`
            - `cms`
        anchorXOffset:
          type: string
          description: |
            Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.
        anchorYOffset:
          type: string
          description: |
            Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.
        bold:
          type: string
          description: "When set to **true**, the information in the tab is bold."
        concealValueOnDocument:
          type: string
          description: |-
            When set to **true**, the field appears normally while the recipient is adding or modifying the information in the field, but the data is not visible (the characters are hidden by asterisks) to any other signer or the sender.

            When an envelope is completed the information is available to the sender through the Form Data link in the DocuSign Console.

            This setting applies only to text boxes and does not affect list boxes, radio buttons, or check boxes.
        conditionalParentLabel:
          type: string
          description: For conditional fields this is the TabLabel of the parent tab
            that controls this tab's visibility.
        conditionalParentValue:
          type: string
          description: |
            For conditional fields, this is the value of the parent tab that controls the tab's visibility.

            If the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use "on" as the value to show that the parent tab is active.
        customTabId:
          type: string
          description: "The DocuSign generated custom tab ID for the custom tab to\
            \ be applied. This can only be used when adding new tabs for a recipient.\
            \ When used, the new tab inherits all the custom tab properties."
        disableAutoSize:
          type: string
          description: "When set to **true**, disables the auto sizing of single line\
            \ text boxes in the signing screen when the signer enters data. If disabled\
            \ users will only be able enter as much data as the text box can hold.\
            \ By default this is false. This property only affects single line text\
            \ boxes."
        documentId:
          type: string
          description: Specifies the document ID number that the tab is placed on.
            This must refer to an existing Document's ID attribute.
        errorDetails:
          $ref: '#/components/schemas/errorDetails'
        font:
          type: string
          description: |
            The font to be used for the tab value. Supported Fonts include:

            - Default
            - Arial
            - ArialNarrow
            - Calibri
            - CourierNew
            - Garamond
            - Georgia
            - Helvetica
            - LucidaConsole
            - MSGothic
            - MSMincho
            - OCR-A
            - Tahoma
            - TimesNewRoman
            - Trebuchet
            - Verdana
        fontColor:
          type: string
          description: "The font color used for the information in the tab. Possible\
            \ values are: \n\n- Black\n- BrightBlue\n- BrightRed\n- DarkGreen\n- DarkRed\n\
            - Gold\n- Green\n- NavyBlue\n- Purple\n- White\n"
        fontSize:
          type: string
          description: |-
            The font size used for the information in the tab. Possible values are:

            - Size7
            - Size8
            - Size9
            - Size10
            - Size11
            - Size12
            - Size14
            - Size16
            - Size18
            - Size20
            - Size22
            - Size24
            - Size26
            - Size28
            - Size36
            - Size48
            - Size72
        italic:
          type: string
          description: "When set to **true**, the information in the tab is italic."
        locked:
          type: string
          description: "When set to **true**, the signer cannot change the data of\
            \ the custom tab."
        maxLength:
          type: integer
          description: An optional value that describes the maximum length of the
            property when the property is a string.
          format: int32
        mergeField:
          $ref: '#/components/schemas/mergeField'
        name:
          type: string
          description: ""
        originalValue:
          type: string
          description: 'The initial value of the tab when it was sent to the recipient. '
        pageNumber:
          type: string
          description: |
            Specifies the page number on which the tab is located.
            Must be 1 for supplemental documents.
        recipientId:
          type: string
          description: Unique for the recipient. It is used by the tab element to
            indicate which recipient is to sign the Document.
        requireAll:
          type: string
          description: "When set to **true** and shared is true, information must\
            \ be entered in this field to complete the envelope. "
        required:
          type: string
          description: "When set to **true**, the signer is required to fill out this\
            \ tab"
        requireInitialOnSharedChange:
          type: string
          description: "Optional element for field markup. When set to **true**, the\
            \ signer is required to initial when they modify a shared field."
        senderRequired:
          type: string
          description: "When set to **true**, the sender must populate the tab before\
            \ an envelope can be sent using the template. \n\nThis value tab can only\
            \ be changed by modifying (PUT) the template. \n\nTabs with a `senderRequired`\
            \ value of true cannot be deleted from an envelope."
        shared:
          type: string
          description: "When set to **true**, this custom tab is shared."
        status:
          type: string
          description: |
            Tab status
            <!-- todo -->
        tabGroupLabels:
          type: array
          description: ""
          items:
            type: string
        tabId:
          type: string
          description: The unique identifier for the tab.
        tabLabel:
          type: string
          description: |
            The label string associated with the tab.
            The string may be the empty string.
            If no value is provided, the tab type is used as the value.

            Maximum of 500 characters.
        tabOrder:
          type: string
          description: |-
            A positive integer that sets the order the tab is navigated to during signing.

            Tabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.
        templateLocked:
          type: string
          description: "When set to **true**, the sender cannot change any attributes\
            \ of the recipient. Used only when working with template recipients. "
        templateRequired:
          type: string
          description: "When set to **true**, the sender may not remove the recipient.\
            \ Used only when working with template recipients."
        tooltip:
          type: string
          description: ""
        underline:
          type: string
          description: "When set to **true**, the information in the tab is underlined."
        validationMessage:
          type: string
          description: The message displayed if the custom tab fails input validation
            (either custom of embedded).
        validationPattern:
          type: string
          description: A regular expressionn used to validate input for the tab.
        value:
          type: string
          description: 'Specifies the value of the tab. '
        width:
          type: integer
          description: Width of the tab in pixels.
          format: int32
        xPosition:
          type: string
          description: |
            This property indicates the horizontal offset of the object on the page.
            DocuSign uses 72 DPI when determining position.
            Required. May be zero.

            To improve the tab's position on the document,
            DocuSign recommends
            adjusting `xPosition`
            and `yPosition`
            coordinates
            by (-3, -2)
        yPosition:
          type: string
          description: |
            This property indicates the vertical offset of the object on the page.
            DocuSign uses 72 DPI when determining position.
            Required. May be zero.

            To improve the tab's position on the document,
            DocuSign recommends
            adjusting `xPosition`
            and `yPosition`
            coordinates
            by (-3, -2)
      description: |
        A tab that allows the recipient to enter an email address.
        This is a one-line field that checks that a valid email
        address is entered. It uses the same parameters as a Text
        tab, with the validation message and pattern set for email
        information.

        When getting information that includes
        this tab type, the original value of the tab when the
        associated envelope was sent is included in the response.
      x-ds-definition-name: email
      x-ms-summary: |
        A tab that allows the recipient to enter an email address.
        This is a one-line field that checks that a valid email
        address is entered. It uses the same parameters as a Text
        tab, with the validation message and pattern set for email
        information.

        When getting information that includes
        this tab type, the original value of the tab when the
        associated envelope was sent is included in the response.
    emailAddress:
      type: object
      properties:
        anchorCaseSensitive:
          type: string
          description: |-
            Reserved for DocuSign.
            <!--
            When set to **true**, the anchor string does not consider case when matching strings in the document. The default value is **true**.
            -->
        anchorHorizontalAlignment:
          type: string
          description: |
            Reserved for DocuSign.
            <!--
            Specifies the alignment of anchor tabs with anchor strings. Possible values are **left** or **right**. The default value is **left**.
            -->
        anchorIgnoreIfNotPresent:
          type: string
          description: "When set to **true**, this tab is ignored if anchorString\
            \ is not found in the document."
        anchorMatchWholeWord:
          type: string
          description: |
            Reserved for DocuSign.
            <!--
            When set to **true**, the anchor string in this tab matches whole words only (strings embedded in other strings are ignored.) The default value is **true**.
            -->
        anchorString:
          type: string
          description: Specifies the anchor string.
        anchorUnits:
          type: string
          description: |
            Specifies units of the
            `anchorXOffset` and
            `anchorYOffset`.
            Valid units are:

            - `pixels`
            - `inches`
            - `mms`
            - `cms`
        anchorXOffset:
          type: string
          description: |
            Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.
        anchorYOffset:
          type: string
          description: |
            Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.
        bold:
          type: string
          description: "When set to **true**, the information in the tab is bold."
        conditionalParentLabel:
          type: string
          description: For conditional fields this is the TabLabel of the parent tab
            that controls this tab's visibility.
        conditionalParentValue:
          type: string
          description: |
            For conditional fields, this is the value of the parent tab that controls the tab's visibility.

            If the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use "on" as the value to show that the parent tab is active.
        customTabId:
          type: string
          description: "The DocuSign generated custom tab ID for the custom tab to\
            \ be applied. This can only be used when adding new tabs for a recipient.\
            \ When used, the new tab inherits all the custom tab properties."
        documentId:
          type: string
          description: Specifies the document ID number that the tab is placed on.
            This must refer to an existing Document's ID attribute.
        errorDetails:
          $ref: '#/components/schemas/errorDetails'
        font:
          type: string
          description: |
            The font to be used for the tab value. Supported Fonts include:

            - Default
            - Arial
            - ArialNarrow
            - Calibri
            - CourierNew
            - Garamond
            - Georgia
            - Helvetica
            - LucidaConsole
            - MSGothic
            - MSMincho
            - OCR-A
            - Tahoma
            - TimesNewRoman
            - Trebuchet
            - Verdana
        fontColor:
          type: string
          description: "The font color used for the information in the tab. Possible\
            \ values are: \n\n- Black\n- BrightBlue\n- BrightRed\n- DarkGreen\n- DarkRed\n\
            - Gold\n- Green\n- NavyBlue\n- Purple\n- White\n"
        fontSize:
          type: string
          description: |-
            The font size used for the information in the tab. Possible values are:

            - Size7
            - Size8
            - Size9
            - Size10
            - Size11
            - Size12
            - Size14
            - Size16
            - Size18
            - Size20
            - Size22
            - Size24
            - Size26
            - Size28
            - Size36
            - Size48
            - Size72
        italic:
          type: string
          description: "When set to **true**, the information in the tab is italic."
        mergeField:
          $ref: '#/components/schemas/mergeField'
        name:
          type: string
          description: ""
        pageNumber:
          type: string
          description: |
            Specifies the page number on which the tab is located.
            Must be 1 for supplemental documents.
        recipientId:
          type: string
          description: Unique for the recipient. It is used by the tab element to
            indicate which recipient is to sign the Document.
        status:
          type: string
          description: |
            Tab status
            <!-- todo -->
        tabGroupLabels:
          type: array
          description: ""
          items:
            type: string
        tabId:
          type: string
          description: The unique identifier for the tab.
        tabLabel:
          type: string
          description: |
            The label string associated with the tab.
            The string may be the empty string.
            If no value is provided, the tab type is used as the value.

            Maximum of 500 characters.
        tabOrder:
          type: string
          description: |-
            A positive integer that sets the order the tab is navigated to during signing.

            Tabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.
        templateLocked:
          type: string
          description: "When set to **true**, the sender cannot change any attributes\
            \ of the recipient. Used only when working with template recipients. "
        templateRequired:
          type: string
          description: "When set to **true**, the sender may not remove the recipient.\
            \ Used only when working with template recipients."
        tooltip:
          type: string
          description: ""
        underline:
          type: string
          description: "When set to **true**, the information in the tab is underlined."
        value:
          type: string
          description: 'Specifies the value of the tab. '
        xPosition:
          type: string
          description: |
            This property indicates the horizontal offset of the object on the page.
            DocuSign uses 72 DPI when determining position.
            Required. May be zero.

            To improve the tab's position on the document,
            DocuSign recommends
            adjusting `xPosition`
            and `yPosition`
            coordinates
            by (-3, -2)
        yPosition:
          type: string
          description: |
            This property indicates the vertical offset of the object on the page.
            DocuSign uses 72 DPI when determining position.
            Required. May be zero.

            To improve the tab's position on the document,
            DocuSign recommends
            adjusting `xPosition`
            and `yPosition`
            coordinates
            by (-3, -2)
      description: |
        A tab that displays the recipient's email as entered in the
        recipient information.
      x-ds-definition-name: emailAddress
      x-ms-summary: |
        A tab that displays the recipient's email as entered in the
        recipient information.
    emailSettings:
      type: object
      properties:
        bccEmailAddresses:
          type: array
          description: |-
            An array containing the email address that should receive a copy of all email communications related to an envelope for archiving purposes. Maximum Length: 100 characters.

            **Note**: While this property is an array, it takes only a single email address.
          items:
            $ref: '#/components/schemas/bccEmailAddress'
        replyEmailAddressOverride:
          type: string
          description: ""
        replyEmailNameOverride:
          type: string
          description: ""
      description: ""
      x-ds-definition-name: emailSettings
      x-ms-summary: ""
    eNoteConfiguration:
      type: object
      properties:
        connectConfigured:
          type: string
          description: ""
        eNoteConfigured:
          type: string
          description: ""
        organization:
          type: string
          description: ""
        password:
          type: string
          description: ""
        userName:
          type: string
          description: ""
      description: ""
      x-ds-definition-name: eNoteConfiguration
      x-ms-summary: ""
    envelope:
      type: object
      properties:
        allowMarkup:
          type: string
          description: "When set to **true**, Document Markup is enabled for envelope.\
            \ Account must have Document Markup enabled to use this"
        allowReassign:
          type: string
          description: "When set to **true**, the recipient can redirect an envelope\
            \ to a more appropriate recipient."
        allowViewHistory:
          type: string
          description: ""
        asynchronous:
          type: string
          description: "When set to **true**, the envelope is queued for processing\
            \ and the value of the `status` property is set to 'Processing'. Additionally,\
            \ get status calls return 'Processing' until completed. \n\n\n**Note**:\
            \ A `transactionId` is required for this call to work correctly. When\
            \ the envelope is created, the status is 'Processing' and an `envelopeId`\
            \ is not returned in the response. To get the `envelopeId`, use a GET\
            \ envelope query using the [transactionId](https://developers.docusign.com/esign-rest-api/reference/Envelopes/Envelopes/create/#envelopeDefinition)\
            \ or by checking the Connect notification."
        attachmentsUri:
          type: string
          description: ""
        authoritativeCopy:
          type: string
          description: "Specifies whether all documents in this envelope are authoritative\
            \ copies.\nA document can set its own `authoritativeCopy` property to\
            \ override this value. For example you can set the `authoritativeCopy`\
            \ on an envelope level to true but can turn it off for a specific document. "
        authoritativeCopyDefault:
          type: string
          description: |-
            The default `authoritativeCopy` setting for documents in this envelope that do not have `authoritativeCopy` set.
            If this property is not set, each document defaults to the envelope's `authoritativeCopy`.
        autoNavigation:
          type: string
          description: "When set to **true**, autonavigation is set for the recipient."
        brandId:
          type: string
          description: The unique identifier of a brand.
        brandLock:
          type: string
          description: ""
        certificateUri:
          type: string
          description: Retrieves a URI for an endpoint allowing you to easily retrieve
            certificate information.
        completedDateTime:
          type: string
          description: Specifies the date and time this item was completed.
        copyRecipientData:
          type: string
          description: ""
        createdDateTime:
          type: string
          description: Indicates the date and time the item was created.
        customFields:
          $ref: '#/components/schemas/AccountCustomFields'
        customFieldsUri:
          type: string
          description: Contains a URI for an endpoint to retrieve the custom fields.
        declinedDateTime:
          type: string
          description: The date and time the recipient declined the document. Read
            only.
        deletedDateTime:
          type: string
          description: Specifies the data and time the item was deleted.
        deliveredDateTime:
          type: string
          description: "Reserved: For DocuSign use only."
        disableResponsiveDocument:
          type: string
          description: ""
        documentsCombinedUri:
          type: string
          description: ""
        documentsUri:
          type: string
          description: Contains a URI for an endpoint that you can use to retrieve
            the documents.
        emailBlurb:
          type: string
          description: ""
        emailSettings:
          $ref: '#/components/schemas/emailSettings'
        emailSubject:
          type: string
          description: |-
            Specifies the subject of the email that is sent to all recipients.

            See [ML:Template Email Subject Merge Fields] for information about adding merge field information to the email subject.
        enableWetSign:
          type: string
          description: "When set to **true**, the signer is allowed to print the document\
            \ and sign it on paper."
        enforceSignerVisibility:
          type: string
          description: |-
            When set to **true**, documents with tabs can only be viewed by signers that have a tab on that document. Recipients that have an administrative role (Agent, Editor, or Intermediaries) or informational role (Certified Deliveries or Carbon Copies) can always see all the documents in an envelope, unless they are specifically excluded using this setting when an envelope is sent. Documents that do not have tabs are always visible to all recipients, unless they are specifically excluded using this setting when an envelope is sent.

            ###### Note: Your account must have Document Visibility enabled to use this.
        envelopeId:
          type: string
          description: 'The envelope''s GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec '
        envelopeIdStamping:
          type: string
          description: "When set to **true**, Envelope ID Stamping is enabled."
        envelopeUri:
          type: string
          description: Contains a URI for an endpoint that you can use to retrieve
            the envelope or envelopes.
        initialSentDateTime:
          type: string
          description: ""
        is21CFRPart11:
          type: string
          description: "When set to **true**, indicates that this module is enabled\
            \ on the account."
        isSignatureProviderEnvelope:
          type: string
          description: ""
        lastModifiedDateTime:
          type: string
          description: The date and time the item was last modified.
        lockInformation:
          $ref: '#/components/schemas/EnvelopeLocks'
        messageLock:
          type: string
          description: "When set to **true**, prevents senders from changing the contents\
            \ of `emailBlurb` and `emailSubject` properties for the envelope. \n\n\
            Additionally, this prevents users from making changes to the contents\
            \ of `emailBlurb` and `emailSubject` properties when correcting envelopes.\
            \ \n\nHowever, if the `messageLock` node is set to **true** and the `emailSubject`\
            \ property is empty, senders and correctors are able to add a subject\
            \ to the envelope."
        notification:
          $ref: '#/components/schemas/notification'
        notificationUri:
          type: string
          description: Contains a URI for an endpoint that you can use to retrieve
            the notifications.
        purgeState:
          type: string
          description: |+
            Shows the current purge state for the envelope. The possible values are:

            * `unpurged`: There has been no successful request to purge documents.
            * `documents_queued`: The envelope documents have been added to the purge queue, but have not been purged.
            * `documents_dequeued`: The envelope documents have been taken out of the purge queue.
            * `documents_and_metadata_queued`: The envelope documents and metadata have been added to the purge queue, but have not yet been purged.
            * `documents_purged`: The envelope documents have been successfully purged.
            * `documents_and_metadata_purged`: The envelope documents and metadata have been successfully purged.

        recipients:
          $ref: '#/components/schemas/EnvelopeRecipients'
        recipientsLock:
          type: string
          description: "When set to **true**, prevents senders from changing, correcting,\
            \ or deleting the recipient information for the envelope."
        recipientsUri:
          type: string
          description: Contains a URI for an endpoint that you can use to retrieve
            the recipients.
        sentDateTime:
          type: string
          description: The UTC DateTime when the envelope was sent. Read only.
        signerCanSignOnMobile:
          type: string
          description: ""
        signingLocation:
          type: string
          description: Specifies the physical location where the signing takes place.
            It can have two enumeration values; InPerson and Online. The default value
            is Online.
        status:
          type: string
          description: Item status. <!-- TODO -->
        statusChangedDateTime:
          type: string
          description: The data and time the status changed.
        templatesUri:
          type: string
          description: Contains a URI for an endpoint which you can use to retrieve
            the templates.
        transactionId:
          type: string
          description: Specifies the Transaction ID from the AppStore.
        useDisclosure:
          type: string
          description: "When set to **true**, the disclosure is shown to recipients\
            \ in accordance with the account's Electronic Record and Signature Disclosure\
            \ frequency setting. When set to **false**, the Electronic Record and\
            \ Signature Disclosure is not shown to any envelope recipients. \n\nIf\
            \ the `useDisclosure` property is not set, then the account's normal disclosure\
            \ setting is used and the value of the `useDisclosure` property is not\
            \ returned in responses when getting envelope information."
        voidedDateTime:
          type: string
          description: The date and time the envelope or template was voided.
        voidedReason:
          type: string
          description: The reason the envelope or template was voided.
      description: ""
      x-ds-definition-name: envelope
      x-ms-summary: ""
    envelopeAttachment:
      type: object
      properties:
        accessControl:
          type: string
          description: ""
        attachmentId:
          type: string
          description: ""
        attachmentType:
          type: string
          description: ""
        errorDetails:
          $ref: '#/components/schemas/errorDetails'
        label:
          type: string
          description: ""
        name:
          type: string
          description: ""
      description: ""
      x-ds-definition-name: envelopeAttachment
      x-ms-summary: ""
    envelopeAttachmentsRequest:
      type: object
      properties:
        attachments:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/attachment'
      description: ""
      x-ds-definition-name: envelopeAttachmentsRequest
      x-ms-summary: ""
    envelopeAttachmentsResult:
      type: object
      properties:
        attachments:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/envelopeAttachment'
      description: ""
      x-ds-definition-name: envelopeAttachmentsResult
      x-ms-summary: ""
    envelopeAuditEvent:
      type: object
      properties:
        eventFields:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/nameValue'
      description: ""
      x-ds-definition-name: envelopeAuditEvent
      x-ms-summary: ""
    envelopeAuditEventResponse:
      type: object
      properties:
        auditEvents:
          type: array
          description: "Reserved: TBD"
          items:
            $ref: '#/components/schemas/envelopeAuditEvent'
      description: ""
      x-ds-definition-name: envelopeAuditEventResponse
      x-ms-summary: ""
    envelopeDefinition:
      type: object
      properties:
        accessibility:
          type: string
          description: "Sets the document reading zones for screen reader applications.\
            \  This element can only be used if Document Accessibility is enabled\
            \ for the account. \n\n###### Note: This information is currently generated\
            \ from the DocuSign web console by setting the reading zones when creating\
            \ a template, exporting the reading zone string information, and adding\
            \ it here."
        allowMarkup:
          type: string
          description: "When set to **true**, Document Markup is enabled for envelope.\
            \ Account must have Document Markup enabled to use this"
        allowReassign:
          type: string
          description: "When set to **true**, the recipient can redirect an envelope\
            \ to a more appropriate recipient."
        allowRecipientRecursion:
          type: string
          description: "When set to **true**, this enables the Recursive Recipients\
            \ feature and allows a recipient to appear more than once in the routing\
            \ order."
        allowViewHistory:
          type: string
          description: ""
        asynchronous:
          type: string
          description: "When set to **true**, the envelope is queued for processing\
            \ and the value of the `status` property is set to 'Processing'. Additionally,\
            \ get status calls return 'Processing' until completed. \n\n\n**Note**:\
            \ A `transactionId` is required for this call to work correctly. When\
            \ the envelope is created, the status is 'Processing' and an `envelopeId`\
            \ is not returned in the response. To get the `envelopeId`, use a GET\
            \ envelope query using the [transactionId](https://developers.docusign.com/esign-rest-api/reference/Envelopes/Envelopes/create/#envelopeDefinition)\
            \ or by checking the Connect notification."
        attachments:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/attachment'
        attachmentsUri:
          type: string
          description: ""
        authoritativeCopy:
          type: string
          description: "Specifies whether all documents in this envelope are authoritative\
            \ copies.\nA document can set its own `authoritativeCopy` property to\
            \ override this value. For example you can set the `authoritativeCopy`\
            \ on an envelope level to true but can turn it off for a specific document. "
        authoritativeCopyDefault:
          type: string
          description: |-
            The default `authoritativeCopy` setting for documents in this envelope that do not have `authoritativeCopy` set.
            If this property is not set, each document defaults to the envelope's `authoritativeCopy`.
        autoNavigation:
          type: string
          description: "When set to **true**, autonavigation is set for the recipient."
        brandId:
          type: string
          description: This sets the brand profile format used for the envelope. The
            value in the string is the brandId associated with the profile. Account
            branding must be enabled for the account to use this option.
        brandLock:
          type: string
          description: ""
        certificateUri:
          type: string
          description: Retrieves a URI for an endpoint allowing you to easily retrieve
            certificate information.
        completedDateTime:
          type: string
          description: Specifies the date and time this item was completed.
        compositeTemplates:
          type: array
          description: "A complex type that can be added to create envelopes from\
            \ a combination of DocuSign templates and PDF forms. The basic envelope\
            \ remains the same, while the Composite Template adds new document and\
            \ template overlays into the envelope. There can be any number of Composite\
            \ Template structures in the envelope."
          items:
            $ref: '#/components/schemas/compositeTemplate'
        copyRecipientData:
          type: string
          description: ""
        createdDateTime:
          type: string
          description: Indicates the date and time the item was created.
        customFields:
          $ref: '#/components/schemas/AccountCustomFields'
        customFieldsUri:
          type: string
          description: Contains a URI for an endpoint to retrieve the custom fields.
        declinedDateTime:
          type: string
          description: The date and time the recipient declined the document. Read
            only.
        deletedDateTime:
          type: string
          description: Specifies the data and time the item was deleted.
        deliveredDateTime:
          type: string
          description: "Reserved: For DocuSign use only."
        disableResponsiveDocument:
          type: string
          description: ""
        documents:
          type: array
          description: Complex element contains the details on the documents in the
            envelope.
          items:
            $ref: '#/components/schemas/document'
        documentsCombinedUri:
          type: string
          description: ""
        documentsUri:
          type: string
          description: Contains a URI for an endpoint that you can use to retrieve
            the documents.
        emailBlurb:
          type: string
          description: Optional element. This is the same as the email body. If specified
            it is included in email body for all envelope recipients. This can be
            a maximum of 10000 characters
        emailSettings:
          $ref: '#/components/schemas/emailSettings'
        emailSubject:
          type: string
          description: |-
            Specifies the subject of the email that is sent to all recipients.

            See [ML:Template Email Subject Merge Fields] for information about adding merge field information to the email subject.
        enableWetSign:
          type: string
          description: "When set to **true**, the signer is allowed to print the document\
            \ and sign it on paper."
        enforceSignerVisibility:
          type: string
          description: |-
            When set to **true**, documents with tabs can only be viewed by signers that have a tab on that document. Recipients that have an administrative role (Agent, Editor, or Intermediaries) or informational role (Certified Deliveries or Carbon Copies) can always see all the documents in an envelope, unless they are specifically excluded using this setting when an envelope is sent. Documents that do not have tabs are always visible to all recipients, unless they are specifically excluded using this setting when an envelope is sent.

            ###### Note: Your account must have Document Visibility enabled to use this.
        envelopeId:
          type: string
          description: The envelope ID of the envelope status that failed to post.
        envelopeIdStamping:
          type: string
          description: "When set to **true**, Envelope ID Stamping is enabled."
        envelopeUri:
          type: string
          description: Contains a URI for an endpoint that you can use to retrieve
            the envelope or envelopes.
        eventNotification:
          $ref: '#/components/schemas/eventNotification'
        initialSentDateTime:
          type: string
          description: ""
        is21CFRPart11:
          type: string
          description: "When set to **true**, indicates that this module is enabled\
            \ on the account."
        isSignatureProviderEnvelope:
          type: string
          description: ""
        lastModifiedDateTime:
          type: string
          description: The date and time the item was last modified.
        lockInformation:
          $ref: '#/components/schemas/EnvelopeLocks'
        messageLock:
          type: string
          description: "When set to **true**, prevents senders from changing the contents\
            \ of `emailBlurb` and `emailSubject` properties for the envelope. \n\n\
            Additionally, this prevents users from making changes to the contents\
            \ of `emailBlurb` and `emailSubject` properties when correcting envelopes.\
            \ \n\nHowever, if the `messageLock` node is set to **true** and the `emailSubject`\
            \ property is empty, senders and correctors are able to add a subject\
            \ to the envelope."
        notification:
          $ref: '#/components/schemas/notification'
        notificationUri:
          type: string
          description: Contains a URI for an endpoint that you can use to retrieve
            the notifications.
        password:
          type: string
          description: ""
        purgeState:
          type: string
          description: |
            Initiates a purge request. Valid values are:
            * documents_queued - Places envelope documents in the purge queue.
            * documents_and_metadata_queued - Places envelope documents and metadata in the purge queue.
        recipients:
          $ref: '#/components/schemas/EnvelopeRecipients'
        recipientsLock:
          type: string
          description: "When set to **true**, prevents senders from changing, correcting,\
            \ or deleting the recipient information for the envelope."
        recipientsUri:
          type: string
          description: Contains a URI for an endpoint that you can use to retrieve
            the recipients.
        sentDateTime:
          type: string
          description: The UTC DateTime when the envelope was sent. Read only.
        signerCanSignOnMobile:
          type: string
          description: ""
        signingLocation:
          type: string
          description: Specifies the physical location where the signing takes place.
            It can have two enumeration values; InPerson and Online. The default value
            is Online.
        status:
          type: string
          description: "Indicates the envelope status. Valid values are:\n\n* sent\
            \ - The envelope is sent to the recipients. \n* created - The envelope\
            \ is saved as a draft and can be modified and sent later."
        statusChangedDateTime:
          type: string
          description: The data and time the status changed.
        templateId:
          type: string
          description: "The unique identifier of the template. If this is not provided,\
            \ DocuSign will generate a value. "
        templateRoles:
          type: array
          description: |
            Specifies the template recipients. Each roleName in the template must have a recipient assigned to it. This is made up by the following elements:

            * email - The recipient's email address.
            * name - The recipient's name.
            * roleName - The template roleName associated with the recipient.
            * clientUserId - Optional, this sets if the signer is This specifies if the recipient is embedded or remote. If the clientUserId is not null then the recipient is embedded. Note that if a ClientUserId is used and the account settings SignerMustHaveAccount or SignerMustLoginToSign are true, an error is generated on sending.
            * defaultRecipient - Optional, When set to **true**, this recipient is the default recipient and any tabs generated by the transformPdfFields option are mapped to this recipient.
            * routingOrder - This specifies the routing order of the recipient in the envelope.
            * accessCode - This optional element specifies the access code a recipient has to enter to validate the identity. This can be a maximum of 50 characters.
            * inPersonSignerName - Optional, if the template role is an in person signer, this is the full legal name of the signer. This can be a maximum of 100 characters.
            * emailNotification - This is an optional complex element that has a role-specific emailSubject, emailBody, and language. It follows the same format as the emailNotification node for Recipients.
            * tabs - This allows the tab values to be specified for matching to tabs in the template.
          items:
            $ref: '#/components/schemas/templateRole'
        templatesUri:
          type: string
          description: Contains a URI for an endpoint which you can use to retrieve
            the templates.
        transactionId:
          type: string
          description: ' Used to identify an envelope. The id is a sender-generated
            value and is valid in the DocuSign system for 7 days. It is recommended
            that a transaction ID is used for offline signing to ensure that an envelope
            is not sent multiple times. The `transactionId` property can be used determine
            an envelope''s status (i.e. was it created or not) in cases where the
            internet connection was lost before the envelope status was returned.'
        useDisclosure:
          type: string
          description: "When set to **true**, the disclosure is shown to recipients\
            \ in accordance with the account's Electronic Record and Signature Disclosure\
            \ frequency setting. When set to **false**, the Electronic Record and\
            \ Signature Disclosure is not shown to any envelope recipients. \n\nIf\
            \ the `useDisclosure` property is not set, then the account's normal disclosure\
            \ setting is used and the value of the `useDisclosure` property is not\
            \ returned in responses when getting envelope information."
        voidedDateTime:
          type: string
          description: The date and time the envelope or template was voided.
        voidedReason:
          type: string
          description: The reason the envelope or template was voided.
      description: ""
      x-ds-definition-name: envelopeDefinition
      x-ms-summary: ""
    envelopeDocument:
      type: object
      properties:
        attachmentTabId:
          type: string
          description: ""
        authoritativeCopy:
          type: string
          description: "Specifies whether all documents in this envelope are authoritative\
            \ copies.\nA document can set its own `authoritativeCopy` property to\
            \ override this value. For example you can set the `authoritativeCopy`\
            \ on an envelope level to true but can turn it off for a specific document. "
        availableDocumentTypes:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/signatureType'
        containsPdfFormFields:
          type: string
          description: ""
        display:
          type: string
          description: "This string sets the display and behavior properties of\n\
            the document during signing. The possible values are:\n\n* `modal`<br>\n\
            \  The document is shown as a supplement action strip\n  and can be viewed,\
            \ downloaded, or printed in a modal window.\n  This is the recommended\
            \ value for supplemental documents. \n\n* `download`<br>\n  The document\
            \ is shown as a supplement action strip\n  and can be viewed, downloaded,\
            \ or printed in a new browser window. \n\n* `inline`<br>\n  The document\
            \ is shown in the normal signing window.\n  This value is not used with\
            \ supplemental documents,\n  but is the default value for all other documents.\n"
        documentFields:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/nameValue'
        documentId:
          type: string
          description: Specifies the document ID number that the tab is placed on.
            This must refer to an existing Document's ID attribute.
        errorDetails:
          $ref: '#/components/schemas/errorDetails'
        includeInDownload:
          type: string
          description: "When set to **true**,\nthe document is included in the combined\
            \ document download. \nThe default value is **true**.\n"
        name:
          type: string
          description: ""
        order:
          type: string
          description: "An optional value that sets the direction order used to sort\
            \ the item list. \n\nValid values are: \n\n* asc = ascending sort order\n\
            * desc = descending sort order "
        pages:
          type: string
          description: ""
        signerMustAcknowledge:
          type: string
          description: "Sets how the signer interacts with the supplemental document.\n\
            The possible values are: \n\n*\t`no_interaction`<br>\n  No recipient action\
            \ is required. \n\n*\t`view`<br>\n  The recipient is required to view\
            \ the document. \n\n*\t`accept`<br>\n  The recipient is required to accept\
            \ the document by selecting accept during signing, but is not required\
            \ to view the document. \n\n*\t`view_accept`<br>\n  The recipient is required\
            \ to view and accept the document.  \n\n"
        sizeBytes:
          type: string
          description: ""
        type:
          type: string
          description: "Type of the user. Valid values: type_owner, type_participant."
        uri:
          type: string
          description: ""
      description: ""
      x-ds-definition-name: envelopeDocument
      x-ms-summary: ""
    envelopeDocumentsResult:
      type: object
      properties:
        envelopeDocuments:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/envelopeDocument'
        envelopeId:
          type: string
          description: 'The envelope''s GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec '
      description: ""
      x-ds-definition-name: envelopeDocumentsResult
      x-ms-summary: ""
    envelopeEvent:
      type: object
      properties:
        envelopeEventStatusCode:
          type: string
          description: "An envelope status for which your webhook should be called.\
            \ Values: Draft, Sent, Delivered, Completed, Declined, or Voided."
        includeDocuments:
          type: string
          description: reserved
      description: For which envelope events should your webhook be called?
      x-ds-definition-name: envelopeEvent
      x-ms-summary: For which envelope events should your webhook be called?
    envelopeFormData:
      type: object
      properties:
        emailSubject:
          type: string
          description: |-
            Specifies the subject of the email that is sent to all recipients.

            See [ML:Template Email Subject Merge Fields] for information about adding merge field information to the email subject.
        envelopeId:
          type: string
          description: 'The envelope''s GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec '
        formData:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/nameValue'
        prefillFormData:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/nameValue'
        recipientFormData:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/recipientFormData'
        sentDateTime:
          type: string
          description: The UTC DateTime when the envelope was sent. Read only.
        status:
          type: string
          description: Item status. <!-- TODO -->
      description: ""
      x-ds-definition-name: envelopeFormData
      x-ms-summary: ""
    envelopeId:
      type: object
      properties:
        anchorCaseSensitive:
          type: string
          description: |-
            Reserved for DocuSign.
            <!--
            When set to **true**, the anchor string does not consider case when matching strings in the document. The default value is **true**.
            -->
        anchorHorizontalAlignment:
          type: string
          description: |
            Reserved for DocuSign.
            <!--
            Specifies the alignment of anchor tabs with anchor strings. Possible values are **left** or **right**. The default value is **left**.
            -->
        anchorIgnoreIfNotPresent:
          type: string
          description: "When set to **true**, this tab is ignored if anchorString\
            \ is not found in the document."
        anchorMatchWholeWord:
          type: string
          description: |
            Reserved for DocuSign.
            <!--
            When set to **true**, the anchor string in this tab matches whole words only (strings embedded in other strings are ignored.) The default value is **true**.
            -->
        anchorString:
          type: string
          description: Specifies the anchor string.
        anchorUnits:
          type: string
          description: |
            Specifies units of the
            `anchorXOffset` and
            `anchorYOffset`.
            Valid units are:

            - `pixels`
            - `inches`
            - `mms`
            - `cms`
        anchorXOffset:
          type: string
          description: |
            Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.
        anchorYOffset:
          type: string
          description: |
            Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.
        bold:
          type: string
          description: "When set to **true**, the information in the tab is bold."
        conditionalParentLabel:
          type: string
          description: For conditional fields this is the TabLabel of the parent tab
            that controls this tab's visibility.
        conditionalParentValue:
          type: string
          description: |
            For conditional fields, this is the value of the parent tab that controls the tab's visibility.

            If the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use "on" as the value to show that the parent tab is active.
        customTabId:
          type: string
          description: "The DocuSign generated custom tab ID for the custom tab to\
            \ be applied. This can only be used when adding new tabs for a recipient.\
            \ When used, the new tab inherits all the custom tab properties."
        documentId:
          type: string
          description: Specifies the document ID number that the tab is placed on.
            This must refer to an existing Document's ID attribute.
        errorDetails:
          $ref: '#/components/schemas/errorDetails'
        font:
          type: string
          description: |
            The font to be used for the tab value. Supported Fonts include:

            - Default
            - Arial
            - ArialNarrow
            - Calibri
            - CourierNew
            - Garamond
            - Georgia
            - Helvetica
            - LucidaConsole
            - MSGothic
            - MSMincho
            - OCR-A
            - Tahoma
            - TimesNewRoman
            - Trebuchet
            - Verdana
        fontColor:
          type: string
          description: "The font color used for the information in the tab. Possible\
            \ values are: \n\n- Black\n- BrightBlue\n- BrightRed\n- DarkGreen\n- DarkRed\n\
            - Gold\n- Green\n- NavyBlue\n- Purple\n- White\n"
        fontSize:
          type: string
          description: |-
            The font size used for the information in the tab. Possible values are:

            - Size7
            - Size8
            - Size9
            - Size10
            - Size11
            - Size12
            - Size14
            - Size16
            - Size18
            - Size20
            - Size22
            - Size24
            - Size26
            - Size28
            - Size36
            - Size48
            - Size72
        italic:
          type: string
          description: "When set to **true**, the information in the tab is italic."
        mergeField:
          $ref: '#/components/schemas/mergeField'
        name:
          type: string
          description: ""
        pageNumber:
          type: string
          description: |
            Specifies the page number on which the tab is located.
            Must be 1 for supplemental documents.
        recipientId:
          type: string
          description: Unique for the recipient. It is used by the tab element to
            indicate which recipient is to sign the Document.
        status:
          type: string
          description: |
            Tab status
            <!-- todo -->
        tabGroupLabels:
          type: array
          description: ""
          items:
            type: string
        tabId:
          type: string
          description: The unique identifier for the tab.
        tabLabel:
          type: string
          description: |
            The label string associated with the tab.
            The string may be the empty string.
            If no value is provided, the tab type is used as the value.

            Maximum of 500 characters.
        tabOrder:
          type: string
          description: |-
            A positive integer that sets the order the tab is navigated to during signing.

            Tabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.
        templateLocked:
          type: string
          description: "When set to **true**, the sender cannot change any attributes\
            \ of the recipient. Used only when working with template recipients. "
        templateRequired:
          type: string
          description: "When set to **true**, the sender may not remove the recipient.\
            \ Used only when working with template recipients."
        tooltip:
          type: string
          description: ""
        underline:
          type: string
          description: "When set to **true**, the information in the tab is underlined."
        xPosition:
          type: string
          description: |
            This property indicates the horizontal offset of the object on the page.
            DocuSign uses 72 DPI when determining position.
            Required. May be zero.
        yPosition:
          type: string
          description: |
            This property indicates the vertical offset of the object on the page.
            DocuSign uses 72 DPI when determining position.
            Required. May be zero.
      description: |
        A tab that displays the envelope ID. Recipients cannot enter
        or change the information in this tab.
      x-ds-definition-name: envelopeId
      x-ms-summary: |
        A tab that displays the envelope ID. Recipients cannot enter
        or change the information in this tab.
    envelopeIdsRequest:
      type: object
      properties:
        envelopeIds:
          type: array
          description: ""
          items:
            type: string
        transactionIds:
          type: array
          description: ' A list of transaction Id''s used to determining the status
            of envelopes sent asynchronously. See **transactionId** property on envelopes.'
          items:
            type: string
      description: ""
      x-ds-definition-name: envelopeIdsRequest
      x-ms-summary: ""
    envelopeNotificationRequest:
      type: object
      properties:
        expirations:
          $ref: '#/components/schemas/expirations'
        reminders:
          $ref: '#/components/schemas/reminders'
        useAccountDefaults:
          type: string
          description: "When set to **true**, the account default notification settings\
            \ are used for the envelope."
      description: ""
      x-ds-definition-name: envelopeNotificationRequest
      x-ms-summary: ""
    envelopesInformation:
      type: object
      properties:
        continuationToken:
          type: string
          description: ""
        endPosition:
          type: string
          description: 'The last position in the result set. '
        envelopes:
          type: array
          description: Set of envelope information
          items:
            $ref: '#/components/schemas/envelope'
        envelopeTransactionStatuses:
          type: array
          description: Array of envelope statuses and transaction Ids in the result
            set.
          items:
            $ref: '#/components/schemas/envelopeTransactionStatus'
        lastQueriedDateTime:
          type: string
          description: ""
        nextUri:
          type: string
          description: 'The URI for the next chunk of records based on the search
            request. It is `null` if this is the last set of results for the search. '
        previousUri:
          type: string
          description: 'The URI for the prior chunk of records based on the search
            request. It is `null` if this is the first set of results for the search. '
        resultSetSize:
          type: string
          description: 'The number of results returned in this response. '
        startPosition:
          type: string
          description: Starting position of the current result set.
        totalSetSize:
          type: string
          description: The total number of items in the search's result set. It will
            always be greater than or equal to the value of the `resultSetSize` field.
      description: "Result set for the Envelopes: listStatusChanges method"
      x-ds-definition-name: envelopesInformation
      x-ms-summary: "Result set for the Envelopes: listStatusChanges method"
    envelopeSummary:
      type: object
      properties:
        envelopeId:
          type: string
          description: The envelope ID of the envelope status that failed to post.
        status:
          type: string
          description: "Indicates the envelope status. Valid values are: \n\n* completed\
            \ - The envelope has been completed and all tags have been signed.\n*\
            \ created - The envelope is created as a draft. It can be modified and\
            \ sent later.\n* declined - The envelope has been declined by the recipients.\n\
            * delivered - The envelope has been delivered to the recipients.\n* sent\
            \ - The envelope is sent to the recipients.\n* signed - The envelope has\
            \ been signed by the recipients.\n* voided - The envelope is no longer\
            \ valid and recipients cannot access or sign the envelope.\n"
        statusDateTime:
          type: string
          description: The DateTime that the envelope changed status (i.e. was created
            or sent.)
        uri:
          type: string
          description: ""
      description: ""
      x-ds-definition-name: envelopeSummary
      x-ms-summary: ""
    envelopeTemplate:
      type: object
      properties:
        allowMarkup:
          type: string
          description: "When set to **true**, Document Markup is enabled for envelope.\
            \ Account must have Document Markup enabled to use this"
        allowReassign:
          type: string
          description: "When set to **true**, the recipient can redirect an envelope\
            \ to a more appropriate recipient."
        allowViewHistory:
          type: string
          description: ""
        asynchronous:
          type: string
          description: "When set to **true**, the envelope is queued for processing\
            \ and the value of the `status` property is set to 'Processing'. Additionally,\
            \ get status calls return 'Processing' until completed. \n\n\n**Note**:\
            \ A `transactionId` is required for this call to work correctly. When\
            \ the envelope is created, the status is 'Processing' and an `envelopeId`\
            \ is not returned in the response. To get the `envelopeId`, use a GET\
            \ envelope query using the [transactionId](https://developers.docusign.com/esign-rest-api/reference/Envelopes/Envelopes/create/#envelopeDefinition)\
            \ or by checking the Connect notification."
        attachmentsUri:
          type: string
          description: ""
        authoritativeCopy:
          type: string
          description: "Specifies whether all documents in this envelope are authoritative\
            \ copies.\nA document can set its own `authoritativeCopy` property to\
            \ override this value. For example you can set the `authoritativeCopy`\
            \ on an envelope level to true but can turn it off for a specific document. "
        authoritativeCopyDefault:
          type: string
          description: |-
            The default `authoritativeCopy` setting for documents in this envelope that do not have `authoritativeCopy` set.
            If this property is not set, each document defaults to the envelope's `authoritativeCopy`.
        autoNavigation:
          type: string
          description: "When set to **true**, autonavigation is set for the recipient."
        brandId:
          type: string
          description: The unique identifier of a brand.
        brandLock:
          type: string
          description: ""
        certificateUri:
          type: string
          description: Retrieves a URI for an endpoint allowing you to easily retrieve
            certificate information.
        completedDateTime:
          type: string
          description: Specifies the date and time this item was completed.
        copyRecipientData:
          type: string
          description: ""
        createdDateTime:
          type: string
          description: Indicates the date and time the item was created.
        customFields:
          $ref: '#/components/schemas/AccountCustomFields'
        customFieldsUri:
          type: string
          description: Contains a URI for an endpoint to retrieve the custom fields.
        declinedDateTime:
          type: string
          description: The date and time the recipient declined the document. Read
            only.
        deletedDateTime:
          type: string
          description: Specifies the data and time the item was deleted.
        deliveredDateTime:
          type: string
          description: "Reserved: For DocuSign use only."
        disableResponsiveDocument:
          type: string
          description: ""
        documents:
          type: array
          description: Complex element contains the details on the documents in the
            envelope.
          items:
            $ref: '#/components/schemas/document'
        documentsCombinedUri:
          type: string
          description: ""
        documentsUri:
          type: string
          description: Contains a URI for an endpoint that you can use to retrieve
            the documents.
        emailBlurb:
          type: string
          description: ""
        emailSettings:
          $ref: '#/components/schemas/emailSettings'
        emailSubject:
          type: string
          description: |-
            Specifies the subject of the email that is sent to all recipients.

            See [ML:Template Email Subject Merge Fields] for information about adding merge field information to the email subject.
        enableWetSign:
          type: string
          description: "When set to **true**, the signer is allowed to print the document\
            \ and sign it on paper."
        enforceSignerVisibility:
          type: string
          description: |-
            When set to **true**, documents with tabs can only be viewed by signers that have a tab on that document. Recipients that have an administrative role (Agent, Editor, or Intermediaries) or informational role (Certified Deliveries or Carbon Copies) can always see all the documents in an envelope, unless they are specifically excluded using this setting when an envelope is sent. Documents that do not have tabs are always visible to all recipients, unless they are specifically excluded using this setting when an envelope is sent.

            ###### Note: Your account must have Document Visibility enabled to use this.
        envelopeId:
          type: string
          description: 'The envelope''s GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec '
        envelopeIdStamping:
          type: string
          description: "When set to **true**, Envelope ID Stamping is enabled."
        envelopeTemplateDefinition:
          $ref: '#/components/schemas/envelopeTemplateDefinition'
        envelopeUri:
          type: string
          description: Contains a URI for an endpoint that you can use to retrieve
            the envelope or envelopes.
        initialSentDateTime:
          type: string
          description: ""
        is21CFRPart11:
          type: string
          description: "When set to **true**, indicates that this module is enabled\
            \ on the account."
        isSignatureProviderEnvelope:
          type: string
          description: ""
        lastModifiedDateTime:
          type: string
          description: The date and time the item was last modified.
        lockInformation:
          $ref: '#/components/schemas/EnvelopeLocks'
        messageLock:
          type: string
          description: "When set to **true**, prevents senders from changing the contents\
            \ of `emailBlurb` and `emailSubject` properties for the envelope. \n\n\
            Additionally, this prevents users from making changes to the contents\
            \ of `emailBlurb` and `emailSubject` properties when correcting envelopes.\
            \ \n\nHowever, if the `messageLock` node is set to **true** and the `emailSubject`\
            \ property is empty, senders and correctors are able to add a subject\
            \ to the envelope."
        notification:
          $ref: '#/components/schemas/notification'
        notificationUri:
          type: string
          description: Contains a URI for an endpoint that you can use to retrieve
            the notifications.
        purgeState:
          type: string
          description: |+
            Shows the current purge state for the envelope. The possible values are:

            * `unpurged`: There has been no successful request to purge documents.
            * `documents_queued`: The envelope documents have been added to the purge queue, but have not been purged.
            * `documents_dequeued`: The envelope documents have been taken out of the purge queue.
            * `documents_and_metadata_queued`: The envelope documents and metadata have been added to the purge queue, but have not yet been purged.
            * `documents_purged`: The envelope documents have been successfully purged.
            * `documents_and_metadata_purged`: The envelope documents and metadata have been successfully purged.

        recipients:
          $ref: '#/components/schemas/EnvelopeRecipients'
        recipientsLock:
          type: string
          description: "When set to **true**, prevents senders from changing, correcting,\
            \ or deleting the recipient information for the envelope."
        recipientsUri:
          type: string
          description: Contains a URI for an endpoint that you can use to retrieve
            the recipients.
        sentDateTime:
          type: string
          description: The UTC DateTime when the envelope was sent. Read only.
        signerCanSignOnMobile:
          type: string
          description: ""
        signingLocation:
          type: string
          description: Specifies the physical location where the signing takes place.
            It can have two enumeration values; InPerson and Online. The default value
            is Online.
        status:
          type: string
          description: Item status. <!-- TODO -->
        statusChangedDateTime:
          type: string
          description: The data and time the status changed.
        templatesUri:
          type: string
          description: Contains a URI for an endpoint which you can use to retrieve
            the templates.
        transactionId:
          type: string
          description: Specifies the Transaction ID from the AppStore.
        useDisclosure:
          type: string
          description: "When set to **true**, the disclosure is shown to recipients\
            \ in accordance with the account's Electronic Record and Signature Disclosure\
            \ frequency setting. When set to **false**, the Electronic Record and\
            \ Signature Disclosure is not shown to any envelope recipients. \n\nIf\
            \ the `useDisclosure` property is not set, then the account's normal disclosure\
            \ setting is used and the value of the `useDisclosure` property is not\
            \ returned in responses when getting envelope information."
        voidedDateTime:
          type: string
          description: The date and time the envelope or template was voided.
        voidedReason:
          type: string
          description: The reason the envelope or template was voided.
      description: ""
      x-ds-definition-name: envelopeTemplate
      x-ms-summary: ""
    envelopeTemplateDefinition:
      type: object
      properties:
        created:
          type: string
          description: The UTC DateTime when the workspace user authorization was
            created.
        description:
          type: string
          description: |
            A sender-defined description of the line item.
        folderId:
          type: string
          description: The ID for the folder.
        folderName:
          type: string
          description: ' The name of the folder in which the template is located.'
        folderUri:
          type: string
          description: The URI of the folder.
        lastModified:
          type: string
          description: Utc date and time the comment was last updated (can only be
            done by creator.)
        lastModifiedBy:
          $ref: '#/components/schemas/userInfo'
        name:
          type: string
          description: ""
        newPassword:
          type: string
          description: The user's new password.
        owner:
          $ref: '#/components/schemas/userInfo'
        pageCount:
          type: integer
          description: An integer value specifying the number of document pages in
            the template. Omit this property if not submitting a page count.
          format: int32
        parentFolderUri:
          type: string
          description: ""
        password:
          type: string
          description: ""
        shared:
          type: string
          description: "When set to **true**, this custom tab is shared."
        templateId:
          type: string
          description: "The unique identifier of the template. If this is not provided,\
            \ DocuSign will generate a value. "
        uri:
          type: string
          description: ""
      description: "A complex element containing the following information:\n\ntemplateId:\
        \ Unique identifier of the template. If this is not provided, DocuSign will\
        \ generate a value. \n\nname: Name of the template. Maximum length: 100 characters.\n\
        \nshared: When set to **true**, the template is shared with the Everyone group\
        \ in the account. If false, the template is only shared with the Administrator\
        \ group.\n\npassword: Password, if the template is locked.\n\ndescription:\
        \ Description of the template. Maximum Length: 500 characters.\n\npageCount:\
        \ Number of document pages in the template.\n\nfolderName: The name of the\
        \ folder the template is located in.\n\nfolderId: The ID for the folder.\n\
        \nowner: The userName, email, userId, userType, and userStatus for the template\
        \ owner."
      x-ds-definition-name: envelopeTemplateDefinition
      x-ms-summary: "A complex element containing the following information:\n\ntemplateId:\
        \ Unique identifier of the template. If this is not provided, DocuSign will\
        \ generate a value. \n\nname: Name of the template. Maximum length: 100 characters.\n\
        \nshared: When set to **true**, the template is shared with the Everyone group\
        \ in the account. If false, the template is only shared with the Administrator\
        \ group.\n\npassword: Password, if the template is locked.\n\ndescription:\
        \ Description of the template. Maximum Length: 500 characters.\n\npageCount:\
        \ Number of document pages in the template.\n\nfolderName: The name of the\
        \ folder the template is located in.\n\nfolderId: The ID for the folder.\n\
        \nowner: The userName, email, userId, userType, and userStatus for the template\
        \ owner."
    envelopeTemplateResult:
      type: object
      properties:
        allowMarkup:
          type: string
          description: "When set to **true**, Document Markup is enabled for envelope.\
            \ Account must have Document Markup enabled to use this"
        allowReassign:
          type: string
          description: "When set to **true**, the recipient can redirect an envelope\
            \ to a more appropriate recipient."
        allowViewHistory:
          type: string
          description: ""
        asynchronous:
          type: string
          description: "When set to **true**, the envelope is queued for processing\
            \ and the value of the `status` property is set to 'Processing'. Additionally,\
            \ get status calls return 'Processing' until completed. \n\n\n**Note**:\
            \ A `transactionId` is required for this call to work correctly. When\
            \ the envelope is created, the status is 'Processing' and an `envelopeId`\
            \ is not returned in the response. To get the `envelopeId`, use a GET\
            \ envelope query using the [transactionId](https://developers.docusign.com/esign-rest-api/reference/Envelopes/Envelopes/create/#envelopeDefinition)\
            \ or by checking the Connect notification."
        attachmentsUri:
          type: string
          description: ""
        authoritativeCopy:
          type: string
          description: "Specifies whether all documents in this envelope are authoritative\
            \ copies.\nA document can set its own `authoritativeCopy` property to\
            \ override this value. For example you can set the `authoritativeCopy`\
            \ on an envelope level to true but can turn it off for a specific document. "
        authoritativeCopyDefault:
          type: string
          description: |-
            The default `authoritativeCopy` setting for documents in this envelope that do not have `authoritativeCopy` set.
            If this property is not set, each document defaults to the envelope's `authoritativeCopy`.
        autoNavigation:
          type: string
          description: "When set to **true**, autonavigation is set for the recipient."
        brandId:
          type: string
          description: The unique identifier of a brand.
        brandLock:
          type: string
          description: ""
        certificateUri:
          type: string
          description: Retrieves a URI for an endpoint allowing you to easily retrieve
            certificate information.
        completedDateTime:
          type: string
          description: Specifies the date and time this item was completed.
        copyRecipientData:
          type: string
          description: ""
        created:
          type: string
          description: The UTC DateTime when the workspace user authorization was
            created.
        createdDateTime:
          type: string
          description: Indicates the date and time the item was created.
        customFields:
          $ref: '#/components/schemas/AccountCustomFields'
        customFieldsUri:
          type: string
          description: Contains a URI for an endpoint to retrieve the custom fields.
        declinedDateTime:
          type: string
          description: The date and time the recipient declined the document. Read
            only.
        deletedDateTime:
          type: string
          description: Specifies the data and time the item was deleted.
        deliveredDateTime:
          type: string
          description: "Reserved: For DocuSign use only."
        description:
          type: string
          description: |
            A sender-defined description of the line item.
        disableResponsiveDocument:
          type: string
          description: ""
        documents:
          type: array
          description: Complex element contains the details on the documents in the
            envelope.
          items:
            $ref: '#/components/schemas/document'
        documentsCombinedUri:
          type: string
          description: ""
        documentsUri:
          type: string
          description: Contains a URI for an endpoint that you can use to retrieve
            the documents.
        emailBlurb:
          type: string
          description: ""
        emailSettings:
          $ref: '#/components/schemas/emailSettings'
        emailSubject:
          type: string
          description: |-
            Specifies the subject of the email that is sent to all recipients.

            See [ML:Template Email Subject Merge Fields] for information about adding merge field information to the email subject.
        enableWetSign:
          type: string
          description: "When set to **true**, the signer is allowed to print the document\
            \ and sign it on paper."
        enforceSignerVisibility:
          type: string
          description: |-
            When set to **true**, documents with tabs can only be viewed by signers that have a tab on that document. Recipients that have an administrative role (Agent, Editor, or Intermediaries) or informational role (Certified Deliveries or Carbon Copies) can always see all the documents in an envelope, unless they are specifically excluded using this setting when an envelope is sent. Documents that do not have tabs are always visible to all recipients, unless they are specifically excluded using this setting when an envelope is sent.

            ###### Note: Your account must have Document Visibility enabled to use this.
        envelopeId:
          type: string
          description: The envelope ID of the envelope status that failed to post.
        envelopeIdStamping:
          type: string
          description: "When set to **true**, Envelope ID Stamping is enabled."
        envelopeUri:
          type: string
          description: Contains a URI for an endpoint that you can use to retrieve
            the envelope or envelopes.
        folderId:
          type: string
          description: The ID of the folder being accessed.
        folderName:
          type: string
          description: ""
        folderUri:
          type: string
          description: ""
        initialSentDateTime:
          type: string
          description: ""
        is21CFRPart11:
          type: string
          description: "When set to **true**, indicates that this module is enabled\
            \ on the account."
        isSignatureProviderEnvelope:
          type: string
          description: ""
        lastModified:
          type: string
          description: Utc date and time the comment was last updated (can only be
            done by creator.)
        lastModifiedDateTime:
          type: string
          description: The date and time the item was last modified.
        lockInformation:
          $ref: '#/components/schemas/EnvelopeLocks'
        messageLock:
          type: string
          description: "When set to **true**, prevents senders from changing the contents\
            \ of `emailBlurb` and `emailSubject` properties for the envelope. \n\n\
            Additionally, this prevents users from making changes to the contents\
            \ of `emailBlurb` and `emailSubject` properties when correcting envelopes.\
            \ \n\nHowever, if the `messageLock` node is set to **true** and the `emailSubject`\
            \ property is empty, senders and correctors are able to add a subject\
            \ to the envelope."
        name:
          type: string
          description: ""
        notification:
          $ref: '#/components/schemas/notification'
        notificationUri:
          type: string
          description: Contains a URI for an endpoint that you can use to retrieve
            the notifications.
        owner:
          $ref: '#/components/schemas/userInfo'
        pageCount:
          type: integer
          description: ""
          format: int32
        parentFolderUri:
          type: string
          description: ""
        password:
          type: string
          description: ""
        purgeState:
          type: string
          description: |+
            Shows the current purge state for the envelope. The possible values are:

            * `unpurged`: There has been no successful request to purge documents.
            * `documents_queued`: The envelope documents have been added to the purge queue, but have not been purged.
            * `documents_dequeued`: The envelope documents have been taken out of the purge queue.
            * `documents_and_metadata_queued`: The envelope documents and metadata have been added to the purge queue, but have not yet been purged.
            * `documents_purged`: The envelope documents have been successfully purged.
            * `documents_and_metadata_purged`: The envelope documents and metadata have been successfully purged.

        recipients:
          $ref: '#/components/schemas/EnvelopeRecipients'
        recipientsLock:
          type: string
          description: "When set to **true**, prevents senders from changing, correcting,\
            \ or deleting the recipient information for the envelope."
        recipientsUri:
          type: string
          description: Contains a URI for an endpoint that you can use to retrieve
            the recipients.
        sentDateTime:
          type: string
          description: The UTC DateTime when the envelope was sent. Read only.
        shared:
          type: string
          description: "When set to **true**, this custom tab is shared."
        signerCanSignOnMobile:
          type: string
          description: ""
        signingLocation:
          type: string
          description: Specifies the physical location where the signing takes place.
            It can have two enumeration values; InPerson and Online. The default value
            is Online.
        status:
          type: string
          description: "Indicates the envelope status. Valid values are:\n\n* sent\
            \ - The envelope is sent to the recipients. \n* created - The envelope\
            \ is saved as a draft and can be modified and sent later."
        statusChangedDateTime:
          type: string
          description: The data and time the status changed.
        templateId:
          type: string
          description: "The unique identifier of the template. If this is not provided,\
            \ DocuSign will generate a value. "
        templatesUri:
          type: string
          description: Contains a URI for an endpoint which you can use to retrieve
            the templates.
        transactionId:
          type: string
          description: ' Used to identify an envelope. The id is a sender-generated
            value and is valid in the DocuSign system for 7 days. It is recommended
            that a transaction ID is used for offline signing to ensure that an envelope
            is not sent multiple times. The `transactionId` property can be used determine
            an envelope''s status (i.e. was it created or not) in cases where the
            internet connection was lost before the envelope status was returned.'
        uri:
          type: string
          description: ""
        useDisclosure:
          type: string
          description: "When set to **true**, the disclosure is shown to recipients\
            \ in accordance with the account's Electronic Record and Signature Disclosure\
            \ frequency setting. When set to **false**, the Electronic Record and\
            \ Signature Disclosure is not shown to any envelope recipients. \n\nIf\
            \ the `useDisclosure` property is not set, then the account's normal disclosure\
            \ setting is used and the value of the `useDisclosure` property is not\
            \ returned in responses when getting envelope information."
        voidedDateTime:
          type: string
          description: The date and time the envelope or template was voided.
        voidedReason:
          type: string
          description: The reason the envelope or template was voided.
      description: ""
      x-ds-definition-name: envelopeTemplateResult
      x-ms-summary: ""
    envelopeTemplateResults:
      type: object
      properties:
        endPosition:
          type: string
          description: 'The last position in the result set. '
        envelopeTemplates:
          type: array
          description: The list of requested templates.
          items:
            $ref: '#/components/schemas/envelopeTemplateResult'
        folders:
          type: array
          description: A collection of folder objects returned in a response.
          items:
            $ref: '#/components/schemas/folder'
        nextUri:
          type: string
          description: 'The URI for the next chunk of records based on the search
            request. It is `null` if this is the last set of results for the search. '
        previousUri:
          type: string
          description: 'The URI for the prior chunk of records based on the search
            request. It is `null` if this is the first set of results for the search. '
        resultSetSize:
          type: string
          description: 'The number of results returned in this response. '
        startPosition:
          type: string
          description: Starting position of the current result set.
        totalSetSize:
          type: string
          description: The total number of items in the search's result set. It will
            always be greater than or equal to the value of the `resultSetSize` field.
      description: ""
      x-ds-definition-name: envelopeTemplateResults
      x-ms-summary: ""
    envelopeTransactionStatus:
      type: object
      properties:
        envelopeId:
          type: string
          description: The envelope ID of the envelope status that failed to post.
        errorDetails:
          $ref: '#/components/schemas/errorDetails'
        status:
          type: string
          description: "Indicates the envelope status. Valid values are:\n\n* sent\
            \ - The envelope is sent to the recipients. \n* created - The envelope\
            \ is saved as a draft and can be modified and sent later."
        transactionId:
          type: string
          description: ' Used to identify an envelope. The id is a sender-generated
            value and is valid in the DocuSign system for 7 days. It is recommended
            that a transaction ID is used for offline signing to ensure that an envelope
            is not sent multiple times. The `transactionId` property can be used determine
            an envelope''s status (i.e. was it created or not) in cases where the
            internet connection was lost before the envelope status was returned.'
      description: ""
      x-ds-definition-name: envelopeTransactionStatus
      x-ms-summary: ""
    envelopeUpdateSummary:
      type: object
      properties:
        bulkEnvelopeStatus:
          $ref: '#/components/schemas/bulkEnvelopeStatus'
        envelopeId:
          type: string
          description: The envelope ID of the envelope status that failed to post.
        errorDetails:
          $ref: '#/components/schemas/errorDetails'
        listCustomFieldUpdateResults:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/listCustomField'
        lockInformation:
          $ref: '#/components/schemas/EnvelopeLocks'
        recipientUpdateResults:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/recipientUpdateResponse'
        tabUpdateResults:
          $ref: '#/components/schemas/EnvelopeRecipientTabs'
        textCustomFieldUpdateResults:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/textCustomField'
      description: ""
      x-ds-definition-name: envelopeUpdateSummary
      x-ms-summary: ""
    errorDetails:
      type: object
      properties:
        errorCode:
          type: string
          description: An error code associated with the error.
        message:
          type: string
          description: A short error message.
      description: "This object describes errors that occur. It is only valid for\
        \ responses, and ignored in requests."
      x-ds-definition-name: errorDetails
      x-ms-summary: "This object describes errors that occur. It is only valid for\
        \ responses, and ignored in requests."
    eventNotification:
      type: object
      properties:
        envelopeEvents:
          type: array
          description: "A list of envelope-level event statuses that will trigger\
            \ Connect to send updates to the endpoint specified in the `url` property.\
            \ \n\nTo receive notifications, you must include either an `envelopeEvents`\
            \ node or a `recipientEvents` node. You do not need to specify both."
          items:
            $ref: '#/components/schemas/envelopeEvent'
        includeCertificateOfCompletion:
          type: string
          description: "When set to **true**, the Connect Service includes the Certificate\
            \ of Completion with completed envelopes. "
        includeCertificateWithSoap:
          type: string
          description: "When set to **true**, the Connect service will digitally sign\
            \ the XML data. The signature will be included in the XML message."
        includeDocumentFields:
          type: string
          description: "When set to **true**, the Document Fields associated with\
            \ the envelope's documents are included in the notification messages.\
            \ Document Fields are optional custom name-value pairs added to documents\
            \ using the API. "
        includeDocuments:
          type: string
          description: "When set to **true**, the XML webhook messages will include\
            \ the envelope's PDF documents. Including the PDF documents will greatly\
            \ increase the size of the notification messages. Ensure that your listener\
            \ can handle incoming messages that are 25MB or larger. "
        includeEnvelopeVoidReason:
          type: string
          description: "When set to **true**, if the envelope is voided, the Connect\
            \ Service notification will include the void reason, as entered by the\
            \ person that voided the envelope. "
        includeHMAC:
          type: string
          description: ""
        includeSenderAccountAsCustomField:
          type: string
          description: "When set to **true**, Connect will include the sender account\
            \ as Custom Field in the data."
        includeTimeZone:
          type: string
          description: "When set to **true**, the envelope's time zone information\
            \ is included in the webhook messages. "
        loggingEnabled:
          type: string
          description: "When set to **true**, the webhook messages are logged. They\
            \ can be viewed on the DocuSign Administration Web Tool in the Connect\
            \ section. Logged messages can also be downloaded via the [ConnectEvents\
            \ resource](https://developers.docusign.com/esign-rest-api/reference/Connect/ConnectEvents)."
        recipientEvents:
          type: array
          description: "An array of recipient event statuses that will trigger Connect\
            \ to send notifications to your webhook listener at the url endpoint specified\
            \ in the `url` property. \n\nTo receive notifications, you must include\
            \ either an `envelopeEvents` node or a `recipientEvents` node. You do\
            \ not need to specify both."
          items:
            $ref: '#/components/schemas/recipientEvent'
        requireAcknowledgment:
          type: string
          description: "When set to **true**, the DocuSign Connect service checks\
            \ that the message was received and retries on failures. "
        signMessageWithX509Cert:
          type: string
          description: "When set to **true**, Mutual TLS will be enabled for notifications.\
            \ Mutual TLS must be initiated by the listener (the customer's web server)\
            \ during the TLS handshake protocol. "
        soapNameSpace:
          type: string
          description: |-
            The namespace of the SOAP interface.

            The namespace value must be set if useSoapInterface is set to true.
        url:
          type: string
          description: The endpoint to which webhook notification messages are sent
            via an HTTPS POST request. The url must start with https. The customer's
            web server must use an SSL/TLS certificate whose CA is in the Microsoft
            list of trusted CAs. Self-signed certificates are not ok. Free certificates
            from Let's Encrypt can be used.
        useSoapInterface:
          type: string
          description: "When set to **true**, the notifications are sent to your endpoint\
            \ as SOAP requests. "
      description: Register a Connect webhook for a specific envelope
      x-ds-definition-name: eventNotification
      x-ms-summary: Register a Connect webhook for a specific envelope
    eventResult:
      type: object
      properties:
        eventTimestamp:
          type: string
          description: ""
        failureDescription:
          type: string
          description: ""
        status:
          type: string
          description: Event status.
        vendorFailureStatusCode:
          type: string
          description: ""
      description: ""
      x-ds-definition-name: eventResult
      x-ms-summary: ""
    expirations:
      type: object
      properties:
        expireAfter:
          type: string
          description: An integer that sets the number of days the envelope is active.
        expireEnabled:
          type: string
          description: "When set to **true**, the envelope expires (is no longer available\
            \ for signing) in the set number of days. If false, the account default\
            \ setting is used. If the account does not have an expiration setting,\
            \ the DocuSign default value of 120 days is used."
        expireWarn:
          type: string
          description: "An integer that sets the number of days before envelope expiration\
            \ that an expiration warning email is sent to the recipient. If set to\
            \ 0 (zero), no warning email is sent."
      description: A complex element that specifies the expiration settings for the
        envelope.
      x-ds-definition-name: expirations
      x-ms-summary: A complex element that specifies the expiration settings for the
        envelope.
    externalDocServiceErrorDetails:
      type: object
      properties:
        authenticationUrl:
          type: string
          description: "Reserved: TBD"
        errorCode:
          type: string
          description: ""
        message:
          type: string
          description: ""
      description: ""
      x-ds-definition-name: externalDocServiceErrorDetails
      x-ms-summary: ""
    externalFile:
      type: object
      properties:
        date:
          type: string
          description: ""
        id:
          type: string
          description: ""
        img:
          type: string
          description: ""
        name:
          type: string
          description: ""
        size:
          type: string
          description: "Reserved: TBD"
        supported:
          type: string
          description: ""
        type:
          type: string
          description: "Type of the user. Valid values: type_owner, type_participant."
        uri:
          type: string
          description: ""
      description: ""
      x-ds-definition-name: externalFile
      x-ms-summary: ""
    externalFolder:
      type: object
      properties:
        endPosition:
          type: string
          description: 'The last position in the result set. '
        errorDetails:
          $ref: '#/components/schemas/externalDocServiceErrorDetails'
        id:
          type: string
          description: ""
        items:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/externalFile'
        name:
          type: string
          description: ""
        nextUri:
          type: string
          description: 'The URI for the next chunk of records based on the search
            request. It is `null` if this is the last set of results for the search. '
        previousUri:
          type: string
          description: 'The URI for the prior chunk of records based on the search
            request. It is `null` if this is the first set of results for the search. '
        resultSetSize:
          type: string
          description: 'The number of results returned in this response. '
        startPosition:
          type: string
          description: Starting position of the current result set.
        totalSetSize:
          type: string
          description: The total number of items in the search's result set. It will
            always be greater than or equal to the value of the `resultSetSize` field.
      description: ""
      x-ds-definition-name: externalFolder
      x-ms-summary: ""
    featureSet:
      type: object
      properties:
        currencyFeatureSetPrices:
          type: array
          description: A complex type that contains alternate currency values that
            are configured for this plan feature set.
          items:
            $ref: '#/components/schemas/currencyFeatureSetPrice'
        envelopeFee:
          type: string
          description: ""
        featureSetId:
          type: string
          description: A unique ID for the feature set.
        fixedFee:
          type: string
          description: ""
        is21CFRPart11:
          type: string
          description: "When set to **true**, indicates that this module is enabled\
            \ on the account."
        isActive:
          type: string
          description: ""
        isEnabled:
          type: string
          description: Specifies whether the feature set is actively enabled as part
            of the plan.
        name:
          type: string
          description: ""
        seatFee:
          type: string
          description: An incremental seat cost for seat-based plans. Only valid when
            isEnabled for the feature set is set to true.
      description: ""
      x-ds-definition-name: featureSet
      x-ms-summary: ""
    fileType:
      type: object
      properties:
        fileExtension:
          type: string
          description: ""
        mimeType:
          type: string
          description: The mime-type of a file type listed in a fileTypes collection.
      description: ""
      x-ds-definition-name: fileType
      x-ms-summary: ""
    fileTypeList:
      type: object
      properties:
        fileTypes:
          type: array
          description: A collection of file types.
          items:
            $ref: '#/components/schemas/fileType'
      description: ""
      x-ds-definition-name: fileTypeList
      x-ms-summary: ""
    filter:
      type: object
      properties:
        actionRequired:
          type: string
          description: Action required.
        expires:
          type: string
          description: ""
        folderIds:
          type: string
          description: ""
        fromDateTime:
          type: string
          description: ""
        isTemplate:
          type: string
          description: ""
        order:
          type: string
          description: "An optional value that sets the direction order used to sort\
            \ the item list. \n\nValid values are: \n\n* asc = ascending sort order\n\
            * desc = descending sort order "
        orderBy:
          type: string
          description: ""
        searchTarget:
          type: string
          description: ""
        searchText:
          type: string
          description: ""
        status:
          type: string
          description: Filter status.
        toDateTime:
          type: string
          description: Latest date to filter.
      description: ""
      x-ds-definition-name: filter
      x-ms-summary: ""
    firstName:
      type: object
      properties:
        anchorCaseSensitive:
          type: string
          description: |-
            Reserved for DocuSign.
            <!--
            When set to **true**, the anchor string does not consider case when matching strings in the document. The default value is **true**.
            -->
        anchorHorizontalAlignment:
          type: string
          description: |
            Reserved for DocuSign.
            <!--
            Specifies the alignment of anchor tabs with anchor strings. Possible values are **left** or **right**. The default value is **left**.
            -->
        anchorIgnoreIfNotPresent:
          type: string
          description: "When set to **true**, this tab is ignored if anchorString\
            \ is not found in the document."
        anchorMatchWholeWord:
          type: string
          description: |
            Reserved for DocuSign.
            <!--
            When set to **true**, the anchor string in this tab matches whole words only (strings embedded in other strings are ignored.) The default value is **true**.
            -->
        anchorString:
          type: string
          description: Specifies the anchor string.
        anchorUnits:
          type: string
          description: |
            Specifies units of the
            `anchorXOffset` and
            `anchorYOffset`.
            Valid units are:

            - `pixels`
            - `inches`
            - `mms`
            - `cms`
        anchorXOffset:
          type: string
          description: |
            Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.
        anchorYOffset:
          type: string
          description: |
            Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.
        bold:
          type: string
          description: "When set to **true**, the information in the tab is bold."
        conditionalParentLabel:
          type: string
          description: For conditional fields this is the TabLabel of the parent tab
            that controls this tab's visibility.
        conditionalParentValue:
          type: string
          description: |
            For conditional fields, this is the value of the parent tab that controls the tab's visibility.

            If the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use "on" as the value to show that the parent tab is active.
        customTabId:
          type: string
          description: "The DocuSign generated custom tab ID for the custom tab to\
            \ be applied. This can only be used when adding new tabs for a recipient.\
            \ When used, the new tab inherits all the custom tab properties."
        documentId:
          type: string
          description: Specifies the document ID number that the tab is placed on.
            This must refer to an existing Document's ID attribute.
        errorDetails:
          $ref: '#/components/schemas/errorDetails'
        font:
          type: string
          description: |
            The font to be used for the tab value. Supported Fonts include:

            - Default
            - Arial
            - ArialNarrow
            - Calibri
            - CourierNew
            - Garamond
            - Georgia
            - Helvetica
            - LucidaConsole
            - MSGothic
            - MSMincho
            - OCR-A
            - Tahoma
            - TimesNewRoman
            - Trebuchet
            - Verdana
        fontColor:
          type: string
          description: "The font color used for the information in the tab. Possible\
            \ values are: \n\n- Black\n- BrightBlue\n- BrightRed\n- DarkGreen\n- DarkRed\n\
            - Gold\n- Green\n- NavyBlue\n- Purple\n- White\n"
        fontSize:
          type: string
          description: |-
            The font size used for the information in the tab. Possible values are:

            - Size7
            - Size8
            - Size9
            - Size10
            - Size11
            - Size12
            - Size14
            - Size16
            - Size18
            - Size20
            - Size22
            - Size24
            - Size26
            - Size28
            - Size36
            - Size48
            - Size72
        italic:
          type: string
          description: "When set to **true**, the information in the tab is italic."
        mergeField:
          $ref: '#/components/schemas/mergeField'
        name:
          type: string
          description: ""
        pageNumber:
          type: string
          description: |
            Specifies the page number on which the tab is located.
            Must be 1 for supplemental documents.
        recipientId:
          type: string
          description: Unique for the recipient. It is used by the tab element to
            indicate which recipient is to sign the Document.
        status:
          type: string
          description: |
            Tab status
            <!-- todo -->
        tabGroupLabels:
          type: array
          description: ""
          items:
            type: string
        tabId:
          type: string
          description: The unique identifier for the tab.
        tabLabel:
          type: string
          description: |
            The label string associated with the tab.
            The string may be the empty string.
            If no value is provided, the tab type is used as the value.

            Maximum of 500 characters.
        tabOrder:
          type: string
          description: |-
            A positive integer that sets the order the tab is navigated to during signing.

            Tabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.
        templateLocked:
          type: string
          description: "When set to **true**, the sender cannot change any attributes\
            \ of the recipient. Used only when working with template recipients. "
        templateRequired:
          type: string
          description: "When set to **true**, the sender may not remove the recipient.\
            \ Used only when working with template recipients."
        tooltip:
          type: string
          description: ""
        underline:
          type: string
          description: "When set to **true**, the information in the tab is underlined."
        value:
          type: string
          description: 'Specifies the value of the tab. '
        xPosition:
          type: string
          description: |
            This property indicates the horizontal offset of the object on the page.
            DocuSign uses 72 DPI when determining position.
            Required. May be zero.

            To improve the tab's position on the document,
            DocuSign recommends
            adjusting `xPosition`
            and `yPosition`
            coordinates
            by (-3, -2)
        yPosition:
          type: string
          description: |
            This property indicates the vertical offset of the object on the page.
            DocuSign uses 72 DPI when determining position.
            Required. May be zero.

            To improve the tab's position on the document,
            DocuSign recommends
            adjusting `xPosition`
            and `yPosition`
            coordinates
            by (-3, -2)
      description: |
        A tab that displays the recipient's first name. This tab
        takes the recipient's name as entered in the recipient
        information, splits it into sections based on spaces and
        uses the first section as the first name.
      x-ds-definition-name: firstName
      x-ms-summary: |
        A tab that displays the recipient's first name. This tab
        takes the recipient's name as entered in the recipient
        information, splits it into sections based on spaces and
        uses the first section as the first name.
    folder:
      type: object
      properties:
        errorDetails:
          $ref: '#/components/schemas/errorDetails'
        filter:
          $ref: '#/components/schemas/filter'
        folderId:
          type: string
          description: The ID of the folder being accessed.
        folders:
          type: array
          description: A collection of folder objects returned in a response.
          items:
            $ref: '#/components/schemas/folder'
        name:
          type: string
          description: ""
        ownerEmail:
          type: string
          description: ""
        ownerUserId:
          type: string
          description: ""
        ownerUserName:
          type: string
          description: ""
        parentFolderId:
          type: string
          description: ""
        parentFolderUri:
          type: string
          description: ""
        type:
          type: string
          description: "Type of the user. Valid values: type_owner, type_participant."
        uri:
          type: string
          description: ""
      description: ""
      x-ds-definition-name: folder
      x-ms-summary: ""
    folderItem:
      type: object
      properties:
        completedDateTime:
          type: string
          description: Specifies the date and time this item was completed.
        createdDateTime:
          type: string
          description: Indicates the date and time the item was created.
        customFields:
          type: array
          description: An optional array of strings that allows the sender to provide
            custom data about the recipient. This information is returned in the envelope
            status but otherwise not used by DocuSign. Each customField string can
            be a maximum of 100 characters.
          items:
            $ref: '#/components/schemas/customField_v2'
        description:
          type: string
          description: |
            A sender-defined description of the line item.
        envelopeId:
          type: string
          description: The envelope ID of the envelope status that failed to post.
        envelopeUri:
          type: string
          description: Contains a URI for an endpoint that you can use to retrieve
            the envelope or envelopes.
        is21CFRPart11:
          type: string
          description: "When set to **true**, indicates that this module is enabled\
            \ on the account."
        isSignatureProviderEnvelope:
          type: string
          description: ""
        lastModified:
          type: string
          description: Utc date and time the comment was last updated (can only be
            done by creator.)
        name:
          type: string
          description: ""
        ownerName:
          type: string
          description: Name of the envelope owner.
        pageCount:
          type: integer
          description: ""
          format: int32
        password:
          type: string
          description: ""
        senderEmail:
          type: string
          description: ""
        senderName:
          type: string
          description: Name of the envelope sender.
        sentDateTime:
          type: string
          description: The UTC DateTime when the envelope was sent. Read only.
        shared:
          type: string
          description: "When set to **true**, this custom tab is shared."
        status:
          type: string
          description: Item status. <!-- TODO -->
        subject:
          type: string
          description: ""
        templateId:
          type: string
          description: "The unique identifier of the template. If this is not provided,\
            \ DocuSign will generate a value. "
        uri:
          type: string
          description: ""
      description: ""
      x-ds-definition-name: folderItem
      x-ms-summary: ""
    folderItem_v2:
      type: object
      properties:
        completedDateTime:
          type: string
          description: Specifies the date and time this item was completed.
        createdDateTime:
          type: string
          description: Indicates the date and time the item was created.
        envelopeId:
          type: string
          description: The envelope ID of the envelope status that failed to post.
        envelopeUri:
          type: string
          description: Contains a URI for an endpoint that you can use to retrieve
            the envelope or envelopes.
        expireDateTime:
          type: string
          description: The date and time the envelope is set to expire.
        folderId:
          type: string
          description: The ID of the folder being accessed.
        folderUri:
          type: string
          description: ""
        is21CFRPart11:
          type: string
          description: "When set to **true**, indicates that this module is enabled\
            \ on the account."
        isSignatureProviderEnvelope:
          type: string
          description: ""
        lastModifiedDateTime:
          type: string
          description: The date and time the item was last modified.
        ownerName:
          type: string
          description: ""
        recipients:
          $ref: '#/components/schemas/EnvelopeRecipients'
        recipientsUri:
          type: string
          description: Contains a URI for an endpoint that you can use to retrieve
            the recipients.
        senderCompany:
          type: string
          description: ""
        senderEmail:
          type: string
          description: ""
        senderName:
          type: string
          description: ""
        senderUserId:
          type: string
          description: ""
        sentDateTime:
          type: string
          description: The UTC DateTime when the envelope was sent. Read only.
        status:
          type: string
          description: Item status. <!-- TODO -->
        subject:
          type: string
          description: ""
      description: ""
      x-ds-definition-name: folderItem_v2
      x-ms-summary: ""
    folderItemResponse:
      type: object
      properties:
        endPosition:
          type: string
          description: 'The last position in the result set. '
        folderItems:
          type: array
          description: 'A list of the envelopes in the specified folder or folders. '
          items:
            $ref: '#/components/schemas/folderItem_v2'
        nextUri:
          type: string
          description: 'The URI for the next chunk of records based on the search
            request. It is `null` if this is the last set of results for the search. '
        previousUri:
          type: string
          description: 'The URI for the prior chunk of records based on the search
            request. It is `null` if this is the first set of results for the search. '
        resultSetSize:
          type: string
          description: 'The number of results returned in this response. '
        startPosition:
          type: string
          description: Starting position of the current result set.
        totalRows:
          type: string
          description: ""
      description: ""
      x-ds-definition-name: folderItemResponse
      x-ms-summary: ""
    folderItemsResponse:
      type: object
      properties:
        endPosition:
          type: string
          description: 'The last position in the result set. '
        folderItems:
          type: array
          description: 'A list of the envelopes in the specified folder or folders. '
          items:
            $ref: '#/components/schemas/folderItem'
        nextUri:
          type: string
          description: 'The URI for the next chunk of records based on the search
            request. It is `null` if this is the last set of results for the search. '
        previousUri:
          type: string
          description: 'The URI for the prior chunk of records based on the search
            request. It is `null` if this is the first set of results for the search. '
        resultSetSize:
          type: string
          description: 'The number of results returned in this response. '
        startPosition:
          type: string
          description: Starting position of the current result set.
        totalSetSize:
          type: string
          description: The total number of items in the search's result set. It will
            always be greater than or equal to the value of the `resultSetSize` field.
      description: ""
      x-ds-definition-name: folderItemsResponse
      x-ms-summary: ""
    foldersRequest:
      type: object
      properties:
        envelopeIds:
          type: array
          description: ""
          items:
            type: string
        fromFolderId:
          type: string
          description: ' The folder ID the envelope is being moved from.'
      description: ""
      x-ds-definition-name: foldersRequest
      x-ms-summary: ""
    foldersResponse:
      type: object
      properties:
        folders:
          type: array
          description: A collection of folder objects returned in a response.
          items:
            $ref: '#/components/schemas/folder'
      description: ""
      x-ds-definition-name: foldersResponse
      x-ms-summary: ""
    forgottenPasswordInformation:
      type: object
      properties:
        forgottenPasswordAnswer1:
          type: string
          description: The answer to the first forgotten password challenge question.
        forgottenPasswordAnswer2:
          type: string
          description: The answer to the second forgotten password challenge question.
        forgottenPasswordAnswer3:
          type: string
          description: The answer to the third forgotten password challenge question.
        forgottenPasswordAnswer4:
          type: string
          description: The answer to the fourth forgotten password challenge question.
        forgottenPasswordQuestion1:
          type: string
          description: The first challenge question presented to a user who has forgotten
            their password.
        forgottenPasswordQuestion2:
          type: string
          description: The second challenge question presented to a user who has forgotten
            their password.
        forgottenPasswordQuestion3:
          type: string
          description: The third challenge question presented to a user who has forgotten
            their password.
        forgottenPasswordQuestion4:
          type: string
          description: The fourth challenge question presented to a user who has forgotten
            their password.
      description: A complex element that has up to four Question/Answer pairs for
        forgotten password information.
      x-ds-definition-name: forgottenPasswordInformation
      x-ms-summary: A complex element that has up to four Question/Answer pairs for
        forgotten password information.
    formulaTab:
      type: object
      properties:
        anchorCaseSensitive:
          type: string
          description: |-
            Reserved for DocuSign.
            <!--
            When set to **true**, the anchor string does not consider case when matching strings in the document. The default value is **true**.
            -->
        anchorHorizontalAlignment:
          type: string
          description: |
            Reserved for DocuSign.
            <!--
            Specifies the alignment of anchor tabs with anchor strings. Possible values are **left** or **right**. The default value is **left**.
            -->
        anchorIgnoreIfNotPresent:
          type: string
          description: "When set to **true**, this tab is ignored if anchorString\
            \ is not found in the document."
        anchorMatchWholeWord:
          type: string
          description: |
            Reserved for DocuSign.
            <!--
            When set to **true**, the anchor string in this tab matches whole words only (strings embedded in other strings are ignored.) The default value is **true**.
            -->
        anchorString:
          type: string
          description: Specifies the anchor string.
        anchorUnits:
          type: string
          description: |
            Specifies units of the
            `anchorXOffset` and
            `anchorYOffset`.
            Valid units are:

            - `pixels`
            - `inches`
            - `mms`
            - `cms`
        anchorXOffset:
          type: string
          description: |
            Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.
        anchorYOffset:
          type: string
          description: |
            Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.
        bold:
          type: string
          description: "When set to **true**, the information in the tab is bold."
        concealValueOnDocument:
          type: string
          description: |-
            When set to **true**, the field appears normally while the recipient is adding or modifying the information in the field, but the data is not visible (the characters are hidden by asterisks) to any other signer or the sender.

            When an envelope is completed the information is available to the sender through the Form Data link in the DocuSign Console.

            This setting applies only to text boxes and does not affect list boxes, radio buttons, or check boxes.
        conditionalParentLabel:
          type: string
          description: For conditional fields this is the TabLabel of the parent tab
            that controls this tab's visibility.
        conditionalParentValue:
          type: string
          description: |
            For conditional fields, this is the value of the parent tab that controls the tab's visibility.

            If the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use "on" as the value to show that the parent tab is active.
        customTabId:
          type: string
          description: "The DocuSign generated custom tab ID for the custom tab to\
            \ be applied. This can only be used when adding new tabs for a recipient.\
            \ When used, the new tab inherits all the custom tab properties."
        disableAutoSize:
          type: string
          description: "When set to **true**, disables the auto sizing of single line\
            \ text boxes in the signing screen when the signer enters data. If disabled\
            \ users will only be able enter as much data as the text box can hold.\
            \ By default this is false. This property only affects single line text\
            \ boxes."
        documentId:
          type: string
          description: Specifies the document ID number that the tab is placed on.
            This must refer to an existing Document's ID attribute.
        errorDetails:
          $ref: '#/components/schemas/errorDetails'
        font:
          type: string
          description: |
            The font to be used for the tab value. Supported Fonts include:

            - Default
            - Arial
            - ArialNarrow
            - Calibri
            - CourierNew
            - Garamond
            - Georgia
            - Helvetica
            - LucidaConsole
            - MSGothic
            - MSMincho
            - OCR-A
            - Tahoma
            - TimesNewRoman
            - Trebuchet
            - Verdana
        fontColor:
          type: string
          description: "The font color used for the information in the tab. Possible\
            \ values are: \n\n- Black\n- BrightBlue\n- BrightRed\n- DarkGreen\n- DarkRed\n\
            - Gold\n- Green\n- NavyBlue\n- Purple\n- White\n"
        fontSize:
          type: string
          description: |-
            The font size used for the information in the tab. Possible values are:

            - Size7
            - Size8
            - Size9
            - Size10
            - Size11
            - Size12
            - Size14
            - Size16
            - Size18
            - Size20
            - Size22
            - Size24
            - Size26
            - Size28
            - Size36
            - Size48
            - Size72
        formula:
          type: string
          description: |
            Contains the formula
            for calculating the value of
            this tab.

            Use a tab's `tabLabel`,
            enclosed in brackets,
            to refer to it.

            For example,
            you want to present the total cost
            of two items, tax included.

            The cost of each item is stored
            in number tabs labeled Item1 and Item2.
            The tax rate is in a number tab
            labeled TaxRate.

            The formula string for this property
            would be:
            `([Item1] + [Item2]) * (1 + [TaxRate])`

            See [Calculated Fields][calculatedfields]
            in the DocuSign Support Center
            to learn more about formulas.

            Maximum Length: 2000 characters

            [calculatedfields]: https://support.docusign.com/en/guides/ndse-user-guide-calculated-fields
        hidden:
          type: string
          description: |
            If this is a regular formula (no `paymentDetails` property is present):

            * **true**: The tab is hidden.
            * **false**: The tab is shown.

            If the formula is payment item (a `paymentDetails` property is present):

            * **true**: The tab is displayed as a payment.
            * **false**: The tab is displayed as a regular formula.
        isPaymentAmount:
          type: string
          description: "When set to **true**, sets this as a payment tab. Can only\
            \ be used with Text, Number, Formula, or List tabs. The value of the tab\
            \ must be a number. "
        italic:
          type: string
          description: "When set to **true**, the information in the tab is italic."
        locked:
          type: string
          description: "When set to **true**, the signer cannot change the data of\
            \ the custom tab."
        maxLength:
          type: integer
          description: An optional value that describes the maximum length of the
            property when the property is a string.
          format: int32
        mergeField:
          $ref: '#/components/schemas/mergeField'
        name:
          type: string
          description: ""
        originalValue:
          type: string
          description: 'The initial value of the tab when it was sent to the recipient. '
        pageNumber:
          type: string
          description: |
            Specifies the page number on which the tab is located.
            Must be 1 for supplemental documents.
        paymentDetails:
          $ref: '#/components/schemas/paymentDetails'
        recipientId:
          type: string
          description: Unique for the recipient. It is used by the tab element to
            indicate which recipient is to sign the Document.
        requireAll:
          type: string
          description: "When set to **true** and shared is true, information must\
            \ be entered in this field to complete the envelope. "
        required:
          type: string
          description: "When set to **true**, the signer is required to fill out this\
            \ tab"
        requireInitialOnSharedChange:
          type: string
          description: "Optional element for field markup. When set to **true**, the\
            \ signer is required to initial when they modify a shared field."
        roundDecimalPlaces:
          type: string
          description: ""
        senderRequired:
          type: string
          description: "When set to **true**, the sender must populate the tab before\
            \ an envelope can be sent using the template. \n\nThis value tab can only\
            \ be changed by modifying (PUT) the template. \n\nTabs with a `senderRequired`\
            \ value of true cannot be deleted from an envelope."
        shared:
          type: string
          description: "When set to **true**, this custom tab is shared."
        status:
          type: string
          description: |
            Tab status
            <!-- todo -->
        tabGroupLabels:
          type: array
          description: ""
          items:
            type: string
        tabId:
          type: string
          description: The unique identifier for the tab.
        tabLabel:
          type: string
          description: |
            The label string associated with the tab.
            The string may be the empty string.
            If no value is provided, the tab type is used as the value.

            Maximum of 500 characters.
        tabOrder:
          type: string
          description: |-
            A positive integer that sets the order the tab is navigated to during signing.

            Tabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.
        templateLocked:
          type: string
          description: "When set to **true**, the sender cannot change any attributes\
            \ of the recipient. Used only when working with template recipients. "
        templateRequired:
          type: string
          description: "When set to **true**, the sender may not remove the recipient.\
            \ Used only when working with template recipients."
        tooltip:
          type: string
          description: ""
        underline:
          type: string
          description: "When set to **true**, the information in the tab is underlined."
        validationMessage:
          type: string
          description: The message displayed if the custom tab fails input validation
            (either custom of embedded).
        validationPattern:
          type: string
          description: A regular expressionn used to validate input for the tab.
        value:
          type: string
          description: 'Specifies the value of the tab. '
        width:
          type: integer
          description: Width of the tab in pixels.
          format: int32
        xPosition:
          type: string
          description: |
            This property indicates the horizontal offset of the object on the page.
            DocuSign uses 72 DPI when determining position.
            Required. May be zero.

            To improve the tab's position on the document,
            DocuSign recommends
            adjusting `xPosition`
            and `yPosition`
            coordinates
            by (+35, -2)
        yPosition:
          type: string
          description: |
            This property indicates the vertical offset of the object on the page.
            DocuSign uses 72 DPI when determining position.
            Required. May be zero.

            To improve the tab's position on the document,
            DocuSign recommends
            adjusting `xPosition`
            and `yPosition`
            coordinates
            by (+35, -2)
      description: |
        The value of a formula tab is calculated
        from the values of other
        number or date tabs in the document.
        When the recipient completes the underlying fields,
        the formula tab calculates and displays the result.

        The `formula` property of the tab
        contains the references
        to the underlying tabs.
        See [Calculated Fields][calculatedfields]
        in the DocuSign Support Center
        to learn more about formulas.

        If a formula tab contains
        a `paymentDetails` property,
        the tab is considered a payment item.
        See [Requesting Payments Along with Signatures][paymentguide]
        in the DocuSign Support Center
        to learn more about payments.

        [calculatedfields]: https://support.docusign.com/en/guides/ndse-user-guide-calculated-fields
        [paymentguide]:     https://support.docusign.com/en/guides/requesting-payments-along-with-signatures
      x-ds-definition-name: formulaTab
      x-ms-summary: |
        The value of a formula tab is calculated
        from the values of other
        number or date tabs in the document.
        When the recipient completes the underlying fields,
        the formula tab calculates and displays the result.

        The `formula` property of the tab
        contains the references
        to the underlying tabs.
        See [Calculated Fields][calculatedfields]
        in the DocuSign Support Center
        to learn more about formulas.

        If a formula tab contains
        a `paymentDetails` property,
        the tab is considered a payment item.
        See [Requesting Payments Along with Signatures][paymentguide]
        in the DocuSign Support Center
        to learn more about payments.

        [calculatedfields]: https://support.docusign.com/en/guides/ndse-user-guide-calculated-fields
        [paymentguide]:     https://support.docusign.com/en/guides/requesting-payments-along-with-signatures
    fullName:
      type: object
      properties:
        anchorCaseSensitive:
          type: string
          description: |-
            Reserved for DocuSign.
            <!--
            When set to **true**, the anchor string does not consider case when matching strings in the document. The default value is **true**.
            -->
        anchorHorizontalAlignment:
          type: string
          description: |
            Reserved for DocuSign.
            <!--
            Specifies the alignment of anchor tabs with anchor strings. Possible values are **left** or **right**. The default value is **left**.
            -->
        anchorIgnoreIfNotPresent:
          type: string
          description: "When set to **true**, this tab is ignored if anchorString\
            \ is not found in the document."
        anchorMatchWholeWord:
          type: string
          description: |
            Reserved for DocuSign.
            <!--
            When set to **true**, the anchor string in this tab matches whole words only (strings embedded in other strings are ignored.) The default value is **true**.
            -->
        anchorString:
          type: string
          description: Specifies the anchor string.
        anchorUnits:
          type: string
          description: |
            Specifies units of the
            `anchorXOffset` and
            `anchorYOffset`.
            Valid units are:

            - `pixels`
            - `inches`
            - `mms`
            - `cms`
        anchorXOffset:
          type: string
          description: |
            Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.
        anchorYOffset:
          type: string
          description: |
            Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.
        bold:
          type: string
          description: "When set to **true**, the information in the tab is bold."
        conditionalParentLabel:
          type: string
          description: For conditional fields this is the TabLabel of the parent tab
            that controls this tab's visibility.
        conditionalParentValue:
          type: string
          description: |
            For conditional fields, this is the value of the parent tab that controls the tab's visibility.

            If the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use "on" as the value to show that the parent tab is active.
        customTabId:
          type: string
          description: "The DocuSign generated custom tab ID for the custom tab to\
            \ be applied. This can only be used when adding new tabs for a recipient.\
            \ When used, the new tab inherits all the custom tab properties."
        documentId:
          type: string
          description: Specifies the document ID number that the tab is placed on.
            This must refer to an existing Document's ID attribute.
        errorDetails:
          $ref: '#/components/schemas/errorDetails'
        font:
          type: string
          description: |
            The font to be used for the tab value. Supported Fonts include:

            - Default
            - Arial
            - ArialNarrow
            - Calibri
            - CourierNew
            - Garamond
            - Georgia
            - Helvetica
            - LucidaConsole
            - MSGothic
            - MSMincho
            - OCR-A
            - Tahoma
            - TimesNewRoman
            - Trebuchet
            - Verdana
        fontColor:
          type: string
          description: "The font color used for the information in the tab. Possible\
            \ values are: \n\n- Black\n- BrightBlue\n- BrightRed\n- DarkGreen\n- DarkRed\n\
            - Gold\n- Green\n- NavyBlue\n- Purple\n- White\n"
        fontSize:
          type: string
          description: |-
            The font size used for the information in the tab. Possible values are:

            - Size7
            - Size8
            - Size9
            - Size10
            - Size11
            - Size12
            - Size14
            - Size16
            - Size18
            - Size20
            - Size22
            - Size24
            - Size26
            - Size28
            - Size36
            - Size48
            - Size72
        italic:
          type: string
          description: "When set to **true**, the information in the tab is italic."
        mergeField:
          $ref: '#/components/schemas/mergeField'
        name:
          type: string
          description: ""
        pageNumber:
          type: string
          description: |
            Specifies the page number on which the tab is located.
            Must be 1 for supplemental documents.
        recipientId:
          type: string
          description: Unique for the recipient. It is used by the tab element to
            indicate which recipient is to sign the Document.
        status:
          type: string
          description: |
            Tab status
            <!-- todo -->
        tabGroupLabels:
          type: array
          description: ""
          items:
            type: string
        tabId:
          type: string
          description: The unique identifier for the tab.
        tabLabel:
          type: string
          description: |
            The label string associated with the tab.
            The string may be the empty string.
            If no value is provided, the tab type is used as the value.

            Maximum of 500 characters.
        tabOrder:
          type: string
          description: |-
            A positive integer that sets the order the tab is navigated to during signing.

            Tabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.
        templateLocked:
          type: string
          description: "When set to **true**, the sender cannot change any attributes\
            \ of the recipient. Used only when working with template recipients. "
        templateRequired:
          type: string
          description: "When set to **true**, the sender may not remove the recipient.\
            \ Used only when working with template recipients."
        tooltip:
          type: string
          description: ""
        underline:
          type: string
          description: "When set to **true**, the information in the tab is underlined."
        value:
          type: string
          description: 'Specifies the value of the tab. '
        xPosition:
          type: string
          description: |
            This property indicates the horizontal offset of the object on the page.
            DocuSign uses 72 DPI when determining position.
            Required. May be zero.

            To improve the tab's position on the document,
            DocuSign recommends
            adjusting `xPosition`
            and `yPosition`
            coordinates
            by (-3, -2)
        yPosition:
          type: string
          description: |
            This property indicates the vertical offset of the object on the page.
            DocuSign uses 72 DPI when determining position.
            Required. May be zero.

            To improve the tab's position on the document,
            DocuSign recommends
            adjusting `xPosition`
            and `yPosition`
            coordinates
            by (-3, -2)
      description: |
        A tab that displays the recipient's full name.
      x-ds-definition-name: fullName
      x-ms-summary: |
        A tab that displays the recipient's full name.
    group:
      type: object
      properties:
        errorDetails:
          $ref: '#/components/schemas/errorDetails'
        groupId:
          type: string
          description: The DocuSign group ID for the group.
        groupName:
          type: string
          description: The name of the group.
        groupType:
          type: string
          description: The group type.
        permissionProfileId:
          type: string
          description: The ID of the permission profile associated with the group.
        users:
          type: array
          description: List of users in the group.
          items:
            $ref: '#/components/schemas/userInfo'
      description: Information about groups.
      x-ds-definition-name: group
      x-ms-summary: Information about groups.
    groupInformation:
      type: object
      properties:
        endPosition:
          type: string
          description: 'The last position in the result set. '
        groups:
          type: array
          description: A collection group objects containing information about the
            groups returned.
          items:
            $ref: '#/components/schemas/group'
        nextUri:
          type: string
          description: 'The URI for the next chunk of records based on the search
            request. It is `null` if this is the last set of results for the search. '
        previousUri:
          type: string
          description: 'The URI for the prior chunk of records based on the search
            request. It is `null` if this is the first set of results for the search. '
        resultSetSize:
          type: string
          description: 'The number of results returned in this response. '
        startPosition:
          type: string
          description: Starting position of the current result set.
        totalSetSize:
          type: string
          description: The total number of items in the search's result set. It will
            always be greater than or equal to the value of the `resultSetSize` field.
      description: ""
      x-ds-definition-name: groupInformation
      x-ms-summary: ""
    idCheckInformationInput:
      type: object
      properties:
        addressInformationInput:
          $ref: '#/components/schemas/addressInformationInput'
        dobInformationInput:
          $ref: '#/components/schemas/dobInformationInput'
        ssn4InformationInput:
          $ref: '#/components/schemas/ssn4InformationInput'
        ssn9InformationInput:
          $ref: '#/components/schemas/ssn9InformationInput'
      description: "A complex element that contains input information related to a\
        \ recipient ID check. It can include the following information.\n\naddressInformationInput:\
        \ Used to set recipient address information and consists of:\n\n* addressInformation:\
        \ consists of six elements, with stree2 and zipPlus4 being optional. The elements\
        \ are: street1, street2, city, state, zip, zipPlus4. The maximum length of\
        \ each element is: street1/street2 = 150 characters, city = 50 characters,\
        \ state = 2 characters, and zip/zipPlus4 = 20 characters.\n* displayLevelCode:\
        \ Specifies the display level for the recipient. Values are: ReadOnly, Editable,\
        \ or DoNotDisplay.\n* receiveInResponse: A Boolean element that specifies\
        \ if the information needs to be returned in the response.\n\ndobInformationInput:\
        \ Used to set recipient date of birth information and consists of:\n\n* dateOfBirth:\
        \ Specifies the recipient's date, month and year of birth.\n* displayLevelCode:\
        \ Specifies the display level for the recipient. Values are: ReadOnly, Editable,\
        \ or DoNotDisplay.\n* receiveInResponse: A Boolean element that specifies\
        \ if the information needs to be returned in the response.\n\nssn4InformationInput:\
        \ Used to set the last four digits of the recipient's SSN information and\
        \ consists of:\n\n* ssn4: Specifies the last four digits of the recipient's\
        \ SSN.\n* displayLevelCode: Specifies the display level for the recipient.\
        \ Values are: ReadOnly, Editable, or DoNotDisplay.\n* receiveInResponse: A\
        \ Boolean element that specifies if the information needs to be returned in\
        \ the response.\n\nssn9InformationInput: Used to set the recipient's SSN information.\
        \ Note that the ssn9 information can never be returned in the response. The\
        \ ssn9 input consists of: \n* ssn9: Specifies the recipient's SSN.\n* displayLevelCode:\
        \ Specifies the display level for the recipient. Values are: ReadOnly, Editable,\
        \ or DoNotDisplay."
      x-ds-definition-name: idCheckInformationInput
      x-ms-summary: "A complex element that contains input information related to\
        \ a recipient ID check. It can include the following information.\n\naddressInformationInput:\
        \ Used to set recipient address information and consists of:\n\n* addressInformation:\
        \ consists of six elements, with stree2 and zipPlus4 being optional. The elements\
        \ are: street1, street2, city, state, zip, zipPlus4. The maximum length of\
        \ each element is: street1/street2 = 150 characters, city = 50 characters,\
        \ state = 2 characters, and zip/zipPlus4 = 20 characters.\n* displayLevelCode:\
        \ Specifies the display level for the recipient. Values are: ReadOnly, Editable,\
        \ or DoNotDisplay.\n* receiveInResponse: A Boolean element that specifies\
        \ if the information needs to be returned in the response.\n\ndobInformationInput:\
        \ Used to set recipient date of birth information and consists of:\n\n* dateOfBirth:\
        \ Specifies the recipient's date, month and year of birth.\n* displayLevelCode:\
        \ Specifies the display level for the recipient. Values are: ReadOnly, Editable,\
        \ or DoNotDisplay.\n* receiveInResponse: A Boolean element that specifies\
        \ if the information needs to be returned in the response.\n\nssn4InformationInput:\
        \ Used to set the last four digits of the recipient's SSN information and\
        \ consists of:\n\n* ssn4: Specifies the last four digits of the recipient's\
        \ SSN.\n* displayLevelCode: Specifies the display level for the recipient.\
        \ Values are: ReadOnly, Editable, or DoNotDisplay.\n* receiveInResponse: A\
        \ Boolean element that specifies if the information needs to be returned in\
        \ the response.\n\nssn9InformationInput: Used to set the recipient's SSN information.\
        \ Note that the ssn9 information can never be returned in the response. The\
        \ ssn9 input consists of: \n* ssn9: Specifies the recipient's SSN.\n* displayLevelCode:\
        \ Specifies the display level for the recipient. Values are: ReadOnly, Editable,\
        \ or DoNotDisplay."
    initialHere:
      type: object
      properties:
        anchorCaseSensitive:
          type: string
          description: |-
            Reserved for DocuSign.
            <!--
            When set to **true**, the anchor string does not consider case when matching strings in the document. The default value is **true**.
            -->
        anchorHorizontalAlignment:
          type: string
          description: |
            Reserved for DocuSign.
            <!--
            Specifies the alignment of anchor tabs with anchor strings. Possible values are **left** or **right**. The default value is **left**.
            -->
        anchorIgnoreIfNotPresent:
          type: string
          description: "When set to **true**, this tab is ignored if anchorString\
            \ is not found in the document."
        anchorMatchWholeWord:
          type: string
          description: |
            Reserved for DocuSign.
            <!--
            When set to **true**, the anchor string in this tab matches whole words only (strings embedded in other strings are ignored.) The default value is **true**.
            -->
        anchorString:
          type: string
          description: Specifies the anchor string.
        anchorUnits:
          type: string
          description: |
            Specifies units of the
            `anchorXOffset` and
            `anchorYOffset`.
            Valid units are:

            - `pixels`
            - `inches`
            - `mms`
            - `cms`
        anchorXOffset:
          type: string
          description: |
            Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.
        anchorYOffset:
          type: string
          description: |
            Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.
        conditionalParentLabel:
          type: string
          description: For conditional fields this is the TabLabel of the parent tab
            that controls this tab's visibility.
        conditionalParentValue:
          type: string
          description: |
            For conditional fields, this is the value of the parent tab that controls the tab's visibility.

            If the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use "on" as the value to show that the parent tab is active.
        customTabId:
          type: string
          description: "The DocuSign generated custom tab ID for the custom tab to\
            \ be applied. This can only be used when adding new tabs for a recipient.\
            \ When used, the new tab inherits all the custom tab properties."
        documentId:
          type: string
          description: Specifies the document ID number that the tab is placed on.
            This must refer to an existing Document's ID attribute.
        errorDetails:
          $ref: '#/components/schemas/errorDetails'
        mergeField:
          $ref: '#/components/schemas/mergeField'
        name:
          type: string
          description: Specifies the tool tip text for the tab.
        optional:
          type: string
          description: ""
        pageNumber:
          type: string
          description: |
            Specifies the page number on which the tab is located.
            Must be 1 for supplemental documents.
        recipientId:
          type: string
          description: Unique for the recipient. It is used by the tab element to
            indicate which recipient is to sign the Document.
        scaleValue:
          type: number
          description: " Sets the size for the InitialHere tab. It can be value from\
            \ 0.5 to 1.0, where 1.0 represents full size and 0.5 is 50% size."
          format: float
        status:
          type: string
          description: |
            Tab status
            <!-- todo -->
        tabGroupLabels:
          type: array
          description: ""
          items:
            type: string
        tabId:
          type: string
          description: The unique identifier for the tab.
        tabLabel:
          type: string
          description: |
            The label string associated with the tab.
            The string may be the empty string.
            If no value is provided, the tab type is used as the value.

            Maximum of 500 characters.
        tabOrder:
          type: string
          description: |-
            A positive integer that sets the order the tab is navigated to during signing.

            Tabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.
        templateLocked:
          type: string
          description: "When set to **true**, the sender cannot change any attributes\
            \ of the recipient. Used only when working with template recipients. "
        templateRequired:
          type: string
          description: "When set to **true**, the sender may not remove the recipient.\
            \ Used only when working with template recipients."
        tooltip:
          type: string
          description: ""
        xPosition:
          type: string
          description: |
            This property indicates the horizontal offset of the object on the page.
            DocuSign uses 72 DPI when determining position.
            Required. May be zero.

            To improve the tab's position on the document,
            DocuSign recommends
            adjusting `xPosition`
            and `yPosition`
            coordinates
            by (+2, -23)
        yPosition:
          type: string
          description: |
            This property indicates the vertical offset of the object on the page.
            DocuSign uses 72 DPI when determining position.
            Required. May be zero.

            To improve the tab's position on the document,
            DocuSign recommends
            adjusting `xPosition`
            and `yPosition`
            coordinates
            by (+2, -23)
      description: |
        A tab that allows the recipient to initial the document. May
        be optional.
      x-ds-definition-name: initialHere
      x-ms-summary: |
        A tab that allows the recipient to initial the document. May
        be optional.
    inlineTemplate:
      type: object
      properties:
        customFields:
          $ref: '#/components/schemas/AccountCustomFields'
        documents:
          type: array
          description: Complex element contains the details on the documents in the
            envelope.
          items:
            $ref: '#/components/schemas/document'
        envelope:
          $ref: '#/components/schemas/envelope'
        recipients:
          $ref: '#/components/schemas/EnvelopeRecipients'
        sequence:
          type: string
          description: Specifies the order in which templates are overlaid.
      description: ""
      x-ds-definition-name: inlineTemplate
      x-ms-summary: ""
    inPersonSigner:
      type: object
      properties:
        accessCode:
          type: string
          description: "If a value is provided, the recipient must enter the value\
            \ as the access code to view and sign the envelope. \n\nMaximum Length:\
            \ 50 characters and it must conform to the account's access code format\
            \ setting.\n\nIf blank, but the signer `accessCode` property is set in\
            \ the envelope, then that value is used.\n\nIf blank and the signer `accessCode`\
            \ property is not set, then the access code is not required."
        addAccessCodeToEmail:
          type: string
          description: This Optional attribute indicates that the access code will
            be added to the email sent to the recipient; this nullifies the Security
            measure of Access Code on the recipient.
        autoNavigation:
          type: string
          description: "When set to **true**, autonavigation is set for the recipient."
        canSignOffline:
          type: string
          description: "When set to **true**, specifies that the signer can perform\
            \ the signing ceremony offline."
        clientUserId:
          type: string
          description: "Specifies whether the recipient is embedded or remote. \n\n\
            If the `clientUserId` property is not null then the recipient is embedded.\
            \ Use this field to associate the signer with their userId in your app.\
            \ Authenticating the user is the responsibility of your app when you use\
            \ embedded signing.\n\nNote: if the `clientUserId` property is set and\
            \ either `SignerMustHaveAccount` or `SignerMustLoginToSign` property of\
            \ the account settings is set to  **true**, an error is generated on sending.\
            \ \n\nMaximum length: 100 characters. "
        creationReason:
          type: string
          description: "The reason why the recipient was created (for example, `sender`).\
            \ Read only."
        customFields:
          type: array
          description: An optional array of strings that allows the sender to provide
            custom data about the recipient. This information is returned in the envelope
            status but otherwise not used by DocuSign. Each customField string can
            be a maximum of 100 characters.
          items:
            type: string
        declinedDateTime:
          type: string
          description: The date and time the recipient declined the document. Read
            only.
        declinedReason:
          type: string
          description: The reason the recipient declined the document. Read only.
        defaultRecipient:
          type: string
          description: |
            When set to **true**,
            this is the default recipient for the envelope.
            This option is used when creating an envelope from a template.
        deliveredDateTime:
          type: string
          description: "Reserved: For DocuSign use only."
        deliveryMethod:
          type: string
          description: "Reserved: For DocuSign use only."
        documentVisibility:
          type: array
          description: "A list of `documentVisibility` objects. Each object in the\
            \ list specifies whether a document in the envelope is visible to this\
            \ recipient. For the envelope to use this functionality, Document Visibility\
            \ must be enabled for the account and the `enforceSignerVisibility` property\
            \ must be set to **true**."
          items:
            $ref: '#/components/schemas/documentVisibility'
        email:
          type: string
          description: |
            The signer's email address in an eNotary flow.

            Use only when `inPersonSigningType` is `notary`.
            For regular in-person-signer flow, use `signerEmail` instead.
        emailNotification:
          $ref: '#/components/schemas/recipientEmailNotification'
        embeddedRecipientStartURL:
          type: string
          description: "Specifies a sender provided valid URL string for redirecting\
            \ an embedded recipient. When using this option, the embedded recipient\
            \ still receives an email from DocuSign, just as a remote recipient would.\
            \ When the document link in the email is clicked the recipient is redirected,\
            \ through DocuSign, to the supplied URL to complete their actions. When\
            \ routing to the URL, the sender's system (the server responding to the\
            \ URL) must request a recipient token to launch a signing session. \n\n\
            If set to `SIGN_AT_DOCUSIGN`, the recipient is directed to an embedded\
            \ signing or viewing process directly at DocuSign. The signing or viewing\
            \ action is initiated by the DocuSign system and the transaction activity\
            \ and Certificate of Completion records will reflect this. In all other\
            \ ways the process is identical to an embedded signing or viewing operation\
            \ that is launched by any partner.\n\nIt is important to remember that\
            \ in a typical embedded workflow the authentication of an embedded recipient\
            \ is the responsibility of the sending application, DocuSign expects that\
            \ senders will follow their own process for establishing the recipient's\
            \ identity. In this workflow the recipient goes through the sending application\
            \ before the embedded signing or viewing process in initiated. However,\
            \ when the sending application sets `EmbeddedRecipientStartURL=SIGN_AT_DOCUSIGN`,\
            \ the recipient goes directly to the embedded signing or viewing process\
            \ bypassing the sending application and any authentication steps the sending\
            \ application would use. In this case, DocuSign recommends that you use\
            \ one of the normal DocuSign authentication features (Access Code, Phone\
            \ Authentication, SMS Authentication, etc.) to verify the identity of\
            \ the recipient.\n\nIf the `clientUserId` property is NOT set, and the\
            \ `embeddedRecipientStartURL` is set, DocuSign will ignore the redirect\
            \ URL and launch the standard signing process for the email recipient.\
            \ Information can be appended to the embedded recipient start URL using\
            \ merge fields. The available merge fields items are: envelopeId, recipientId,\
            \ recipientName, recipientEmail, and customFields. The `customFields`\
            \ property must be set fort the recipient or envelope. The merge fields\
            \ are enclosed in double brackets. \n\n*Example*: \n\n`http://senderHost/[[mergeField1]]/\
            \ beginSigningSession? [[mergeField2]]&[[mergeField3]]` "
        errorDetails:
          $ref: '#/components/schemas/errorDetails'
        excludedDocuments:
          type: array
          description: |-
            Specifies the documents that are not visible to this recipient. Document Visibility must be enabled for the account and the `enforceSignerVisibility` property must be set to **true** for the envelope to use this.

            When enforce signer visibility is enabled, documents with tabs can only be viewed by signers that have a tab on that document. Recipients that have an administrative role (Agent, Editor, or Intermediaries) or informational role (Certified Deliveries or Carbon Copies) can always see all the documents in an envelope, unless they are specifically excluded using this setting when an envelope is sent. Documents that do not have tabs are always visible to all recipients, unless they are specifically excluded using this setting when an envelope is sent.
          items:
            type: string
        faxNumber:
          type: string
          description: Reserved for DocuSign.
        hostEmail:
          type: string
          description: |
            The email address of the signing host.
            This is the DocuSign user that is hosting the in-person signing session.

            Required when `inPersonSigningType` is `inPersonSigner`.
            For eNotary flow, use `email` instead.

            Maximum Length: 100 characters.
        hostName:
          type: string
          description: |
            The name of the signing host.
            This is the DocuSign user that is hosting the in-person signing session.

            Required when `inPersonSigningType` is `inPersonSigner`.
            For eNotary flow, use `name` instead.

            Maximum Length: 100 characters.
        idCheckConfigurationName:
          type: string
          description: "The name of the authentication check to use. This value must\
            \ match one of the authentication types that the account uses. The names\
            \ of these authentication types appear in the web console sending interface\
            \ in the Identify list for a recipient. This setting overrides any default\
            \ authentication setting. Valid values are:\n\n- `Phone Auth $`: The recipient\
            \ must authenticate by using two-factor authentication (2FA). You provide\
            \ the phone number to use for 2FA in the `phoneAuthentication` object.\n\
            - `SMS Auth $`: The recipient must authenticate via SMS. You provide the\
            \ phone number to use in the `smsAuthentication` object.\n- `ID Check\
            \ $`: The  recipient must answer detailed security questions. \n\n**Example**:\
            \ Your account has ID Check and SMS Authentication available. In the web\
            \ console Identify list, these appear as ID Check $ and SMS Auth $. To\
            \ use ID Check in an envelope, the idCheckConfigurationName should be\
            \ ID Check $. For SMS, you would use SMS Auth $, and you would also need\
            \ to add a phone number to the smsAuthentication node."
        idCheckInformationInput:
          $ref: '#/components/schemas/idCheckInformationInput'
        identityVerification:
          $ref: '#/components/schemas/recipientIdentityVerification'
        inheritEmailNotificationConfiguration:
          type: string
          description: "When set to **true** and the envelope recipient creates a\
            \ DocuSign account after signing, the Manage Account Email Notification\
            \ settings are used as the default settings for the recipient's account. "
        inPersonSigningType:
          type: string
          description: |
            Specifies whether the envelope uses the eNotary feature.
            Valid values:

            * `inPersonSigner` The envelope uses the normal in-person signing flow.
            * `notary`: The envelope uses the eNotary in-person signing flow.
        name:
          type: string
          description: |
            The signer's full legal name in an eNotary flow.

            Required when `inPersonSigningType` is `notary`.
            For regular in-person-signer flow, use `signerName` instead.

            Maximum Length: 100 characters.
        notaryHost:
          $ref: '#/components/schemas/notaryHost'
        note:
          type: string
          description: |
            A note sent to the in-person signer in the signing email.
            This note is visible only to this recipient.

            Maximum Length: 1000 characters.
        phoneAuthentication:
          $ref: '#/components/schemas/recipientPhoneAuthentication'
        recipientAttachments:
          type: array
          description: Reserved for DocuSign.
          items:
            $ref: '#/components/schemas/recipientAttachment'
        recipientAuthenticationStatus:
          $ref: '#/components/schemas/authenticationStatus'
        recipientId:
          type: string
          description: Unique for the recipient. It is used by the tab element to
            indicate which recipient is to sign the Document.
        recipientIdGuid:
          type: string
          description: "The globally-unique identifier (GUID) for a specific recipient\
            \ on a specific envelope. If the same recipient is associated with multiple\
            \ envelopes, they will have a different GUID for each one. Read only."
        recipientSignatureProviders:
          type: array
          description: "The default signature provider is the DocuSign Electronic\
            \ signature system. This parameter is used to specify one or more Standards\
            \ Based Signature (digital signature) providers for the signer to use.\
            \ [More information.](https://developers.docusign.com/esign-rest-api/guides/standards-based-signatures)"
          items:
            $ref: '#/components/schemas/recipientSignatureProvider'
        recipientSuppliesTabs:
          type: string
          description: "When set to **true**, specifies that the recipient creates\
            \ the tabs."
        requireIdLookup:
          type: string
          description: "When set to **true**, the recipient is required to use the\
            \ specified ID check method (including Phone and SMS authentication) to\
            \ validate their identity. "
        requireSignerCertificate:
          type: string
          description: "By default, DocuSign signers create electronic signatures.\
            \ This field can be used to require the signer to use a SAFE-BioPharma\
            \ digital certificate for signing.\n\nThis parameter should only be used\
            \ to select a SAFE-BioPharma certificate. New integrations should use\
            \ the `recipientSignatureProviders` parameter for other types of digital\
            \ certificates. \n\nSet this parameter to `safe` to use a SAFE-BioPharma\
            \ certificate.\n\nThe signer must be enrolled in the SAFE program to sign\
            \ with a SAFE certificate."
        requireSignOnPaper:
          type: string
          description: "When set to **true**, the signer must print, sign, and upload\
            \ or fax the signed documents to DocuSign."
        roleName:
          type: string
          description: Optional element. Specifies the role name associated with the
            recipient.<br/><br/>This is required when working with template recipients.
        routingOrder:
          type: string
          description: 'Specifies the routing order of the recipient in the envelope. '
        samlAuthentication:
          $ref: '#/components/schemas/recipientSAMLAuthentication'
        sentDateTime:
          type: string
          description: The UTC DateTime when the envelope was sent. Read only.
        signatureInfo:
          $ref: '#/components/schemas/recipientSignatureInformation'
        signedDateTime:
          type: string
          description: Reserved for DocuSign.
        signerEmail:
          type: string
          description: |+
            The in-person signer's email address.

            Required when `inPersonSigningType` is `inPersonSigner`.
            For eNotary flow, use `email` instead.

            Maximum Length: 100 characters.

        signerName:
          type: string
          description: |
            The in-person signer's full legal name.

            Required when `inPersonSigningType` is `inPersonSigner`.
            For eNotary flow, use `name` instead.

            Maximum Length: 100 characters.
        signInEachLocation:
          type: string
          description: "When set to **true** and the feature is enabled in the sender's\
            \ account, the signing recipient is required to draw signatures and initials\
            \ at each signature/initial tab (instead of adopting a signature/initial\
            \ style or only drawing a signature/initial once)."
        signingGroupId:
          type: string
          description: "Optional. The ID of the [signing group](https://support.docusign.com/en/guides/ndse-user-guide-signing-groups).\n\
            \n**Note**: When you send an envelope to a signing group, anyone in the\
            \ group can open it and sign it with their own signature. For this reason,\
            \ we recommend that you do not include non-signer recipients (such as\
            \ carbon copy recipients) in the same signing group as signer recipients.\
            \ However, you could create a second signing group for the non-signer\
            \ recipients and change the default action of Needs to Sign to a different\
            \ value, such as Receives a Copy. "
        signingGroupName:
          type: string
          description: "The display name for the signing group. \n\nMaximum Length:\
            \ 100 characters. "
        signingGroupUsers:
          type: array
          description: A complex type that contains information about users in the
            signing group.
          items:
            $ref: '#/components/schemas/userInfo'
        smsAuthentication:
          $ref: '#/components/schemas/recipientSMSAuthentication'
        socialAuthentications:
          type: array
          description: ' Lists the social ID type that can be used for recipient authentication.'
          items:
            $ref: '#/components/schemas/socialAuthentication'
        status:
          type: string
          description: |
            Recipient status.
            <!-- todo -->
        tabs:
          $ref: '#/components/schemas/EnvelopeRecipientTabs'
        templateLocked:
          type: string
          description: "When set to **true**, the sender cannot change any attributes\
            \ of the recipient. Used only when working with template recipients. "
        templateRequired:
          type: string
          description: "When set to **true**, the sender may not remove the recipient.\
            \ Used only when working with template recipients."
        totalTabCount:
          type: string
          description: The total number of tabs in the documents. Read only.
        userId:
          type: string
          description: "The user ID of the user being accessed. Generally this is\
            \ the user ID of the authenticated user, but if the authenticated user\
            \ is an Admin on the account, this may be another user the Admin user\
            \ is accessing. **Note**: For the [GET /v2/accounts/{accountId}/envelopes](https://developers.docusign.com/esign-rest-api/reference/Envelopes/Envelopes/listStatusChanges/#envelopesInformation)\
            \ method, the `user_id` query parameter is not implemented and should\
            \ not be used."
      description: |
        An in-person recipient is a DocuSign user,
        acting as a Signing Host,
        who is in the same physical location as the signer.
        To learn about fields used
        for eNotary feature,
        see the [EnvelopeRecipients resource][enveloperecipientsInPerson].

        [enveloperecipientsInPerson]: /https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipients/#in-person-signers-recipient
      x-ds-definition-name: inPersonSigner
      x-ms-summary: |
        An in-person recipient is a DocuSign user,
        acting as a Signing Host,
        who is in the same physical location as the signer.
        To learn about fields used
        for eNotary feature,
        see the [EnvelopeRecipients resource][enveloperecipientsInPerson].

        [enveloperecipientsInPerson]: /https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipients/#in-person-signers-recipient
    integratedUserInfoList:
      type: object
      properties:
        allUsersSelected:
          type: string
          description: ""
        endPosition:
          type: string
          description: 'The last position in the result set. '
        nextUri:
          type: string
          description: 'The URI for the next chunk of records based on the search
            request. It is `null` if this is the last set of results for the search. '
        previousUri:
          type: string
          description: 'The URI for the prior chunk of records based on the search
            request. It is `null` if this is the first set of results for the search. '
        resultSetSize:
          type: string
          description: 'The number of results returned in this response. '
        startPosition:
          type: string
          description: Starting position of the current result set.
        totalSetSize:
          type: string
          description: The total number of items in the search's result set. It will
            always be greater than or equal to the value of the `resultSetSize` field.
        users:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/userInfo'
      description: ""
      x-ds-definition-name: integratedUserInfoList
      x-ms-summary: ""
    intermediary:
      type: object
      properties:
        accessCode:
          type: string
          description: "If a value is provided, the recipient must enter the value\
            \ as the access code to view and sign the envelope. \n\nMaximum Length:\
            \ 50 characters and it must conform to the account's access code format\
            \ setting.\n\nIf blank, but the signer `accessCode` property is set in\
            \ the envelope, then that value is used.\n\nIf blank and the signer `accessCode`\
            \ property is not set, then the access code is not required."
        addAccessCodeToEmail:
          type: string
          description: This Optional attribute indicates that the access code will
            be added to the email sent to the recipient; this nullifies the Security
            measure of Access Code on the recipient.
        clientUserId:
          type: string
          description: "Specifies whether the recipient is embedded or remote. \n\n\
            If the `clientUserId` property is not null then the recipient is embedded.\
            \ Use this field to associate the signer with their userId in your app.\
            \ Authenticating the user is the responsibility of your app when you use\
            \ embedded signing.\n\nNote: if the `clientUserId` property is set and\
            \ either `SignerMustHaveAccount` or `SignerMustLoginToSign` property of\
            \ the account settings is set to  **true**, an error is generated on sending.\
            \ \n\nMaximum length: 100 characters. "
        customFields:
          type: array
          description: An optional array of strings that allows the sender to provide
            custom data about the recipient. This information is returned in the envelope
            status but otherwise not used by DocuSign. Each customField string can
            be a maximum of 100 characters.
          items:
            type: string
        declinedDateTime:
          type: string
          description: The date and time the recipient declined the document. Read
            only.
        declinedReason:
          type: string
          description: The reason the recipient declined the document. Read only.
        deliveredDateTime:
          type: string
          description: "Reserved: For DocuSign use only."
        deliveryMethod:
          type: string
          description: "Reserved: For DocuSign use only."
        documentVisibility:
          type: array
          description: "A list of `documentVisibility` objects. Each object in the\
            \ list specifies whether a document in the envelope is visible to this\
            \ recipient. For the envelope to use this functionality, Document Visibility\
            \ must be enabled for the account and the `enforceSignerVisibility` property\
            \ must be set to **true**."
          items:
            $ref: '#/components/schemas/documentVisibility'
        email:
          type: string
          description: "Email id of the recipient. Notification of the document to\
            \ sign is sent to this email id. \n\nMaximum length: 100 characters. "
        emailNotification:
          $ref: '#/components/schemas/recipientEmailNotification'
        emailRecipientPostSigningURL:
          type: string
          description: ""
        embeddedRecipientStartURL:
          type: string
          description: "Specifies a sender provided valid URL string for redirecting\
            \ an embedded recipient. When using this option, the embedded recipient\
            \ still receives an email from DocuSign, just as a remote recipient would.\
            \ When the document link in the email is clicked the recipient is redirected,\
            \ through DocuSign, to the supplied URL to complete their actions. When\
            \ routing to the URL, the sender's system (the server responding to the\
            \ URL) must request a recipient token to launch a signing session. \n\n\
            If set to `SIGN_AT_DOCUSIGN`, the recipient is directed to an embedded\
            \ signing or viewing process directly at DocuSign. The signing or viewing\
            \ action is initiated by the DocuSign system and the transaction activity\
            \ and Certificate of Completion records will reflect this. In all other\
            \ ways the process is identical to an embedded signing or viewing operation\
            \ that is launched by any partner.\n\nIt is important to remember that\
            \ in a typical embedded workflow the authentication of an embedded recipient\
            \ is the responsibility of the sending application, DocuSign expects that\
            \ senders will follow their own process for establishing the recipient's\
            \ identity. In this workflow the recipient goes through the sending application\
            \ before the embedded signing or viewing process in initiated. However,\
            \ when the sending application sets `EmbeddedRecipientStartURL=SIGN_AT_DOCUSIGN`,\
            \ the recipient goes directly to the embedded signing or viewing process\
            \ bypassing the sending application and any authentication steps the sending\
            \ application would use. In this case, DocuSign recommends that you use\
            \ one of the normal DocuSign authentication features (Access Code, Phone\
            \ Authentication, SMS Authentication, etc.) to verify the identity of\
            \ the recipient.\n\nIf the `clientUserId` property is NOT set, and the\
            \ `embeddedRecipientStartURL` is set, DocuSign will ignore the redirect\
            \ URL and launch the standard signing process for the email recipient.\
            \ Information can be appended to the embedded recipient start URL using\
            \ merge fields. The available merge fields items are: envelopeId, recipientId,\
            \ recipientName, recipientEmail, and customFields. The `customFields`\
            \ property must be set fort the recipient or envelope. The merge fields\
            \ are enclosed in double brackets. \n\n*Example*: \n\n`http://senderHost/[[mergeField1]]/\
            \ beginSigningSession? [[mergeField2]]&[[mergeField3]]` "
        errorDetails:
          $ref: '#/components/schemas/errorDetails'
        excludedDocuments:
          type: array
          description: |-
            Specifies the documents that are not visible to this recipient. Document Visibility must be enabled for the account and the `enforceSignerVisibility` property must be set to **true** for the envelope to use this.

            When enforce signer visibility is enabled, documents with tabs can only be viewed by signers that have a tab on that document. Recipients that have an administrative role (Agent, Editor, or Intermediaries) or informational role (Certified Deliveries or Carbon Copies) can always see all the documents in an envelope, unless they are specifically excluded using this setting when an envelope is sent. Documents that do not have tabs are always visible to all recipients, unless they are specifically excluded using this setting when an envelope is sent.
          items:
            type: string
        faxNumber:
          type: string
          description: Reserved for DocuSign.
        firstName:
          type: string
          description: "The user's first name. \nMaximum Length: 50 characters."
        fullName:
          type: string
          description: Reserved for DocuSign.
        idCheckConfigurationName:
          type: string
          description: "The name of the authentication check to use. This value must\
            \ match one of the authentication types that the account uses. The names\
            \ of these authentication types appear in the web console sending interface\
            \ in the Identify list for a recipient. This setting overrides any default\
            \ authentication setting. Valid values are:\n\n- `Phone Auth $`: The recipient\
            \ must authenticate by using two-factor authentication (2FA). You provide\
            \ the phone number to use for 2FA in the `phoneAuthentication` object.\n\
            - `SMS Auth $`: The recipient must authenticate via SMS. You provide the\
            \ phone number to use in the `smsAuthentication` object.\n- `ID Check\
            \ $`: The  recipient must answer detailed security questions. \n\n**Example**:\
            \ Your account has ID Check and SMS Authentication available. In the web\
            \ console Identify list, these appear as ID Check $ and SMS Auth $. To\
            \ use ID Check in an envelope, the idCheckConfigurationName should be\
            \ ID Check $. For SMS, you would use SMS Auth $, and you would also need\
            \ to add a phone number to the smsAuthentication node."
        idCheckInformationInput:
          $ref: '#/components/schemas/idCheckInformationInput'
        identityVerification:
          $ref: '#/components/schemas/recipientIdentityVerification'
        inheritEmailNotificationConfiguration:
          type: string
          description: "When set to **true** and the envelope recipient creates a\
            \ DocuSign account after signing, the Manage Account Email Notification\
            \ settings are used as the default settings for the recipient's account. "
        lastName:
          type: string
          description: The recipient's last name.
        name:
          type: string
          description: ""
        note:
          type: string
          description: |
            A note sent to the recipient in the signing email.
            This note is unique to this recipient.
            In the user interface,
            it appears near the upper left corner
            of the document
            on the signing screen.

            Maximum Length: 1000 characters.
        phoneAuthentication:
          $ref: '#/components/schemas/recipientPhoneAuthentication'
        recipientAttachments:
          type: array
          description: Reserved for DocuSign.
          items:
            $ref: '#/components/schemas/recipientAttachment'
        recipientAuthenticationStatus:
          $ref: '#/components/schemas/authenticationStatus'
        recipientId:
          type: string
          description: Unique for the recipient. It is used by the tab element to
            indicate which recipient is to sign the Document.
        recipientIdGuid:
          type: string
          description: "The globally-unique identifier (GUID) for a specific recipient\
            \ on a specific envelope. If the same recipient is associated with multiple\
            \ envelopes, they will have a different GUID for each one. Read only."
        requireIdLookup:
          type: string
          description: "When set to **true**, the recipient is required to use the\
            \ specified ID check method (including Phone and SMS authentication) to\
            \ validate their identity. "
        roleName:
          type: string
          description: Optional element. Specifies the role name associated with the
            recipient.<br/><br/>This is required when working with template recipients.
        routingOrder:
          type: string
          description: 'Specifies the routing order of the recipient in the envelope. '
        samlAuthentication:
          $ref: '#/components/schemas/recipientSAMLAuthentication'
        sentDateTime:
          type: string
          description: The UTC DateTime when the envelope was sent. Read only.
        signedDateTime:
          type: string
          description: Reserved for DocuSign.
        signingGroupId:
          type: string
          description: "When set to **true** and the feature is enabled in the sender's\
            \ account, the signing recipient is required to draw signatures and initials\
            \ at each signature/initial tab ( instead of adopting a signature/initial\
            \ style or only drawing a signature/initial once)."
        signingGroupName:
          type: string
          description: "The display name for the signing group. \n\nMaximum Length:\
            \ 100 characters. "
        signingGroupUsers:
          type: array
          description: A complex type that contains information about users in the
            signing group.
          items:
            $ref: '#/components/schemas/userInfo'
        smsAuthentication:
          $ref: '#/components/schemas/recipientSMSAuthentication'
        socialAuthentications:
          type: array
          description: ' Lists the social ID type that can be used for recipient authentication.'
          items:
            $ref: '#/components/schemas/socialAuthentication'
        status:
          type: string
          description: |
            Recipient status.
            <!-- todo -->
        templateLocked:
          type: string
          description: "When set to **true**, the sender cannot change any attributes\
            \ of the recipient. Used only when working with template recipients. "
        templateRequired:
          type: string
          description: "When set to **true**, the sender may not remove the recipient.\
            \ Used only when working with template recipients."
        totalTabCount:
          type: string
          description: The total number of tabs in the documents. Read only.
        userId:
          type: string
          description: "The user ID of the user being accessed. Generally this is\
            \ the user ID of the authenticated user, but if the authenticated user\
            \ is an Admin on the account, this may be another user the Admin user\
            \ is accessing. **Note**: For the [GET /v2/accounts/{accountId}/envelopes](https://developers.docusign.com/esign-rest-api/reference/Envelopes/Envelopes/listStatusChanges/#envelopesInformation)\
            \ method, the `user_id` query parameter is not implemented and should\
            \ not be used."
      description: ""
      x-ds-definition-name: intermediary
      x-ms-summary: ""
    jurisdiction:
      type: object
      properties:
        allowSystemCreatedSeal:
          type: string
          description: ""
        allowUserUploadedSeal:
          type: string
          description: ""
        commissionIdInSeal:
          type: string
          description: ""
        county:
          type: string
          description: ""
        countyInSeal:
          type: string
          description: ""
        enabled:
          type: string
          description: ""
        jurisdictionId:
          type: string
          description: ""
        name:
          type: string
          description: ""
        notaryPublicInSeal:
          type: string
          description: ""
        stateNameInSeal:
          type: string
          description: ""
      description: ""
      x-ds-definition-name: jurisdiction
      x-ms-summary: ""
    lastName:
      type: object
      properties:
        anchorCaseSensitive:
          type: string
          description: |-
            Reserved for DocuSign.
            <!--
            When set to **true**, the anchor string does not consider case when matching strings in the document. The default value is **true**.
            -->
        anchorHorizontalAlignment:
          type: string
          description: |
            Reserved for DocuSign.
            <!--
            Specifies the alignment of anchor tabs with anchor strings. Possible values are **left** or **right**. The default value is **left**.
            -->
        anchorIgnoreIfNotPresent:
          type: string
          description: "When set to **true**, this tab is ignored if anchorString\
            \ is not found in the document."
        anchorMatchWholeWord:
          type: string
          description: |
            Reserved for DocuSign.
            <!--
            When set to **true**, the anchor string in this tab matches whole words only (strings embedded in other strings are ignored.) The default value is **true**.
            -->
        anchorString:
          type: string
          description: Specifies the anchor string.
        anchorUnits:
          type: string
          description: |
            Specifies units of the
            `anchorXOffset` and
            `anchorYOffset`.
            Valid units are:

            - `pixels`
            - `inches`
            - `mms`
            - `cms`
        anchorXOffset:
          type: string
          description: |
            Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.
        anchorYOffset:
          type: string
          description: |
            Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.
        bold:
          type: string
          description: "When set to **true**, the information in the tab is bold."
        conditionalParentLabel:
          type: string
          description: For conditional fields this is the TabLabel of the parent tab
            that controls this tab's visibility.
        conditionalParentValue:
          type: string
          description: |
            For conditional fields, this is the value of the parent tab that controls the tab's visibility.

            If the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use "on" as the value to show that the parent tab is active.
        customTabId:
          type: string
          description: "The DocuSign generated custom tab ID for the custom tab to\
            \ be applied. This can only be used when adding new tabs for a recipient.\
            \ When used, the new tab inherits all the custom tab properties."
        documentId:
          type: string
          description: Specifies the document ID number that the tab is placed on.
            This must refer to an existing Document's ID attribute.
        errorDetails:
          $ref: '#/components/schemas/errorDetails'
        font:
          type: string
          description: |
            The font to be used for the tab value. Supported Fonts include:

            - Default
            - Arial
            - ArialNarrow
            - Calibri
            - CourierNew
            - Garamond
            - Georgia
            - Helvetica
            - LucidaConsole
            - MSGothic
            - MSMincho
            - OCR-A
            - Tahoma
            - TimesNewRoman
            - Trebuchet
            - Verdana
        fontColor:
          type: string
          description: "The font color used for the information in the tab. Possible\
            \ values are: \n\n- Black\n- BrightBlue\n- BrightRed\n- DarkGreen\n- DarkRed\n\
            - Gold\n- Green\n- NavyBlue\n- Purple\n- White\n"
        fontSize:
          type: string
          description: |-
            The font size used for the information in the tab. Possible values are:

            - Size7
            - Size8
            - Size9
            - Size10
            - Size11
            - Size12
            - Size14
            - Size16
            - Size18
            - Size20
            - Size22
            - Size24
            - Size26
            - Size28
            - Size36
            - Size48
            - Size72
        italic:
          type: string
          description: "When set to **true**, the information in the tab is italic."
        mergeField:
          $ref: '#/components/schemas/mergeField'
        name:
          type: string
          description: ""
        pageNumber:
          type: string
          description: |
            Specifies the page number on which the tab is located.
            Must be 1 for supplemental documents.
        recipientId:
          type: string
          description: Unique for the recipient. It is used by the tab element to
            indicate which recipient is to sign the Document.
        status:
          type: string
          description: |
            Tab status
            <!-- todo -->
        tabGroupLabels:
          type: array
          description: ""
          items:
            type: string
        tabId:
          type: string
          description: The unique identifier for the tab.
        tabLabel:
          type: string
          description: |
            The label string associated with the tab.
            The string may be the empty string.
            If no value is provided, the tab type is used as the value.

            Maximum of 500 characters.
        tabOrder:
          type: string
          description: |-
            A positive integer that sets the order the tab is navigated to during signing.

            Tabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.
        templateLocked:
          type: string
          description: "When set to **true**, the sender cannot change any attributes\
            \ of the recipient. Used only when working with template recipients. "
        templateRequired:
          type: string
          description: "When set to **true**, the sender may not remove the recipient.\
            \ Used only when working with template recipients."
        tooltip:
          type: string
          description: ""
        underline:
          type: string
          description: "When set to **true**, the information in the tab is underlined."
        value:
          type: string
          description: 'Specifies the value of the tab. '
        xPosition:
          type: string
          description: |
            This property indicates the horizontal offset of the object on the page.
            DocuSign uses 72 DPI when determining position.
            Required. May be zero.

            To improve the tab's position on the document,
            DocuSign recommends
            adjusting `xPosition`
            and `yPosition`
            coordinates
            by (-3, -2)
        yPosition:
          type: string
          description: |
            This property indicates the vertical offset of the object on the page.
            DocuSign uses 72 DPI when determining position.
            Required. May be zero.

            To improve the tab's position on the document,
            DocuSign recommends
            adjusting `xPosition`
            and `yPosition`
            coordinates
            by (-3, -2)
      description: |
        A tab that displays the recipient's last name. This tab
        takes the recipient's name as entered in the recipient
        information, splits it into sections based on spaces and
        uses the last section as the last name.
      x-ds-definition-name: lastName
      x-ms-summary: |
        A tab that displays the recipient's last name. This tab
        takes the recipient's name as entered in the recipient
        information, splits it into sections based on spaces and
        uses the last section as the last name.
    list:
      type: object
      properties:
        anchorCaseSensitive:
          type: string
          description: |-
            Reserved for DocuSign.
            <!--
            When set to **true**, the anchor string does not consider case when matching strings in the document. The default value is **true**.
            -->
        anchorHorizontalAlignment:
          type: string
          description: |
            Reserved for DocuSign.
            <!--
            Specifies the alignment of anchor tabs with anchor strings. Possible values are **left** or **right**. The default value is **left**.
            -->
        anchorIgnoreIfNotPresent:
          type: string
          description: "When set to **true**, this tab is ignored if anchorString\
            \ is not found in the document."
        anchorMatchWholeWord:
          type: string
          description: |
            Reserved for DocuSign.
            <!--
            When set to **true**, the anchor string in this tab matches whole words only (strings embedded in other strings are ignored.) The default value is **true**.
            -->
        anchorString:
          type: string
          description: Specifies the anchor string.
        anchorUnits:
          type: string
          description: |
            Specifies units of the
            `anchorXOffset` and
            `anchorYOffset`.
            Valid units are:

            - `pixels`
            - `inches`
            - `mms`
            - `cms`
        anchorXOffset:
          type: string
          description: |
            Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.
        anchorYOffset:
          type: string
          description: |
            Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.
        bold:
          type: string
          description: "When set to **true**, the information in the tab is bold."
        conditionalParentLabel:
          type: string
          description: For conditional fields this is the TabLabel of the parent tab
            that controls this tab's visibility.
        conditionalParentValue:
          type: string
          description: |
            For conditional fields, this is the value of the parent tab that controls the tab's visibility.

            If the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use "on" as the value to show that the parent tab is active.
        customTabId:
          type: string
          description: "The DocuSign generated custom tab ID for the custom tab to\
            \ be applied. This can only be used when adding new tabs for a recipient.\
            \ When used, the new tab inherits all the custom tab properties."
        documentId:
          type: string
          description: Specifies the document ID number that the tab is placed on.
            This must refer to an existing Document's ID attribute.
        errorDetails:
          $ref: '#/components/schemas/errorDetails'
        font:
          type: string
          description: |
            The font to be used for the tab value. Supported Fonts include:

            - Default
            - Arial
            - ArialNarrow
            - Calibri
            - CourierNew
            - Garamond
            - Georgia
            - Helvetica
            - LucidaConsole
            - MSGothic
            - MSMincho
            - OCR-A
            - Tahoma
            - TimesNewRoman
            - Trebuchet
            - Verdana
        fontColor:
          type: string
          description: "The font color used for the information in the tab. Possible\
            \ values are: \n\n- Black\n- BrightBlue\n- BrightRed\n- DarkGreen\n- DarkRed\n\
            - Gold\n- Green\n- NavyBlue\n- Purple\n- White\n"
        fontSize:
          type: string
          description: |-
            The font size used for the information in the tab. Possible values are:

            - Size7
            - Size8
            - Size9
            - Size10
            - Size11
            - Size12
            - Size14
            - Size16
            - Size18
            - Size20
            - Size22
            - Size24
            - Size26
            - Size28
            - Size36
            - Size48
            - Size72
        italic:
          type: string
          description: "When set to **true**, the information in the tab is italic."
        listItems:
          type: array
          description: "The list of values that can be selected by senders. The list\
            \ values are separated by semi-colons. Example: [one;two;three;four]\n\
            \nMaximum Length of listItems:  2048 characters.\nMaximum Length of items\
            \ in the list: 100 characters. \n"
          items:
            $ref: '#/components/schemas/listItem'
        locked:
          type: string
          description: "When set to **true**, the signer cannot change the data of\
            \ the custom tab."
        mergeField:
          $ref: '#/components/schemas/mergeField'
        pageNumber:
          type: string
          description: |
            Specifies the page number on which the tab is located.
            Must be 1 for supplemental documents.
        recipientId:
          type: string
          description: Unique for the recipient. It is used by the tab element to
            indicate which recipient is to sign the Document.
        requireAll:
          type: string
          description: "When set to **true** and shared is true, information must\
            \ be entered in this field to complete the envelope. "
        required:
          type: string
          description: "When set to **true**, the signer is required to fill out this\
            \ tab"
        requireInitialOnSharedChange:
          type: string
          description: "Optional element for field markup. When set to **true**, the\
            \ signer is required to initial when they modify a shared field."
        senderRequired:
          type: string
          description: "When set to **true**, the sender must populate the tab before\
            \ an envelope can be sent using the template. \n\nThis value tab can only\
            \ be changed by modifying (PUT) the template. \n\nTabs with a `senderRequired`\
            \ value of true cannot be deleted from an envelope."
        shared:
          type: string
          description: "When set to **true**, this custom tab is shared."
        status:
          type: string
          description: |
            Tab status
            <!-- todo -->
        tabGroupLabels:
          type: array
          description: ""
          items:
            type: string
        tabId:
          type: string
          description: The unique identifier for the tab.
        tabLabel:
          type: string
          description: |
            The label string associated with the tab.
            The string may be the empty string.
            If no value is provided, the tab type is used as the value.

            Maximum of 500 characters.
        tabOrder:
          type: string
          description: |-
            A positive integer that sets the order the tab is navigated to during signing.

            Tabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.
        templateLocked:
          type: string
          description: "When set to **true**, the sender cannot change any attributes\
            \ of the recipient. Used only when working with template recipients. "
        templateRequired:
          type: string
          description: "When set to **true**, the sender may not remove the recipient.\
            \ Used only when working with template recipients."
        tooltip:
          type: string
          description: ""
        underline:
          type: string
          description: "When set to **true**, the information in the tab is underlined."
        value:
          type: string
          description: The value to use when the item is selected.
        width:
          type: integer
          description: Width of the tab in pixels.
          format: int32
        xPosition:
          type: string
          description: |
            This property indicates the horizontal offset of the object on the page.
            DocuSign uses 72 DPI when determining position.
            Required. May be zero.

            To improve the tab's position on the document,
            DocuSign recommends
            adjusting `xPosition`
            and `yPosition`
            coordinates
            by (-3, -2)
        yPosition:
          type: string
          description: |
            This property indicates the vertical offset of the object on the page.
            DocuSign uses 72 DPI when determining position.
            Required. May be zero.

            To improve the tab's position on the document,
            DocuSign recommends
            adjusting `xPosition`
            and `yPosition`
            coordinates
            by (-3, -2)
      description: |
        This tab offers a list of options to choose from.
        The `listItems`
        property contains a list of
        [`listItem`](https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/listItem)
        objects to specify the selectable options.
      x-ds-definition-name: list
      x-ms-summary: |
        This tab offers a list of options to choose from.
        The `listItems`
        property contains a list of
        [`listItem`](https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/listItem)
        objects to specify the selectable options.
    listCustomField:
      type: object
      properties:
        configurationType:
          type: string
          description: "If merge field's are being used, specifies the type of the\
            \ merge field. The only  supported value is **salesforce**."
        errorDetails:
          $ref: '#/components/schemas/errorDetails'
        fieldId:
          type: string
          description: An ID used to specify a custom field.
        listItems:
          type: array
          description: ""
          items:
            type: string
        name:
          type: string
          description: The name of the custom field.
        required:
          type: string
          description: "When set to **true**, the signer is required to fill out this\
            \ tab"
        show:
          type: string
          description: "A boolean indicating if the value should be displayed.  If\
            \ this value is set to **true**, the custom field is displayed at the\
            \ top of the certificate of completion. If this value is left blank/ or\
            \ set to **false**, then it does not appear in the certificate of completion. "
        value:
          type: string
          description: |-
            The value of the custom field.

            Maximum Length: 100 characters.
      description: ""
      x-ds-definition-name: listCustomField
      x-ms-summary: ""
    listItem:
      type: object
      properties:
        selected:
          type: string
          description: "When set to **true**, indicates that this item is the default\
            \ selection shown to a signer. \n\nOnly one selection can be set as the\
            \ default."
        text:
          type: string
          description: 'Specifies the text that is shown in the dropdown list. '
        value:
          type: string
          description: Specifies the value that is used when the list item is selected.
      description: |-
        One of the selectable items
        in the `listItems` property
        of a [`list`](https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/list) tab.
      x-ds-definition-name: listItem
      x-ms-summary: |-
        One of the selectable items
        in the `listItems` property
        of a [`list`](https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/list) tab.
    lockInformation:
      type: object
      properties:
        errorDetails:
          $ref: '#/components/schemas/errorDetails'
        lockDurationInSeconds:
          type: string
          description: The number of seconds to lock the envelope for editing.  Must
            be greater than 0 seconds.
        lockedByApp:
          type: string
          description: A friendly name of the application used to lock the envelope.  Will
            be used in error messages to the user when lock conflicts occur.
        lockedByUser:
          $ref: '#/components/schemas/userInfo'
        lockedUntilDateTime:
          type: string
          description: The datetime until the envelope lock expires.
        lockToken:
          type: string
          description: A unique identifier provided to the owner of the envelope lock.   Used
            to prove ownership of the lock.
        lockType:
          type: string
          description: The type of envelope lock.  Currently "edit" is the only supported
            type.
        useScratchPad:
          type: string
          description: "Reserved for future use.\n\nIndicates whether a scratchpad\
            \ is used for editing information.\n "
      description: ""
      x-ds-definition-name: lockInformation
      x-ms-summary: ""
    lockRequest:
      type: object
      properties:
        lockDurationInSeconds:
          type: string
          description: The number of seconds to lock the envelope for editing.  Must
            be greater than 0 seconds.
        lockedByApp:
          type: string
          description: A friendly name of the application used to lock the envelope.  Will
            be used in error messages to the user when lock conflicts occur.
        lockType:
          type: string
          description: The type of envelope lock.  Currently "edit" is the only supported
            type.
        templatePassword:
          type: string
          description: ""
        useScratchPad:
          type: string
          description: "Reserved for future use.\n\nIndicates whether a scratchpad\
            \ is used for editing information.\n "
      description: ""
      x-ds-definition-name: lockRequest
      x-ms-summary: ""
    loginAccount:
      type: object
      properties:
        accountId:
          type: string
          description: The account ID associated with the envelope.
        accountIdGuid:
          type: string
          description: The GUID associated with the account ID.
        baseUrl:
          type: string
          description: "The URL that should be used for successive calls to this account.\
            \ It includes the protocal (https), the DocuSign server where the account\
            \ is located, and the account number. Use this Url to make API calls against\
            \ this account. Many of the API calls provide Uri's that are relative\
            \ to this baseUrl."
        email:
          type: string
          description: The email address for the user.
        isDefault:
          type: string
          description: "This value is true if this is the default account for the\
            \ user, otherwise false is returned."
        loginAccountSettings:
          type: array
          description: A list of settings on the acccount that indicate what features
            are available.
          items:
            $ref: '#/components/schemas/nameValue'
        loginUserSettings:
          type: array
          description: A list of user-level settings that indicate what user-specific
            features are available.
          items:
            $ref: '#/components/schemas/nameValue'
        name:
          type: string
          description: The name associated with the account.
        siteDescription:
          type: string
          description: An optional descirption of the site that hosts the account.
        userId:
          type: string
          description: "The user ID of the user being accessed. Generally this is\
            \ the user ID of the authenticated user, but if the authenticated user\
            \ is an Admin on the account, this may be another user the Admin user\
            \ is accessing. **Note**: For the [GET /v2/accounts/{accountId}/envelopes](https://developers.docusign.com/esign-rest-api/reference/Envelopes/Envelopes/listStatusChanges/#envelopesInformation)\
            \ method, the `user_id` query parameter is not implemented and should\
            \ not be used."
        userName:
          type: string
          description: The name of this user as defined by the account.
      description: ""
      x-ds-definition-name: loginAccount
      x-ms-summary: ""
    loginInformation:
      type: object
      properties:
        apiPassword:
          type: string
          description: Contains a token that can be used for authentication in API
            calls instead of using the user name and password.
        loginAccounts:
          type: array
          description: The list of accounts that authenticating user is a member of.
          items:
            $ref: '#/components/schemas/loginAccount'
      description: ""
      x-ds-definition-name: loginInformation
      x-ms-summary: ""
    matchBox:
      type: object
      properties:
        height:
          type: integer
          description: Height of the tab in pixels.
          format: int32
        pageNumber:
          type: integer
          description: |
            Specifies the page number on which the tab is located.
            Must be 1 for supplemental documents.
          format: int32
        width:
          type: integer
          description: Width of the tab in pixels.
          format: int32
        xPosition:
          type: integer
          description: |
            This property indicates the horizontal offset of the object on the page.
            DocuSign uses 72 DPI when determining position.
            Required. May be zero.
          format: int32
        yPosition:
          type: integer
          description: |
            This property indicates the vertical offset of the object on the page.
            DocuSign uses 72 DPI when determining position.
            Required. May be zero.
          format: int32
      description: ""
      x-ds-definition-name: matchBox
      x-ms-summary: ""
    memberGroupSharedItem:
      type: object
      properties:
        errorDetails:
          $ref: '#/components/schemas/errorDetails'
        group:
          $ref: '#/components/schemas/group'
        shared:
          type: string
          description: |-
            How the item is shared. One of:


            - `not_shared`: The item is not shared.

            - `shared_to`: The item is shared.
      description: Information about items shared among groups.
      x-ds-definition-name: memberGroupSharedItem
      x-ms-summary: Information about items shared among groups.
    memberSharedItems:
      type: object
      properties:
        envelopes:
          type: array
          description: List of information about shared envelopes.
          items:
            $ref: '#/components/schemas/sharedItem'
        errorDetails:
          $ref: '#/components/schemas/errorDetails'
        templates:
          type: array
          description: List of information about shared templates.
          items:
            $ref: '#/components/schemas/templateSharedItem'
        user:
          $ref: '#/components/schemas/userInfo'
      description: Information about shared items.
      x-ds-definition-name: memberSharedItems
      x-ms-summary: Information about shared items.
    mergeField:
      type: object
      properties:
        allowSenderToEdit:
          type: string
          description: "When set to **true**, the sender can modify the value of the\
            \ custom tab during the sending process."
        configurationType:
          type: string
          description: "If merge field's are being used, specifies the type of the\
            \ merge field. The only  supported value is **salesforce**."
        path:
          type: string
          description: Sets the object associated with the custom tab. Currently this
            is the Salesforce Object.
        row:
          type: string
          description: Specifies the row number in a Salesforce table that the merge
            field value corresponds to.
        writeBack:
          type: string
          description: "When wet to true, the information entered in the tab automatically\
            \ updates the related Salesforce data when an envelope is completed."
      description: Contains information for transfering values between Salesforce
        data fields and DocuSign Tabs.
      x-ds-definition-name: mergeField
      x-ms-summary: Contains information for transfering values between Salesforce
        data fields and DocuSign Tabs.
    mobileNotifierConfiguration:
      type: object
      properties:
        deviceId:
          type: string
          description: ""
        errorDetails:
          $ref: '#/components/schemas/errorDetails'
        platform:
          type: string
          description: The Platform of the client application
      description: ""
      x-ds-definition-name: mobileNotifierConfiguration
      x-ms-summary: ""
    mobileNotifierConfigurationInformation:
      type: object
      properties:
        mobileNotifierConfigurations:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/mobileNotifierConfiguration'
      description: ""
      x-ds-definition-name: mobileNotifierConfigurationInformation
      x-ms-summary: ""
    money:
      type: object
      properties:
        amountInBaseUnit:
          type: string
          description: |
            The total payment amount
            in the currency's base unit.
            For example, for USD
            the base currency is one cent.
        currency:
          type: string
          description: |
            The three-letter
            [ISO 4217][ISO4217] currency code for the payment.

            For example:

            * AUD Australian dollar
            * CAD Canadian dollar
            * EUR Euro
            * GBP Great Britain pound
            * USD United States dollar

            This is a read-only property.

            [ISO4217]:          https://en.wikipedia.org/wiki/ISO_4217
        displayAmount:
          type: string
          description: |
            The payment amount as displayed
            in the `currency`.

            For example, if the payment amount
            is USD 12.59,
            the `amountInBaseUnit` is 1259 (cents),
            and the displayed amount is `$12.59 USD`.

            This is a read-only property.
      description: |
        Describes information
        about the `total` of a payment.
      x-ds-definition-name: money
      x-ms-summary: |
        Describes information
        about the `total` of a payment.
    nameValue:
      type: object
      properties:
        errorDetails:
          $ref: '#/components/schemas/errorDetails'
        name:
          type: string
          description: The name or key of a name/value pair.
        originalValue:
          type: string
          description: 'The initial value of the tab when it was sent to the recipient. '
        value:
          type: string
          description: The value field of a name/value pair.
      description: ""
      x-ds-definition-name: nameValue
      x-ms-summary: ""
    newAccountDefinition:
      type: object
      properties:
        accountName:
          type: string
          description: The account name for the new account.
        accountSettings:
          type: array
          description: |
            The list of
            [account settings][accountsettings]
            that determine
            the features available for the account.
            Note that some features are determined
            by the plan used to create the account and cannot be overridden.

            [accountsettings]: https://developers.docusign.com/esign-rest-api/reference/Accounts/Accounts/create/#account-settings
          items:
            $ref: '#/components/schemas/nameValue'
        addressInformation:
          $ref: '#/components/schemas/accountAddress'
        creditCardInformation:
          $ref: '#/components/schemas/creditCardInformation'
        distributorCode:
          type: string
          description: The code that identifies the billing plan groups and plans
            for the new account.
        distributorPassword:
          type: string
          description: The password for the distributorCode.
        envelopePartitionId:
          type: string
          description: ""
        initialUser:
          $ref: '#/components/schemas/userInformation'
        PaymentProcessorInformation:
          $ref: '#/components/schemas/paymentProcessorInformation'
        planInformation:
          $ref: '#/components/schemas/planInformation'
        referralInformation:
          $ref: '#/components/schemas/referralInformation'
        socialAccountInformation:
          $ref: '#/components/schemas/socialAccountInformation'
      description: ""
      x-ds-definition-name: newAccountDefinition
      x-ms-summary: ""
    newAccountSummary:
      type: object
      properties:
        accountId:
          type: string
          description: The account ID associated with the envelope.
        accountIdGuid:
          type: string
          description: The GUID associated with the account ID.
        accountName:
          type: string
          description: The account name for the new account.
        apiPassword:
          type: string
          description: Contains a token that can be used for authentication in API
            calls instead of using the user name and password.
        baseUrl:
          type: string
          description: "The URL that should be used for successive calls to this account.\
            \ It includes the protocal (https), the DocuSign server where the account\
            \ is located, and the account number. Use this Url to make API calls against\
            \ this account. Many of the API calls provide Uri's that are relative\
            \ to this baseUrl."
        billingPlanPreview:
          $ref: '#/components/schemas/billingPlanPreview'
        userId:
          type: string
          description: Specifies the user ID of the new user.
      description: ""
      x-ds-definition-name: newAccountSummary
      x-ms-summary: ""
    newUser:
      type: object
      properties:
        apiPassword:
          type: string
          description: Contains a token that can be used for authentication in API
            calls instead of using the user name and password.
        createdDateTime:
          type: string
          description: Indicates the date and time the item was created.
        email:
          type: string
          description: ""
        errorDetails:
          $ref: '#/components/schemas/errorDetails'
        membershipId:
          type: string
          description: ""
        permissionProfileId:
          type: string
          description: ""
        permissionProfileName:
          type: string
          description: ""
        uri:
          type: string
          description: ""
        userId:
          type: string
          description: Specifies the user ID for the new user.
        userName:
          type: string
          description: ""
        userStatus:
          type: string
          description: |
            Status of the user's account. One of:

            * ActivationRequired
            * ActivationSent
            * Active
            * Closed
            * Disabled
      description: ""
      x-ds-definition-name: newUser
      x-ms-summary: ""
    newUsersDefinition:
      type: object
      properties:
        newUsers:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/userInformation'
      description: ""
      x-ds-definition-name: newUsersDefinition
      x-ms-summary: ""
    newUsersSummary:
      type: object
      properties:
        newUsers:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/newUser'
      description: ""
      x-ds-definition-name: newUsersSummary
      x-ms-summary: ""
    notarize:
      type: object
      properties:
        anchorCaseSensitive:
          type: string
          description: |-
            Reserved for DocuSign.
            <!--
            When set to **true**, the anchor string does not consider case when matching strings in the document. The default value is **true**.
            -->
        anchorHorizontalAlignment:
          type: string
          description: |
            Reserved for DocuSign.
            <!--
            Specifies the alignment of anchor tabs with anchor strings. Possible values are **left** or **right**. The default value is **left**.
            -->
        anchorIgnoreIfNotPresent:
          type: string
          description: "When set to **true**, this tab is ignored if anchorString\
            \ is not found in the document."
        anchorMatchWholeWord:
          type: string
          description: |
            Reserved for DocuSign.
            <!--
            When set to **true**, the anchor string in this tab matches whole words only (strings embedded in other strings are ignored.) The default value is **true**.
            -->
        anchorString:
          type: string
          description: Specifies the anchor string.
        anchorUnits:
          type: string
          description: |
            Specifies units of the
            `anchorXOffset` and
            `anchorYOffset`.
            Valid units are:

            - `pixels`
            - `inches`
            - `mms`
            - `cms`
        anchorXOffset:
          type: string
          description: |
            Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.
        anchorYOffset:
          type: string
          description: |
            Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.
        conditionalParentLabel:
          type: string
          description: For conditional fields this is the TabLabel of the parent tab
            that controls this tab's visibility.
        conditionalParentValue:
          type: string
          description: |
            For conditional fields, this is the value of the parent tab that controls the tab's visibility.

            If the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use "on" as the value to show that the parent tab is active.
        customTabId:
          type: string
          description: ""
        documentId:
          type: string
          description: The ID of the document being accessed.
        errorDetails:
          $ref: '#/components/schemas/errorDetails'
        locked:
          type: string
          description: "When set to **true**, the signer cannot change the data of\
            \ the custom tab."
        mergeField:
          $ref: '#/components/schemas/mergeField'
        pageNumber:
          type: string
          description: The page number being accessed.
        recipientId:
          type: string
          description: "A local reference that senders use to map recipients to other\
            \ objects, such as specific document tabs. Within an envelope, each `recipientId`\
            \ must be unique, but there is no uniqueness requirement across envelopes.\
            \ For example, many envelopes assign the first recipient a `recipientId`\
            \ of `1`."
        required:
          type: string
          description: "When set to **true**, the signer is required to fill out this\
            \ tab"
        status:
          type: string
          description: |
            Tab status
            <!-- todo -->
        tabGroupLabels:
          type: array
          description: ""
          items:
            type: string
        tabId:
          type: string
          description: The unique identifier for the tab.
        tabOrder:
          type: string
          description: |-
            A positive integer that sets the order the tab is navigated to during signing.

            Tabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.
        templateLocked:
          type: string
          description: "When set to **true**, the sender cannot change any attributes\
            \ of the recipient. Used only when working with template recipients. "
        templateRequired:
          type: string
          description: "When set to **true**, the sender may not remove the recipient.\
            \ Used only when working with template recipients."
        tooltip:
          type: string
          description: ""
        xPosition:
          type: string
          description: |+
            This property indicates the horizontal offset of the object on the page.
            DocuSign uses 72 DPI when determining position.
            Required. May be zero.

        yPosition:
          type: string
          description: |+
            This property indicates the vertical offset of the object on the page.
            DocuSign uses 72 DPI when determining position.
            Required. May be zero.

      description: |-
        A tab that alerts notary recipients that
        they must take action on the page.
        Only one notarize tab can appear on a page.
      x-ds-definition-name: notarize
      x-ms-summary: |-
        A tab that alerts notary recipients that
        they must take action on the page.
        Only one notarize tab can appear on a page.
    notaryHost:
      type: object
      properties:
        accessCode:
          type: string
          description: "If a value is provided, the recipient must enter the value\
            \ as the access code to view and sign the envelope. \n\nMaximum Length:\
            \ 50 characters and it must conform to the account's access code format\
            \ setting.\n\nIf blank, but the signer `accessCode` property is set in\
            \ the envelope, then that value is used.\n\nIf blank and the signer `accessCode`\
            \ property is not set, then the access code is not required."
        addAccessCodeToEmail:
          type: string
          description: This Optional attribute indicates that the access code will
            be added to the email sent to the recipient; this nullifies the Security
            measure of Access Code on the recipient.
        clientUserId:
          type: string
          description: "Specifies whether the recipient is embedded or remote. \n\n\
            If the `clientUserId` property is not null then the recipient is embedded.\
            \ Use this field to associate the signer with their userId in your app.\
            \ Authenticating the user is the responsibility of your app when you use\
            \ embedded signing.\n\nNote: if the `clientUserId` property is set and\
            \ either `SignerMustHaveAccount` or `SignerMustLoginToSign` property of\
            \ the account settings is set to  **true**, an error is generated on sending.\
            \ \n\nMaximum length: 100 characters. "
        customFields:
          type: array
          description: An optional array of strings that allows the sender to provide
            custom data about the recipient. This information is returned in the envelope
            status but otherwise not used by DocuSign. Each customField string can
            be a maximum of 100 characters.
          items:
            type: string
        declinedDateTime:
          type: string
          description: The date and time the recipient declined the document. Read
            only.
        declinedReason:
          type: string
          description: The reason the recipient declined the document. Read only.
        deliveredDateTime:
          type: string
          description: "Reserved: For DocuSign use only."
        deliveryMethod:
          type: string
          description: "Reserved: For DocuSign use only."
        documentVisibility:
          type: array
          description: "A list of `documentVisibility` objects. Each object in the\
            \ list specifies whether a document in the envelope is visible to this\
            \ recipient. For the envelope to use this functionality, Document Visibility\
            \ must be enabled for the account and the `enforceSignerVisibility` property\
            \ must be set to **true**."
          items:
            $ref: '#/components/schemas/documentVisibility'
        email:
          type: string
          description: |
            The notary's email address.

            Maximum Length: 100 characters.
        emailNotification:
          $ref: '#/components/schemas/recipientEmailNotification'
        embeddedRecipientStartURL:
          type: string
          description: "Specifies a sender provided valid URL string for redirecting\
            \ an embedded recipient. When using this option, the embedded recipient\
            \ still receives an email from DocuSign, just as a remote recipient would.\
            \ When the document link in the email is clicked the recipient is redirected,\
            \ through DocuSign, to the supplied URL to complete their actions. When\
            \ routing to the URL, the sender's system (the server responding to the\
            \ URL) must request a recipient token to launch a signing session. \n\n\
            If set to `SIGN_AT_DOCUSIGN`, the recipient is directed to an embedded\
            \ signing or viewing process directly at DocuSign. The signing or viewing\
            \ action is initiated by the DocuSign system and the transaction activity\
            \ and Certificate of Completion records will reflect this. In all other\
            \ ways the process is identical to an embedded signing or viewing operation\
            \ that is launched by any partner.\n\nIt is important to remember that\
            \ in a typical embedded workflow the authentication of an embedded recipient\
            \ is the responsibility of the sending application, DocuSign expects that\
            \ senders will follow their own process for establishing the recipient's\
            \ identity. In this workflow the recipient goes through the sending application\
            \ before the embedded signing or viewing process in initiated. However,\
            \ when the sending application sets `EmbeddedRecipientStartURL=SIGN_AT_DOCUSIGN`,\
            \ the recipient goes directly to the embedded signing or viewing process\
            \ bypassing the sending application and any authentication steps the sending\
            \ application would use. In this case, DocuSign recommends that you use\
            \ one of the normal DocuSign authentication features (Access Code, Phone\
            \ Authentication, SMS Authentication, etc.) to verify the identity of\
            \ the recipient.\n\nIf the `clientUserId` property is NOT set, and the\
            \ `embeddedRecipientStartURL` is set, DocuSign will ignore the redirect\
            \ URL and launch the standard signing process for the email recipient.\
            \ Information can be appended to the embedded recipient start URL using\
            \ merge fields. The available merge fields items are: envelopeId, recipientId,\
            \ recipientName, recipientEmail, and customFields. The `customFields`\
            \ property must be set fort the recipient or envelope. The merge fields\
            \ are enclosed in double brackets. \n\n*Example*: \n\n`http://senderHost/[[mergeField1]]/\
            \ beginSigningSession? [[mergeField2]]&[[mergeField3]]` "
        errorDetails:
          $ref: '#/components/schemas/errorDetails'
        faxNumber:
          type: string
          description: Reserved for DocuSign.
        hostRecipientId:
          type: string
          description: ""
        idCheckConfigurationName:
          type: string
          description: "The name of the authentication check to use. This value must\
            \ match one of the authentication types that the account uses. The names\
            \ of these authentication types appear in the web console sending interface\
            \ in the Identify list for a recipient. This setting overrides any default\
            \ authentication setting. Valid values are:\n\n- `Phone Auth $`: The recipient\
            \ must authenticate by using two-factor authentication (2FA). You provide\
            \ the phone number to use for 2FA in the `phoneAuthentication` object.\n\
            - `SMS Auth $`: The recipient must authenticate via SMS. You provide the\
            \ phone number to use in the `smsAuthentication` object.\n- `ID Check\
            \ $`: The  recipient must answer detailed security questions. \n\n**Example**:\
            \ Your account has ID Check and SMS Authentication available. In the web\
            \ console Identify list, these appear as ID Check $ and SMS Auth $. To\
            \ use ID Check in an envelope, the idCheckConfigurationName should be\
            \ ID Check $. For SMS, you would use SMS Auth $, and you would also need\
            \ to add a phone number to the smsAuthentication node."
        idCheckInformationInput:
          $ref: '#/components/schemas/idCheckInformationInput'
        identityVerification:
          $ref: '#/components/schemas/recipientIdentityVerification'
        inheritEmailNotificationConfiguration:
          type: string
          description: "When set to **true** and the envelope recipient creates a\
            \ DocuSign account after signing, the Manage Account Email Notification\
            \ settings are used as the default settings for the recipient's account. "
        name:
          type: string
          description: |
            The notary's full legal name.

            Maximum Length: 100 characters.
        note:
          type: string
          description: |
            A note sent to the notary in the signing email.
            This note is visible only to this notary.

            Maximum Length: 1000 characters.
        phoneAuthentication:
          $ref: '#/components/schemas/recipientPhoneAuthentication'
        recipientAttachments:
          type: array
          description: Reserved for DocuSign.
          items:
            $ref: '#/components/schemas/recipientAttachment'
        recipientAuthenticationStatus:
          $ref: '#/components/schemas/authenticationStatus'
        recipientId:
          type: string
          description: Unique for the recipient. It is used by the tab element to
            indicate which recipient is to sign the Document.
        recipientIdGuid:
          type: string
          description: "The globally-unique identifier (GUID) for a specific recipient\
            \ on a specific envelope. If the same recipient is associated with multiple\
            \ envelopes, they will have a different GUID for each one. Read only."
        requireIdLookup:
          type: string
          description: "When set to **true**, the recipient is required to use the\
            \ specified ID check method (including Phone and SMS authentication) to\
            \ validate their identity. "
        roleName:
          type: string
          description: Optional element. Specifies the role name associated with the
            recipient.<br/><br/>This is required when working with template recipients.
        routingOrder:
          type: string
          description: 'Specifies the routing order of the recipient in the envelope. '
        samlAuthentication:
          $ref: '#/components/schemas/recipientSAMLAuthentication'
        sentDateTime:
          type: string
          description: The UTC DateTime when the envelope was sent. Read only.
        signedDateTime:
          type: string
          description: Reserved for DocuSign.
        smsAuthentication:
          $ref: '#/components/schemas/recipientSMSAuthentication'
        socialAuthentications:
          type: array
          description: ' Lists the social ID type that can be used for recipient authentication.'
          items:
            $ref: '#/components/schemas/socialAuthentication'
        status:
          type: string
          description: "Indicates the envelope status. Valid values are:\n\n* sent\
            \ - The envelope is sent to the recipients. \n* created - The envelope\
            \ is saved as a draft and can be modified and sent later."
        tabs:
          $ref: '#/components/schemas/EnvelopeRecipientTabs'
        templateLocked:
          type: string
          description: "When set to **true**, the sender cannot change any attributes\
            \ of the recipient. Used only when working with template recipients. "
        templateRequired:
          type: string
          description: "When set to **true**, the sender may not remove the recipient.\
            \ Used only when working with template recipients."
        totalTabCount:
          type: string
          description: The total number of tabs in the documents. Read only.
        userId:
          type: string
          description: "The user ID of the user being accessed. Generally this is\
            \ the user ID of the authenticated user, but if the authenticated user\
            \ is an Admin on the account, this may be another user the Admin user\
            \ is accessing. **Note**: For the [GET /v2/accounts/{accountId}/envelopes](https://developers.docusign.com/esign-rest-api/reference/Envelopes/Envelopes/listStatusChanges/#envelopesInformation)\
            \ method, the `user_id` query parameter is not implemented and should\
            \ not be used."
      description: |
        This object is used only when `inPersonSigningType` in the `inPersonSigner` object is `notary`.

        It describes information about the notary host.
        The following information is required
        when using the eNotary in-person signing flow:

        * `name`: Specifies the notary's full legal name.
        * `email`: Specifies the notary's email address.
        * `recipientId`: A unique ID number for the notary signing host.
      x-ds-definition-name: notaryHost
      x-ms-summary: |
        This object is used only when `inPersonSigningType` in the `inPersonSigner` object is `notary`.

        It describes information about the notary host.
        The following information is required
        when using the eNotary in-person signing flow:

        * `name`: Specifies the notary's full legal name.
        * `email`: Specifies the notary's email address.
        * `recipientId`: A unique ID number for the notary signing host.
    notaryJournal:
      type: object
      properties:
        createdDate:
          type: string
          description: ""
        documentName:
          type: string
          description: ""
        jurisdiction:
          $ref: '#/components/schemas/jurisdiction'
        notaryJournalId:
          type: string
          description: ""
        notaryJournalMetaData:
          $ref: '#/components/schemas/notaryJournalMetaData'
        signerName:
          type: string
          description: |
            The in-person signer's full legal name.

            Required when `inPersonSigningType` is `inPersonSigner`.
            For eNotary flow, use `name` instead.

            Maximum Length: 100 characters.
      description: ""
      x-ds-definition-name: notaryJournal
      x-ms-summary: ""
    notaryJournalCredibleWitness:
      type: object
      properties:
        address:
          type: string
          description: ""
        name:
          type: string
          description: ""
        signatureImage:
          type: string
          description: ""
      description: ""
      x-ds-definition-name: notaryJournalCredibleWitness
      x-ms-summary: ""
    notaryJournalList:
      type: object
      properties:
        endPosition:
          type: string
          description: 'The last position in the result set. '
        nextUri:
          type: string
          description: 'The URI for the next chunk of records based on the search
            request. It is `null` if this is the last set of results for the search. '
        notaryJournals:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/notaryJournal'
        previousUri:
          type: string
          description: 'The URI for the prior chunk of records based on the search
            request. It is `null` if this is the first set of results for the search. '
        resultSetSize:
          type: string
          description: 'The number of results returned in this response. '
        startPosition:
          type: string
          description: Starting position of the current result set.
        totalSetSize:
          type: string
          description: The total number of items in the search's result set. It will
            always be greater than or equal to the value of the `resultSetSize` field.
      description: ""
      x-ds-definition-name: notaryJournalList
      x-ms-summary: ""
    notaryJournalMetaData:
      type: object
      properties:
        comment:
          type: string
          description: ""
        credibleWitnesses:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/notaryJournalCredibleWitness'
        signatureImage:
          type: string
          description: ""
        signerIdType:
          type: string
          description: ""
      description: ""
      x-ds-definition-name: notaryJournalMetaData
      x-ms-summary: ""
    note:
      type: object
      properties:
        anchorCaseSensitive:
          type: string
          description: |-
            Reserved for DocuSign.
            <!--
            When set to **true**, the anchor string does not consider case when matching strings in the document. The default value is **true**.
            -->
        anchorHorizontalAlignment:
          type: string
          description: |
            Reserved for DocuSign.
            <!--
            Specifies the alignment of anchor tabs with anchor strings. Possible values are **left** or **right**. The default value is **left**.
            -->
        anchorIgnoreIfNotPresent:
          type: string
          description: "When set to **true**, this tab is ignored if anchorString\
            \ is not found in the document."
        anchorMatchWholeWord:
          type: string
          description: |
            Reserved for DocuSign.
            <!--
            When set to **true**, the anchor string in this tab matches whole words only (strings embedded in other strings are ignored.) The default value is **true**.
            -->
        anchorString:
          type: string
          description: Specifies the anchor string.
        anchorUnits:
          type: string
          description: |
            Specifies units of the
            `anchorXOffset` and
            `anchorYOffset`.
            Valid units are:

            - `pixels`
            - `inches`
            - `mms`
            - `cms`
        anchorXOffset:
          type: string
          description: |
            Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.
        anchorYOffset:
          type: string
          description: |
            Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.
        bold:
          type: string
          description: "When set to **true**, the information in the tab is bold."
        conditionalParentLabel:
          type: string
          description: For conditional fields this is the TabLabel of the parent tab
            that controls this tab's visibility.
        conditionalParentValue:
          type: string
          description: |
            For conditional fields, this is the value of the parent tab that controls the tab's visibility.

            If the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use "on" as the value to show that the parent tab is active.
        customTabId:
          type: string
          description: "The DocuSign generated custom tab ID for the custom tab to\
            \ be applied. This can only be used when adding new tabs for a recipient.\
            \ When used, the new tab inherits all the custom tab properties."
        documentId:
          type: string
          description: Specifies the document ID number that the tab is placed on.
            This must refer to an existing Document's ID attribute.
        errorDetails:
          $ref: '#/components/schemas/errorDetails'
        font:
          type: string
          description: |
            The font to be used for the tab value. Supported Fonts include:

            - Default
            - Arial
            - ArialNarrow
            - Calibri
            - CourierNew
            - Garamond
            - Georgia
            - Helvetica
            - LucidaConsole
            - MSGothic
            - MSMincho
            - OCR-A
            - Tahoma
            - TimesNewRoman
            - Trebuchet
            - Verdana
        fontColor:
          type: string
          description: "The font color used for the information in the tab. Possible\
            \ values are: \n\n- Black\n- BrightBlue\n- BrightRed\n- DarkGreen\n- DarkRed\n\
            - Gold\n- Green\n- NavyBlue\n- Purple\n- White\n"
        fontSize:
          type: string
          description: |-
            The font size used for the information in the tab. Possible values are:

            - Size7
            - Size8
            - Size9
            - Size10
            - Size11
            - Size12
            - Size14
            - Size16
            - Size18
            - Size20
            - Size22
            - Size24
            - Size26
            - Size28
            - Size36
            - Size48
            - Size72
        height:
          type: integer
          description: Height of the tab in pixels.
          format: int32
        italic:
          type: string
          description: "When set to **true**, the information in the tab is italic."
        mergeField:
          $ref: '#/components/schemas/mergeField'
        name:
          type: string
          description: Specifies the tool tip text for the tab.
        pageNumber:
          type: string
          description: |
            Specifies the page number on which the tab is located.
            Must be 1 for supplemental documents.
        recipientId:
          type: string
          description: Unique for the recipient. It is used by the tab element to
            indicate which recipient is to sign the Document.
        shared:
          type: string
          description: "When set to **true**, this custom tab is shared."
        status:
          type: string
          description: |
            Tab status
            <!-- todo -->
        tabGroupLabels:
          type: array
          description: ""
          items:
            type: string
        tabId:
          type: string
          description: The unique identifier for the tab.
        tabLabel:
          type: string
          description: |
            The label string associated with the tab.
            The string may be the empty string.
            If no value is provided, the tab type is used as the value.

            Maximum of 500 characters.
        tabOrder:
          type: string
          description: |-
            A positive integer that sets the order the tab is navigated to during signing.

            Tabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.
        templateLocked:
          type: string
          description: "When set to **true**, the sender cannot change any attributes\
            \ of the recipient. Used only when working with template recipients. "
        templateRequired:
          type: string
          description: "When set to **true**, the sender may not remove the recipient.\
            \ Used only when working with template recipients."
        tooltip:
          type: string
          description: ""
        underline:
          type: string
          description: "When set to **true**, the information in the tab is underlined."
        value:
          type: string
          description: 'Specifies the value of the tab. '
        width:
          type: integer
          description: Width of the tab in pixels.
          format: int32
        xPosition:
          type: string
          description: |
            This property indicates the horizontal offset of the object on the page.
            DocuSign uses 72 DPI when determining position.
            Required. May be zero.

            To improve the tab's position on the document,
            DocuSign recommends
            adjusting `xPosition`
            and `yPosition`
            coordinates
            by (-3, -2)
        yPosition:
          type: string
          description: |
            This property indicates the vertical offset of the object on the page.
            DocuSign uses 72 DPI when determining position.
            Required. May be zero.

            To improve the tab's position on the document,
            DocuSign recommends
            adjusting `xPosition`
            and `yPosition`
            coordinates
            by (-3, -2)
      description: |
        A tab that displays additional information, in the form of a
        note, for the recipient.
      x-ds-definition-name: note
      x-ms-summary: |
        A tab that displays additional information, in the form of a
        note, for the recipient.
    notification:
      type: object
      properties:
        expirations:
          $ref: '#/components/schemas/expirations'
        reminders:
          $ref: '#/components/schemas/reminders'
        useAccountDefaults:
          type: string
          description: "When set to **true**, the account default notification settings\
            \ are used for the envelope."
      description: "A complex element that specifies the notification options for\
        \ the envelope. It consists of:\n\n* useAccountDefaults - When set to **true**,\
        \ the account default notification settings are used for the envelope. \n\
        * reminders - A complex element that specifies reminder settings for the envelope.\
        \ It consists of: \n\n   * reminderEnabled - When set to **true**, a reminder\
        \ message is sent to the recipient.\n   * reminderDelay - An interger that\
        \ sets the number of days after the recipient receives the envelope that reminder\
        \ emails are sent to the recipient. \n   * reminderFrequency - An interger\
        \ that sets the interval, in days, between reminder emails. \n\n* expirations\
        \ - A complex element that specifies the expiration settings for the envelope.\
        \ It consists of:\n\n   * expireEnabled - When set to **true**, the envelope\
        \ expires (is no longer available for signing) in the set number of days.\
        \ If false, the account default setting is used. If the account does not have\
        \ an expiration setting, the DocuSign default value of 120 days is used. \n\
        \   * expireAfter - An integer that sets the number of days the envelope is\
        \ active.\n   * expireWarn - An integer that sets the number of days before\
        \ envelope expiration that an expiration warning email is sent to the recipient.\
        \ If set to 0 (zero), no warning email is sent."
      x-ds-definition-name: notification
      x-ms-summary: "A complex element that specifies the notification options for\
        \ the envelope. It consists of:\n\n* useAccountDefaults - When set to **true**,\
        \ the account default notification settings are used for the envelope. \n\
        * reminders - A complex element that specifies reminder settings for the envelope.\
        \ It consists of: \n\n   * reminderEnabled - When set to **true**, a reminder\
        \ message is sent to the recipient.\n   * reminderDelay - An interger that\
        \ sets the number of days after the recipient receives the envelope that reminder\
        \ emails are sent to the recipient. \n   * reminderFrequency - An interger\
        \ that sets the interval, in days, between reminder emails. \n\n* expirations\
        \ - A complex element that specifies the expiration settings for the envelope.\
        \ It consists of:\n\n   * expireEnabled - When set to **true**, the envelope\
        \ expires (is no longer available for signing) in the set number of days.\
        \ If false, the account default setting is used. If the account does not have\
        \ an expiration setting, the DocuSign default value of 120 days is used. \n\
        \   * expireAfter - An integer that sets the number of days the envelope is\
        \ active.\n   * expireWarn - An integer that sets the number of days before\
        \ envelope expiration that an expiration warning email is sent to the recipient.\
        \ If set to 0 (zero), no warning email is sent."
    number:
      type: object
      properties:
        anchorCaseSensitive:
          type: string
          description: |-
            Reserved for DocuSign.
            <!--
            When set to **true**, the anchor string does not consider case when matching strings in the document. The default value is **true**.
            -->
        anchorHorizontalAlignment:
          type: string
          description: |
            Reserved for DocuSign.
            <!--
            Specifies the alignment of anchor tabs with anchor strings. Possible values are **left** or **right**. The default value is **left**.
            -->
        anchorIgnoreIfNotPresent:
          type: string
          description: "When set to **true**, this tab is ignored if anchorString\
            \ is not found in the document."
        anchorMatchWholeWord:
          type: string
          description: |
            Reserved for DocuSign.
            <!--
            When set to **true**, the anchor string in this tab matches whole words only (strings embedded in other strings are ignored.) The default value is **true**.
            -->
        anchorString:
          type: string
          description: Specifies the anchor string.
        anchorUnits:
          type: string
          description: |
            Specifies units of the
            `anchorXOffset` and
            `anchorYOffset`.
            Valid units are:

            - `pixels`
            - `inches`
            - `mms`
            - `cms`
        anchorXOffset:
          type: string
          description: |
            Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.
        anchorYOffset:
          type: string
          description: |
            Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.
        bold:
          type: string
          description: "When set to **true**, the information in the tab is bold."
        concealValueOnDocument:
          type: string
          description: |-
            When set to **true**, the field appears normally while the recipient is adding or modifying the information in the field, but the data is not visible (the characters are hidden by asterisks) to any other signer or the sender.

            When an envelope is completed the information is available to the sender through the Form Data link in the DocuSign Console.

            This setting applies only to text boxes and does not affect list boxes, radio buttons, or check boxes.
        conditionalParentLabel:
          type: string
          description: For conditional fields this is the TabLabel of the parent tab
            that controls this tab's visibility.
        conditionalParentValue:
          type: string
          description: |
            For conditional fields, this is the value of the parent tab that controls the tab's visibility.

            If the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use "on" as the value to show that the parent tab is active.
        customTabId:
          type: string
          description: "The DocuSign generated custom tab ID for the custom tab to\
            \ be applied. This can only be used when adding new tabs for a recipient.\
            \ When used, the new tab inherits all the custom tab properties."
        disableAutoSize:
          type: string
          description: "When set to **true**, disables the auto sizing of single line\
            \ text boxes in the signing screen when the signer enters data. If disabled\
            \ users will only be able enter as much data as the text box can hold.\
            \ By default this is false. This property only affects single line text\
            \ boxes."
        documentId:
          type: string
          description: Specifies the document ID number that the tab is placed on.
            This must refer to an existing Document's ID attribute.
        errorDetails:
          $ref: '#/components/schemas/errorDetails'
        font:
          type: string
          description: |
            The font to be used for the tab value. Supported Fonts include:

            - Default
            - Arial
            - ArialNarrow
            - Calibri
            - CourierNew
            - Garamond
            - Georgia
            - Helvetica
            - LucidaConsole
            - MSGothic
            - MSMincho
            - OCR-A
            - Tahoma
            - TimesNewRoman
            - Trebuchet
            - Verdana
        fontColor:
          type: string
          description: "The font color used for the information in the tab. Possible\
            \ values are: \n\n- Black\n- BrightBlue\n- BrightRed\n- DarkGreen\n- DarkRed\n\
            - Gold\n- Green\n- NavyBlue\n- Purple\n- White\n"
        fontSize:
          type: string
          description: |-
            The font size used for the information in the tab. Possible values are:

            - Size7
            - Size8
            - Size9
            - Size10
            - Size11
            - Size12
            - Size14
            - Size16
            - Size18
            - Size20
            - Size22
            - Size24
            - Size26
            - Size28
            - Size36
            - Size48
            - Size72
        formula:
          type: string
          description: |
            Contains the formula
            for calculating the value of
            this tab.

            Use a tab's `tabLabel`,
            enclosed in brackets,
            to refer to it.

            For example,
            you want to present the total cost
            of two items, tax included.

            The cost of each item is stored
            in number tabs labeled Item1 and Item2.
            The tax rate is in a number tab
            labeled TaxRate.

            The formula string for this property
            would be:
            `([Item1] + [Item2]) * (1 + [TaxRate])`

            See [Calculated Fields][calculatedfields]
            in the DocuSign Support Center
            to learn more about formulas.

            Maximum Length: 2000 characters

            [calculatedfields]: https://support.docusign.com/en/guides/ndse-user-guide-calculated-fields
        isPaymentAmount:
          type: string
          description: "When set to **true**, sets this as a payment tab. Can only\
            \ be used with Text, Number, Formula, or List tabs. The value of the tab\
            \ must be a number. "
        italic:
          type: string
          description: "When set to **true**, the information in the tab is italic."
        locked:
          type: string
          description: "When set to **true**, the signer cannot change the data of\
            \ the custom tab."
        maxLength:
          type: integer
          description: An optional value that describes the maximum length of the
            property when the property is a string.
          format: int32
        mergeField:
          $ref: '#/components/schemas/mergeField'
        name:
          type: string
          description: Specifies the tool tip text for the tab.
        originalValue:
          type: string
          description: 'The initial value of the tab when it was sent to the recipient. '
        pageNumber:
          type: string
          description: |
            Specifies the page number on which the tab is located.
            Must be 1 for supplemental documents.
        recipientId:
          type: string
          description: Unique for the recipient. It is used by the tab element to
            indicate which recipient is to sign the Document.
        requireAll:
          type: string
          description: "When set to **true** and shared is true, information must\
            \ be entered in this field to complete the envelope. "
        required:
          type: string
          description: "When set to **true**, the signer is required to fill out this\
            \ tab"
        requireInitialOnSharedChange:
          type: string
          description: "Optional element for field markup. When set to **true**, the\
            \ signer is required to initial when they modify a shared field."
        senderRequired:
          type: string
          description: "When set to **true**, the sender must populate the tab before\
            \ an envelope can be sent using the template. \n\nThis value tab can only\
            \ be changed by modifying (PUT) the template. \n\nTabs with a `senderRequired`\
            \ value of true cannot be deleted from an envelope."
        shared:
          type: string
          description: "When set to **true**, this custom tab is shared."
        status:
          type: string
          description: |
            Tab status
            <!-- todo -->
        tabGroupLabels:
          type: array
          description: ""
          items:
            type: string
        tabId:
          type: string
          description: The unique identifier for the tab.
        tabLabel:
          type: string
          description: |
            The label string associated with the tab.
            The string may be the empty string.
            If no value is provided, the tab type is used as the value.

            Maximum of 500 characters.
        tabOrder:
          type: string
          description: |-
            A positive integer that sets the order the tab is navigated to during signing.

            Tabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.
        templateLocked:
          type: string
          description: "When set to **true**, the sender cannot change any attributes\
            \ of the recipient. Used only when working with template recipients. "
        templateRequired:
          type: string
          description: "When set to **true**, the sender may not remove the recipient.\
            \ Used only when working with template recipients."
        tooltip:
          type: string
          description: ""
        underline:
          type: string
          description: "When set to **true**, the information in the tab is underlined."
        validationMessage:
          type: string
          description: The message displayed if the custom tab fails input validation
            (either custom of embedded).
        validationPattern:
          type: string
          description: A regular expressionn used to validate input for the tab.
        value:
          type: string
          description: 'Specifies the value of the tab. '
        width:
          type: integer
          description: Width of the tab in pixels.
          format: int32
        xPosition:
          type: string
          description: |
            This property indicates the horizontal offset of the object on the page.
            DocuSign uses 72 DPI when determining position.
            Required. May be zero.

            To improve the tab's position on the document,
            DocuSign recommends
            adjusting `xPosition`
            and `yPosition`
            coordinates
            by (-3, -2)
        yPosition:
          type: string
          description: |
            This property indicates the vertical offset of the object on the page.
            DocuSign uses 72 DPI when determining position.
            Required. May be zero.

            To improve the tab's position on the document,
            DocuSign recommends
            adjusting `xPosition`
            and `yPosition`
            coordinates
            by (-3, -2)
      description: |
        A tab that allows the recipient to enter numbers and decimal
        (.) points.
      x-ds-definition-name: number
      x-ms-summary: |
        A tab that allows the recipient to enter numbers and decimal
        (.) points.
    oauthAccess:
      type: object
      properties:
        access_token:
          type: string
          description: Access token information.
        data:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/nameValue'
        expires_in:
          type: string
          description: ""
        refresh_token:
          type: string
          description: ""
        scope:
          type: string
          description: Must be set to "api".
        token_type:
          type: string
          description: ""
      description: ""
      x-ds-definition-name: oauthAccess
      x-ms-summary: ""
    page:
      type: object
      properties:
        dpi:
          type: string
          description: The number of dots per inch used for the page image.
        errorDetails:
          $ref: '#/components/schemas/errorDetails'
        height:
          type: string
          description: Height of the tab in pixels.
        imageBytes:
          type: string
          description: ""
        mimeType:
          type: string
          description: ""
        pageId:
          type: string
          description: ""
        sequence:
          type: string
          description: ""
        width:
          type: string
          description: Width of the tab in pixels.
      description: Description of a page of a document.
      x-ds-definition-name: page
      x-ms-summary: Description of a page of a document.
    pageImages:
      type: object
      properties:
        endPosition:
          type: string
          description: 'The last position in the result set. '
        nextUri:
          type: string
          description: 'The URI for the next chunk of records based on the search
            request. It is `null` if this is the last set of results for the search. '
        pages:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/page'
        previousUri:
          type: string
          description: 'The URI for the prior chunk of records based on the search
            request. It is `null` if this is the first set of results for the search. '
        resultSetSize:
          type: string
          description: 'The number of results returned in this response. '
        startPosition:
          type: string
          description: Starting position of the current result set.
        totalSetSize:
          type: string
          description: The total number of items in the search's result set. It will
            always be greater than or equal to the value of the `resultSetSize` field.
      description: ""
      x-ds-definition-name: pageImages
      x-ms-summary: ""
    pageRequest:
      type: object
      properties:
        password:
          type: string
          description: ""
        rotate:
          type: string
          description: "Sets the direction the page image is rotated. The possible\
            \ settings are: left or right"
      description: ""
      x-ds-definition-name: pageRequest
      x-ms-summary: ""
    paymentDetails:
      type: object
      properties:
        allowedPaymentMethods:
          type: array
          description: |
            An array of accepted payment methods:

            * `CreditCard`
            * `ApplePay`
            * `AndroidPay`
            * `BankAccount`

            For example, if you only accept credit cards and ACH transfers, you would set this property to:

            `'["BankAccount", "CreditCard"]'`

            Do not specify `BankAccount` (ACH) if you are also using in-person signing.
          items:
            type: string
        chargeId:
          type: string
          description: The GUID set by the payment gateway (such as Stripe) that identifies
            a transaction. The `chargeId` is created when authorizing a payment and
            must be referenced when completing a payment.
        currencyCode:
          type: string
          description: |
            Specifies the three-letter
            [ISO 4217][ISO4217] currency code for the payment.

            Supported currencies are:

            * AUD Australian dollar
            * CAD Canadian dollar
            * EUR Euro
            * GBP Great Britain pound
            * USD United States dollar

            Specifying any other ISO 4217 code for payments is an error.

            [ISO4217]:          https://en.wikipedia.org/wiki/ISO_4217
        customerId:
          type: string
          description: ""
        customMetadata:
          type: string
          description: ""
        customMetadataRequired:
          type: boolean
          description: ""
        gatewayAccountId:
          type: string
          description: |
            A GUID that identifies the payment gateway
            connected to the sender's DocuSign account.

            There is no public API
            for connecting payment gateway accounts
            You must connect and manage payment gateway accounts
            through the DocuSign Admin console
            and through your chosen payment gateway.

            You can get the gateway account ID
            in the Payments section
            of the DocuSign Admin console.


            [paymentgateways]:  https://support.docusign.com/en/guides/managing-payment-gateways
        gatewayDisplayName:
          type: string
          description: |-
            Display name of the gateway connected to sender's Docusign account.

            Possible values are: Stripe, Braintree, Authorize.Net.
        gatewayName:
          type: string
          description: |-
            Name of the gateway connected to sender's DocuSign account.

            Possible values are:

            * `Stripe`
            * `Braintree`
            * `AuthorizeDotNet`
        lineItems:
          type: array
          description: |
            A payment formula can have
            one or more line items
            that provide detail about
            individual items in a payment request.

            The list of line items
            are returned as metadata
            to the payment gateway.
          items:
            $ref: '#/components/schemas/paymentLineItem'
        paymentOption:
          type: string
          description: ""
        paymentSourceId:
          type: string
          description: ""
        signerValues:
          $ref: '#/components/schemas/paymentSignerValues'
        status:
          type: string
          description: |
            This read-only property describes the status of a payment.

            * `new`<br>
              This is a new payment request.
              The envelope has been created,
              but no payment authorizations have been made.

            * `auth_complete`<br>
              A recipient has entered their credit card information,
              but the envelope has not been completed.
              The card has not been charged.

            * `payment_complete`<br>
              The recipient's card has been charged.

            * `payment_capture_failed`<br>
              Final charge failed.
              This can happen when too much time
              passes between authorizing the payment
              and completing the document.
        total:
          $ref: '#/components/schemas/money'
      description: |
        When a formula tab
        has a `paymentDetails` property,
        the formula tab
        is a payment item.
        See [Requesting Payments Along with Signatures][paymentguide]
        in the DocuSign Support Center
        to learn more about payments.

        [paymentguide]:     https://support.docusign.com/en/guides/requesting-payments-along-with-signatures
      x-ds-definition-name: paymentDetails
      x-ms-summary: |
        When a formula tab
        has a `paymentDetails` property,
        the formula tab
        is a payment item.
        See [Requesting Payments Along with Signatures][paymentguide]
        in the DocuSign Support Center
        to learn more about payments.

        [paymentguide]:     https://support.docusign.com/en/guides/requesting-payments-along-with-signatures
    paymentGatewayAccount:
      type: object
      properties:
        displayName:
          type: string
          description: ""
        paymentGateway:
          type: string
          description: |-
            Payment gateway used by the connected gateway account.
            This is the name used by the API.
            For a human-readable version use `paymentGatewayDisplayName`.

            Possible values are:

            * `Stripe`
            * `Braintree`
            * `AuthorizeDotNet`
        paymentGatewayAccountId:
          type: string
          description: A GUID that identifies the payment gateway account. For a human-readable
            version use `displayName`.
        paymentGatewayDisplayName:
          type: string
          description: |-
            Display name of the payment gateway used by the connected gateway account.
            This is the human-readable version of `paymentGateway`.

            Possible values are:

            * Stripe
            * Braintree
            * Authorize.Net
      description: ""
      x-ds-definition-name: paymentGatewayAccount
      x-ms-summary: ""
    paymentGatewayAccountsInfo:
      type: object
      properties:
        paymentGatewayAccounts:
          type: array
          description: A list of payment gateway accounts.
          items:
            $ref: '#/components/schemas/paymentGatewayAccount'
      description: Holds information about connected payment accounts.
      x-ds-definition-name: paymentGatewayAccountsInfo
      x-ms-summary: Holds information about connected payment accounts.
    paymentLineItem:
      type: object
      properties:
        amountReference:
          type: string
          description: |+
            This is a the `tabLabel`
            that specifies the amount paid
            for the line items.

        description:
          type: string
          description: |
            A sender-defined description of the line item.
        itemCode:
          type: string
          description: |
            This is the sender-defined
            SKU, inventory number, or other item code
            for the line item.
        name:
          type: string
          description: |
            This is a sender-defined
            product name, service name,
            or other designation for the line item.
      description: |+
        A line item describes details
        about an individual line item
        in a payment request.

      x-ds-definition-name: paymentLineItem
      x-ms-summary: |+
        A line item describes details
        about an individual line item
        in a payment request.

    paymentProcessorInformation:
      type: object
      properties:
        address:
          $ref: '#/components/schemas/addressInformation'
        billingAgreementId:
          type: string
          description: ""
        email:
          type: string
          description: ""
      description: ""
      x-ds-definition-name: paymentProcessorInformation
      x-ms-summary: ""
    paymentSignerValues:
      type: object
      properties:
        paymentOption:
          type: string
          description: ""
      description: ""
      x-ds-definition-name: paymentSignerValues
      x-ms-summary: ""
    permissionProfile:
      type: object
      properties:
        modifiedByUsername:
          type: string
          description: ""
        modifiedDateTime:
          type: string
          description: ""
        permissionProfileId:
          type: string
          description: ""
        permissionProfileName:
          type: string
          description: ""
        settings:
          $ref: '#/components/schemas/accountRoleSettings'
        userCount:
          type: string
          description: ""
        users:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/userInformation'
      description: ""
      x-ds-definition-name: permissionProfile
      x-ms-summary: ""
    permissionProfileInformation:
      type: object
      properties:
        permissionProfiles:
          type: array
          description: A complex type containing a collection of permission profiles.
          items:
            $ref: '#/components/schemas/permissionProfile'
      description: ""
      x-ds-definition-name: permissionProfileInformation
      x-ms-summary: ""
    planInformation:
      type: object
      properties:
        addOns:
          type: array
          description: 'Reserved:'
          items:
            $ref: '#/components/schemas/addOn'
        currencyCode:
          type: string
          description: Specifies the ISO currency code for the account.
        freeTrialDaysOverride:
          type: string
          description: Reserved for DocuSign use only.
        planFeatureSets:
          type: array
          description: A complex type that sets the feature sets for the account.
          items:
            $ref: '#/components/schemas/featureSet'
        planId:
          type: string
          description: The DocuSign Plan ID for the account.
        recipientDomains:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/recipientDomain'
      description: An object used to identify the features and attributes of the account
        being created.
      x-ds-definition-name: planInformation
      x-ms-summary: An object used to identify the features and attributes of the
        account being created.
    powerForm:
      type: object
      properties:
        createdBy:
          type: string
          description: ""
        createdDateTime:
          type: string
          description: Indicates the date and time the item was created.
        emailBody:
          type: string
          description: "Specifies the email body of the message sent to the recipient.\
            \ \n\nMaximum length: 10000 characters. "
        emailSubject:
          type: string
          description: |-
            Specifies the subject of the email that is sent to all recipients.

            See [ML:Template Email Subject Merge Fields] for information about adding merge field information to the email subject.
        envelopes:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/envelope'
        errorDetails:
          $ref: '#/components/schemas/errorDetails'
        instructions:
          type: string
          description: ""
        isActive:
          type: string
          description: ""
        lastUsed:
          type: string
          description: ""
        limitUseInterval:
          type: string
          description: ""
        limitUseIntervalEnabled:
          type: string
          description: ""
        limitUseIntervalUnits:
          type: string
          description: ""
        maxUseEnabled:
          type: string
          description: ""
        name:
          type: string
          description: ""
        powerFormId:
          type: string
          description: ""
        powerFormUrl:
          type: string
          description: ""
        recipients:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/powerFormRecipient'
        senderName:
          type: string
          description: ""
        senderUserId:
          type: string
          description: ""
        signingMode:
          type: string
          description: ""
        templateId:
          type: string
          description: The ID of the template being accessed.
        templateName:
          type: string
          description: ""
        timesUsed:
          type: string
          description: ""
        uri:
          type: string
          description: ""
        usesRemaining:
          type: string
          description: ""
      description: ""
      x-ds-definition-name: powerForm
      x-ms-summary: ""
    powerFormFormDataEnvelope:
      type: object
      properties:
        envelopeId:
          type: string
          description: 'The envelope''s GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec '
        recipients:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/powerFormFormDataRecipient'
      description: ""
      x-ds-definition-name: powerFormFormDataEnvelope
      x-ms-summary: ""
    powerFormFormDataRecipient:
      type: object
      properties:
        email:
          type: string
          description: ""
        formData:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/nameValue'
        name:
          type: string
          description: ""
        recipientId:
          type: string
          description: Unique for the recipient. It is used by the tab element to
            indicate which recipient is to sign the Document.
      description: ""
      x-ds-definition-name: powerFormFormDataRecipient
      x-ms-summary: ""
    powerFormRecipient:
      type: object
      properties:
        accessCode:
          type: string
          description: "If a value is provided, the recipient must enter the value\
            \ as the access code to view and sign the envelope. \n\nMaximum Length:\
            \ 50 characters and it must conform to the account's access code format\
            \ setting.\n\nIf blank, but the signer `accessCode` property is set in\
            \ the envelope, then that value is used.\n\nIf blank and the signer `accessCode`\
            \ property is not set, then the access code is not required."
        accessCodeLocked:
          type: string
          description: ""
        accessCodeRequired:
          type: string
          description: ""
        email:
          type: string
          description: ""
        emailLocked:
          type: string
          description: ""
        idCheckConfigurationName:
          type: string
          description: "The name of the authentication check to use. This value must\
            \ match one of the authentication types that the account uses. The names\
            \ of these authentication types appear in the web console sending interface\
            \ in the Identify list for a recipient. This setting overrides any default\
            \ authentication setting. Valid values are:\n\n- `Phone Auth $`: The recipient\
            \ must authenticate by using two-factor authentication (2FA). You provide\
            \ the phone number to use for 2FA in the `phoneAuthentication` object.\n\
            - `SMS Auth $`: The recipient must authenticate via SMS. You provide the\
            \ phone number to use in the `smsAuthentication` object.\n- `ID Check\
            \ $`: The  recipient must answer detailed security questions. \n\n**Example**:\
            \ Your account has ID Check and SMS Authentication available. In the web\
            \ console Identify list, these appear as ID Check $ and SMS Auth $. To\
            \ use ID Check in an envelope, the idCheckConfigurationName should be\
            \ ID Check $. For SMS, you would use SMS Auth $, and you would also need\
            \ to add a phone number to the smsAuthentication node."
        idCheckRequired:
          type: string
          description: ""
        name:
          type: string
          description: ""
        recipientType:
          type: string
          description: ""
        roleName:
          type: string
          description: Optional element. Specifies the role name associated with the
            recipient.<br/><br/>This is required when working with template recipients.
        routingOrder:
          type: string
          description: 'Specifies the routing order of the recipient in the envelope. '
        templateRequiresIdLookup:
          type: string
          description: ""
        userNameLocked:
          type: string
          description: ""
      description: ""
      x-ds-definition-name: powerFormRecipient
      x-ms-summary: ""
    powerFormSendersResponse:
      type: object
      properties:
        endPosition:
          type: string
          description: 'The last position in the result set. '
        nextUri:
          type: string
          description: 'The URI for the next chunk of records based on the search
            request. It is `null` if this is the last set of results for the search. '
        powerFormSenders:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/userInfo'
        previousUri:
          type: string
          description: 'The URI for the prior chunk of records based on the search
            request. It is `null` if this is the first set of results for the search. '
        resultSetSize:
          type: string
          description: 'The number of results returned in this response. '
        startPosition:
          type: string
          description: Starting position of the current result set.
        totalSetSize:
          type: string
          description: The total number of items in the search's result set. It will
            always be greater than or equal to the value of the `resultSetSize` field.
      description: ""
      x-ds-definition-name: powerFormSendersResponse
      x-ms-summary: ""
    powerFormsFormDataResponse:
      type: object
      properties:
        envelopes:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/powerFormFormDataEnvelope'
      description: ""
      x-ds-definition-name: powerFormsFormDataResponse
      x-ms-summary: ""
    powerFormsRequest:
      type: object
      properties:
        powerForms:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/powerForm'
      description: ""
      x-ds-definition-name: powerFormsRequest
      x-ms-summary: ""
    powerFormsResponse:
      type: object
      properties:
        endPosition:
          type: string
          description: 'The last position in the result set. '
        nextUri:
          type: string
          description: 'The URI for the next chunk of records based on the search
            request. It is `null` if this is the last set of results for the search. '
        powerForms:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/powerForm'
        previousUri:
          type: string
          description: 'The URI for the prior chunk of records based on the search
            request. It is `null` if this is the first set of results for the search. '
        resultSetSize:
          type: string
          description: 'The number of results returned in this response. '
        startPosition:
          type: string
          description: Starting position of the current result set.
        totalSetSize:
          type: string
          description: The total number of items in the search's result set. It will
            always be greater than or equal to the value of the `resultSetSize` field.
      description: ""
      x-ds-definition-name: powerFormsResponse
      x-ms-summary: ""
    propertyMetadata:
      type: object
      properties:
        options:
          type: array
          description: ""
          items:
            type: string
        rights:
          type: string
          description: ""
      description: ""
      x-ds-definition-name: propertyMetadata
      x-ms-summary: ""
    province:
      type: object
      properties:
        isoCode:
          type: string
          description: ""
        name:
          type: string
          description: ""
      description: ""
      x-ds-definition-name: province
      x-ms-summary: ""
    provisioningInformation:
      type: object
      properties:
        defaultConnectionId:
          type: string
          description: ""
        defaultPlanId:
          type: string
          description: ""
        distributorCode:
          type: string
          description: The code that identifies the billing plan groups and plans
            for the new account.
        distributorPassword:
          type: string
          description: The password for the distributorCode.
        passwordRuleText:
          type: string
          description: ""
        planPromotionText:
          type: string
          description: ""
        purchaseOrderOrPromAllowed:
          type: string
          description: ""
      description: ""
      x-ds-definition-name: provisioningInformation
      x-ms-summary: ""
    purchasedEnvelopesInformation:
      type: object
      properties:
        amount:
          type: string
          description: The total amount of the purchase.
        appName:
          type: string
          description: The AppName of the client application.
        currencyCode:
          type: string
          description: Specifies the ISO currency code of the purchase. This is based
            on the ISO 4217 currency code information.
        platform:
          type: string
          description: The Platform of the client application
        productId:
          type: string
          description: The Product ID from the AppStore.
        quantity:
          type: string
          description: The quantity of envelopes to add to the account.
        receiptData:
          type: string
          description: The encrypted Base64 encoded receipt data.
        storeName:
          type: string
          description: The name of the AppStore.
        transactionId:
          type: string
          description: Specifies the Transaction ID from the AppStore.
      description: ""
      x-ds-definition-name: purchasedEnvelopesInformation
      x-ms-summary: ""
    radio:
      type: object
      properties:
        anchorCaseSensitive:
          type: string
          description: |-
            Reserved for DocuSign.
            <!--
            When set to **true**, the anchor string does not consider case when matching strings in the document. The default value is **true**.
            -->
        anchorHorizontalAlignment:
          type: string
          description: |
            Reserved for DocuSign.
            <!--
            Specifies the alignment of anchor tabs with anchor strings. Possible values are **left** or **right**. The default value is **left**.
            -->
        anchorIgnoreIfNotPresent:
          type: string
          description: "When set to **true**, this tab is ignored if anchorString\
            \ is not found in the document."
        anchorMatchWholeWord:
          type: string
          description: |
            Reserved for DocuSign.
            <!--
            When set to **true**, the anchor string in this tab matches whole words only (strings embedded in other strings are ignored.) The default value is **true**.
            -->
        anchorString:
          type: string
          description: Specifies the anchor string.
        anchorUnits:
          type: string
          description: |
            Specifies units of the
            `anchorXOffset` and
            `anchorYOffset`.
            Valid units are:

            - `pixels`
            - `inches`
            - `mms`
            - `cms`
        anchorXOffset:
          type: string
          description: |
            Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.
        anchorYOffset:
          type: string
          description: |
            Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.
        errorDetails:
          $ref: '#/components/schemas/errorDetails'
        locked:
          type: string
          description: "When set to **true**, the signer cannot change the data of\
            \ the custom tab."
        pageNumber:
          type: string
          description: |
            Specifies the page number on which the tab is located.
            Must be 1 for supplemental documents.
        required:
          type: string
          description: "When set to **true**, the signer is required to fill out this\
            \ tab"
        selected:
          type: string
          description: "When set to **true**, the radio button is selected."
        tabId:
          type: string
          description: The unique identifier for the tab.
        tabOrder:
          type: string
          description: |-
            A positive integer that sets the order the tab is navigated to during signing.

            Tabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.
        value:
          type: string
          description: 'Specifies the value of the tab. '
        xPosition:
          type: string
          description: |
            This property indicates the horizontal offset of the object on the page.
            DocuSign uses 72 DPI when determining position.
            Required. May be zero.
        yPosition:
          type: string
          description: |
            This property indicates the vertical offset of the object on the page.
            DocuSign uses 72 DPI when determining position.
            Required. May be zero.
      description: |
        One of the selectable radio buttons
        in the `radios` property
        of a [`radioGroup`](https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/radioGroup) tab.
      x-ds-definition-name: radio
      x-ms-summary: |
        One of the selectable radio buttons
        in the `radios` property
        of a [`radioGroup`](https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/radioGroup) tab.
    radioGroup:
      type: object
      properties:
        conditionalParentLabel:
          type: string
          description: For conditional fields this is the TabLabel of the parent tab
            that controls this tab's visibility.
        conditionalParentValue:
          type: string
          description: |
            For conditional fields, this is the value of the parent tab that controls the tab's visibility.

            If the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use "on" as the value to show that the parent tab is active.
        documentId:
          type: string
          description: Specifies the document ID number that the tab is placed on.
            This must refer to an existing Document's ID attribute.
        groupName:
          type: string
          description: The name of the group. The search_text provided in the call
            automatically performs a wild card search on group_name.
        radios:
          type: array
          description: Specifies the locations and status for radio buttons that are
            grouped together.
          items:
            $ref: '#/components/schemas/radio'
        recipientId:
          type: string
          description: Unique for the recipient. It is used by the tab element to
            indicate which recipient is to sign the Document.
        requireAll:
          type: string
          description: "When set to **true** and shared is true, information must\
            \ be entered in this field to complete the envelope. "
        requireInitialOnSharedChange:
          type: string
          description: "Optional element for field markup. When set to **true**, the\
            \ signer is required to initial when they modify a shared field."
        shared:
          type: string
          description: "When set to **true**, this custom tab is shared."
        templateLocked:
          type: string
          description: "When set to **true**, the sender cannot change any attributes\
            \ of the recipient. Used only when working with template recipients. "
        templateRequired:
          type: string
          description: "When set to **true**, the sender may not remove the recipient.\
            \ Used only when working with template recipients."
        tooltip:
          type: string
          description: ""
      description: |
        This group tab is used to place radio buttons on a document.
        The `radios` property
        contains a list of
        [`radio`](https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/radio)
        objects  associated with the group. Only one radio button can
        be selected in a group.
      x-ds-definition-name: radioGroup
      x-ms-summary: |
        This group tab is used to place radio buttons on a document.
        The `radios` property
        contains a list of
        [`radio`](https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/radio)
        objects  associated with the group. Only one radio button can
        be selected in a group.
    recipientAttachment:
      type: object
      properties:
        attachmentId:
          type: string
          description: ""
        attachmentType:
          type: string
          description: ""
        data:
          type: string
          description: ""
        label:
          type: string
          description: ""
        name:
          type: string
          description: ""
        remoteUrl:
          type: string
          description: ""
      description: ""
      x-ds-definition-name: recipientAttachment
      x-ms-summary: ""
    recipientDomain:
      type: object
      properties:
        active:
          type: string
          description: ""
        domainCode:
          type: string
          description: ""
        domainName:
          type: string
          description: ""
        recipientDomainId:
          type: string
          description: ""
      description: ""
      x-ds-definition-name: recipientDomain
      x-ms-summary: ""
    recipientEmailNotification:
      type: object
      properties:
        emailBody:
          type: string
          description: Not applicable
        emailSubject:
          type: string
          description: Not applicable
        supportedLanguage:
          type: string
          description: "Specifies the language used to localize Electronic Seals UI\
            \ texts such as \"Sealed by\", etc.  \n  \nThe supported languages, with\
            \ the language value shown in parenthesis, are: Arabic (ar), Bahasa Indonesia\
            \ (id), Bahasa Melayu (ms) Bulgarian (bg), Czech (cs), Chinese Simplified\
            \ (zh_CN), Chinese Traditional (zh_TW), Croatian (hr), Danish (da), Dutch\
            \ (nl), English US (en), English UK (en_GB), Estonian (et), Farsi (fa),\
            \ Finnish (fi), French (fr), French Canada (fr_CA), German (de), Greek\
            \ (el), Hebrew (he), Hindi (hi), Hungarian (hu), Italian (it), Japanese\
            \ (ja), Korean (ko), Latvian (lv), Lithuanian (lt), Norwegian (no), Polish\
            \ (pl), Portuguese (pt), Portuguese Brazil (pt_BR), Romanian (ro),Russian\
            \ (ru), Serbian (sr), Slovak (sk), Slovenian (sl), Spanish (es),Spanish\
            \ Latin America (es_MX), Swedish (sv), Thai (th), Turkish (tr), Ukrainian\
            \ (uk), and Vietnamese (vi).  \n  \nThis parameter is optional. If not\
            \ set, it defaults to the sender’s language settings at time of sealing. "
      description: ""
      x-ds-definition-name: recipientEmailNotification
      x-ms-summary: ""
    recipientEvent:
      type: object
      properties:
        includeDocuments:
          type: string
          description: reserved
        recipientEventStatusCode:
          type: string
          description: "Send a webhook notification for the following recipient statuses:\
            \ Sent, Delivered, Completed, Declined, AuthenticationFailed, and AutoResponded."
      description: ""
      x-ds-definition-name: recipientEvent
      x-ms-summary: ""
    recipientFormData:
      type: object
      properties:
        declinedTime:
          type: string
          description: ""
        deliveredTime:
          type: string
          description: ""
        email:
          type: string
          description: ""
        formData:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/nameValue'
        name:
          type: string
          description: ""
        recipientId:
          type: string
          description: Unique for the recipient. It is used by the tab element to
            indicate which recipient is to sign the Document.
        sentTime:
          type: string
          description: ""
        signedTime:
          type: string
          description: ""
      description: ""
      x-ds-definition-name: recipientFormData
      x-ms-summary: ""
    recipientIdentityInputOption:
      type: object
      properties:
        name:
          type: string
          description: ""
        phoneNumberList:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/recipientIdentityPhoneNumber'
        valueType:
          type: string
          description: ""
      description: ""
      x-ds-definition-name: recipientIdentityInputOption
      x-ms-summary: ""
    recipientIdentityPhoneNumber:
      type: object
      properties:
        countryCode:
          type: string
          description: ""
        extension:
          type: string
          description: ""
        number:
          type: string
          description: ""
      description: ""
      x-ds-definition-name: recipientIdentityPhoneNumber
      x-ms-summary: ""
    recipientIdentityVerification:
      type: object
      properties:
        inputOptions:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/recipientIdentityInputOption'
        workflowId:
          type: string
          description: ""
      description: ""
      x-ds-definition-name: recipientIdentityVerification
      x-ms-summary: ""
    recipientNamesResponse:
      type: object
      properties:
        multipleUsers:
          type: string
          description: Indicates whether email address is used by more than one user.
        recipientNames:
          type: array
          description: ""
          items:
            type: string
        reservedRecipientEmail:
          type: string
          description: ""
      description: ""
      x-ds-definition-name: recipientNamesResponse
      x-ms-summary: ""
    recipientPhoneAuthentication:
      type: object
      properties:
        recipMayProvideNumber:
          type: string
          description: "Boolean. When set to **true**, the recipient can supply a\
            \ phone number their choice."
        recordVoicePrint:
          type: string
          description: Reserved.
        senderProvidedNumbers:
          type: array
          description: 'An Array containing a list of phone numbers the recipient
            may use for SMS text authentication. '
          items:
            type: string
        validateRecipProvidedNumber:
          type: string
          description: ' Reserved.'
      description: |-
        A complex type that Contains the elements:

        * recipMayProvideNumber - Boolean. When set to **true**, the recipient can use whatever phone number they choose.
        * senderProvidedNumbers - ArrayOfString.  A list of phone numbers the recipient can use.
        * recordVoicePrint - Reserved.
        * validateRecipProvidedNumber - Reserved.
      x-ds-definition-name: recipientPhoneAuthentication
      x-ms-summary: |-
        A complex type that Contains the elements:

        * recipMayProvideNumber - Boolean. When set to **true**, the recipient can use whatever phone number they choose.
        * senderProvidedNumbers - ArrayOfString.  A list of phone numbers the recipient can use.
        * recordVoicePrint - Reserved.
        * validateRecipProvidedNumber - Reserved.
    recipientProofFile:
      type: object
      properties:
        isInProofFile:
          type: string
          description: ""
      description: ""
      x-ds-definition-name: recipientProofFile
      x-ms-summary: ""
    recipients:
      type: object
      properties:
        agents:
          type: array
          description: A complex type defining the management and access rights of
            a recipient assigned assigned as an agent on the document.
          items:
            $ref: '#/components/schemas/agent'
        carbonCopies:
          type: array
          description: "A complex type containing information about recipients who\
            \ should receive a copy of the envelope, but does not need to sign it."
          items:
            $ref: '#/components/schemas/carbonCopy'
        certifiedDeliveries:
          type: array
          description: "A complex type containing information on a recipient the must\
            \ receive the completed documents for the envelope to be completed, but\
            \ the recipient does not need to sign, initial, date, or add information\
            \ to any of the documents."
          items:
            $ref: '#/components/schemas/certifiedDelivery'
        currentRoutingOrder:
          type: string
          description: ""
        editors:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/editor'
        errorDetails:
          $ref: '#/components/schemas/errorDetails'
        inPersonSigners:
          type: array
          description: Specifies a signer that is in the same physical location as
            a DocuSign user who will act as a Signing Host for the transaction. The
            recipient added is the Signing Host and new separate Signer Name field
            appears after Sign in person is selected.
          items:
            $ref: '#/components/schemas/inPersonSigner'
        intermediaries:
          type: array
          description: "Identifies a recipient that can, but is not required to, add\
            \ name and email information for recipients at the same or subsequent\
            \ level in the routing order (until subsequent Agents, Editors or Intermediaries\
            \ recipient types are added)."
          items:
            $ref: '#/components/schemas/intermediary'
        recipientCount:
          type: string
          description: |-
            The list of recipient event statuses that will trigger Connect to send updates to the url. It can be a two-part list with:

            * recipientEventStatusCode - The recipient status, this can be Sent, Delivered, Completed, Declined, AuthenticationFailed, and AutoResponded.
            * includeDocuments - When set to **true**, the envelope time zone information is included in the message.
        seals:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/sealSign'
        signers:
          type: array
          description: A complex type containing information about the Signer recipient.
          items:
            $ref: '#/components/schemas/signer'
        witnesses:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/witness'
      description: ""
      x-ds-definition-name: recipients
      x-ms-summary: ""
    recipientSAMLAuthentication:
      type: object
      properties:
        samlAssertionAttributes:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/samlAssertionAttribute'
      description: "Contains the name/value pair information for the SAML assertion\
        \ attributes:\n\n* name - The name of the SAML assertion attribute.\n* value\
        \ - The value associated with the named SAML assertion attribute. \n\nYour\
        \ account must be set up to use SSO to use this."
      x-ds-definition-name: recipientSAMLAuthentication
      x-ms-summary: "Contains the name/value pair information for the SAML assertion\
        \ attributes:\n\n* name - The name of the SAML assertion attribute.\n* value\
        \ - The value associated with the named SAML assertion attribute. \n\nYour\
        \ account must be set up to use SSO to use this."
    recipientSignatureInformation:
      type: object
      properties:
        fontStyle:
          type: string
          description: ""
        signatureInitials:
          type: string
          description: ""
        signatureName:
          type: string
          description: Specifies the user signature name.
      description: |-
        Allows the sender to pre-specify the signature name, signature initials and signature font used in the signature stamp for the recipient.

        Used only with recipient types In Person Signers and Signers.
      x-ds-definition-name: recipientSignatureInformation
      x-ms-summary: |-
        Allows the sender to pre-specify the signature name, signature initials and signature font used in the signature stamp for the recipient.

        Used only with recipient types In Person Signers and Signers.
    recipientSignatureProvider:
      type: object
      properties:
        sealDocumentsWithTabsOnly:
          type: string
          description: "By default, electronic seals apply on all documents in an\
            \ envelope. If any of the documents has a `signHere` tab, then a visual\
            \ representation of the electronic seal will show up in the final document.\
            \ If not, the electronic seal will be visible in the metadata but not\
            \ in the content of the document.\n\nTo apply electronic seals on specific\
            \ documents only, you must enable the  `sealDocumentsWithTabsOnly` parameter.\
            \ In this case, Electronic Seal applies only on documents that have `signHere`\
            \ tabs set for the Electronic Seal recipient. Other documents won't be\
            \ sealed. "
        sealName:
          type: string
          description: |
            Indicates the name of the electronic seal to apply on documents.
        signatureProviderName:
          type: string
          description: "The name of an Electronic or Standards Based Signature (digital\
            \ signature) provider for the signer to use. [The current provider list.](https://developers.docusign.com/esign-rest-api/guides/standards-based-signatures)"
        signatureProviderOptions:
          $ref: '#/components/schemas/recipientSignatureProviderOptions'
      description: |
        An Electronic or Standards Based Signature (digital signature) provider for the signer to use. [More information](https://developers.docusign.com/esign-rest-api/guides/standards-based-signatures).
      x-ds-definition-name: recipientSignatureProvider
      x-ms-summary: |
        An Electronic or Standards Based Signature (digital signature) provider for the signer to use. [More information](https://developers.docusign.com/esign-rest-api/guides/standards-based-signatures).
    recipientSignatureProviderOptions:
      type: object
      properties:
        cpfNumber:
          type: string
          description: Reserved for DocuSign
        oneTimePassword:
          type: string
          description: "A pre-shared secret that the signer must enter to complete\
            \ the signing process. Eg last six digits of the signer's government ID\
            \ or Social Security number. Or a newly created pre-shared secret for\
            \ the transaction. Note: some signature providers may require an exact\
            \ (case-sensitive) match if alphabetic characters are included in the\
            \ field."
        signerRole:
          type: string
          description: "The role or capacity of the signing recipient. Examples: Manager,\
            \ Approver, etc."
        sms:
          type: string
          description: "The mobile phone number used to send the recipient an access\
            \ code for the signing ceremony. Format: a string starting with +, then\
            \ the country code followed by the full mobile phone number without any\
            \ spaces or special characters. Omit leading zeroes before a city code.\
            \ Examples: +14155551234, +97235551234, +33505551234."
      description: "Option settings for the signature provider. Different providers\
        \ require or use different options. [The current provider list and the options\
        \ they require.](https://developers.docusign.com/esign-rest-api/guides/standards-based-signatures)"
      x-ds-definition-name: recipientSignatureProviderOptions
      x-ms-summary: "Option settings for the signature provider. Different providers\
        \ require or use different options. [The current provider list and the options\
        \ they require.](https://developers.docusign.com/esign-rest-api/guides/standards-based-signatures)"
    recipientSMSAuthentication:
      type: object
      properties:
        senderProvidedNumbers:
          type: array
          description: 'An Array containing a list of phone numbers the recipient
            may use for SMS text authentication. '
          items:
            type: string
      description: Contains the element senderProvidedNumbers which is an Array  of
        phone numbers the recipient can use for SMS text authentication.
      x-ds-definition-name: recipientSMSAuthentication
      x-ms-summary: Contains the element senderProvidedNumbers which is an Array  of
        phone numbers the recipient can use for SMS text authentication.
    recipientsUpdateSummary:
      type: object
      properties:
        recipientUpdateResults:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/recipientUpdateResponse'
      description: ""
      x-ds-definition-name: recipientsUpdateSummary
      x-ms-summary: ""
    recipientUpdateResponse:
      type: object
      properties:
        errorDetails:
          $ref: '#/components/schemas/errorDetails'
        recipientId:
          type: string
          description: Unique for the recipient. It is used by the tab element to
            indicate which recipient is to sign the Document.
        tabs:
          $ref: '#/components/schemas/EnvelopeRecipientTabs'
      description: ""
      x-ds-definition-name: recipientUpdateResponse
      x-ms-summary: ""
    recipientViewRequest:
      type: object
      properties:
        assertionId:
          type: string
          description: A unique identifier of the authentication event executed by
            the client application.
        authenticationInstant:
          type: string
          description: A sender generated value that indicates the date/time that
            the signer was authenticated.
        authenticationMethod:
          type: string
          description: "Required. Choose a value that most closely matches the technique\
            \ your application used to authenticate the recipient / signer. \n\nChoose\
            \ a value from this list: \n* Biometric \n* Email\n* HTTPBasicAuth\n*\
            \ Kerberos\n* KnowledgeBasedAuth\n* None\n* PaperDocuments\n* Password\n\
            * RSASecureID\n* SingleSignOn_CASiteminder\n* SingleSignOn_InfoCard\n\
            * SingleSignOn_MicrosoftActiveDirectory\n* SingleSignOn_Other\n* SingleSignOn_Passport\n\
            * SingleSignOn_SAML\n* Smartcard\n* SSLMutualAuth\n* X509Certificate\n\
            \nThis information is included in the Certificate of Completion."
        clientUserId:
          type: string
          description: |-
            A sender created value. If provided, the recipient is treated as an embedded (captive) recipient or signer.

            Use your application's client ID (user ID) for the recipient. Doing so enables the details of your application's authentication of the recipient to be connected to the recipient's signature if the signature is disputed or repudiated.

            Maximum length: 100 characters.
        email:
          type: string
          description: Specifies the email of the recipient. You can use either email
            and userName or userId to identify the recipient.
        frameAncestors:
          type: array
          description: ""
          items:
            type: string
        messageOrigins:
          type: array
          description: ""
          items:
            type: string
        pingFrequency:
          type: string
          description: "Only used if pingUrl is specified. This is the interval, in\
            \ seconds, between pings on the pingUrl.  The default is 300 seconds.\
            \ Valid values are 60-1200 seconds."
        pingUrl:
          type: string
          description: A client Url to be pinged by the DocuSign Signing experience
            to indicate to the client that Signing is active. An HTTP Get is executed
            against the client. The response from the client is ignored. The intent
            is for the client to reset it's session timer when the request is received.
        recipientId:
          type: string
          description: Unique for the recipient. It is used by the tab element to
            indicate which recipient is to sign the Document.
        returnUrl:
          type: string
          description: "The URL that the recipient is redirected to\nafter the signing\
            \ session has ended.\nDocuSign redirects to the URL\nand includes an `event`\
            \ query parameter\nthat can be used by your application.\n\nPossible `event`\
            \ parameter values include: \n\n* `access_code_failed`<br>\n  Recipient\
            \ used incorrect access code.\n* `cancel`<br>\n  Recipient canceled the\
            \ signing operation,\n  possibly by using the **Finish Later** option.\n\
            * `decline`<br>\n  Recipient declined to sign.\n* `exception`<br>\n  A\
            \ system error occurred during the signing process.\n* `fax_pending`<br>\n\
            \  Recipient has a fax pending.\n* `id_check_failed`<br>\n  Recipient\
            \ failed an ID check.\n* `session_timeout`<br>\n  The session timed out.\n\
            \  An account can control this timeout using the **Signer Session Timeout**\
            \ option.\n* `signing_complete`<br>\n  Recipient completed the signing\
            \ ceremony.\n* `ttl_expired`<br>\n  The Time To Live token for the envelope\
            \ has expired.\n  After being successfully invoked, these tokens expire\n\
            \  after 5 minutes or if the envelope is voided.\n* `viewing_complete`<br>\n\
            \  The recipient completed viewing an envelope\n  that is in a read-only/terminal\
            \ state\n  such as completed, declined, or voided.\n\nBe sure to include\
            \ `https://` in the URL or the redirect may fail on certain browsers.\n"
        securityDomain:
          type: string
          description: The domain in which the user authenticated.
        userId:
          type: string
          description: "Specifies the user ID of the recipient. You can use with user\
            \ ID or email and user name to identify the recipient. \n\nIf userId is\
            \ used and a clientUserId is provided, the value in the `userId` property\
            \ must match a recipientId (which can be retrieved with a GET recipients\
            \ call) for the envelope. \n\nIf a userId is used and a clientUserId is\
            \ not provided, the userId must match the user ID of the authenticating\
            \ user."
        userName:
          type: string
          description: Specifies the username of the recipient. You can use either
            email and userName or userId to identify the recipient.
        xFrameOptions:
          type: string
          description: |-
            Specifies whether a browser should be allowed to render a page in a frame or IFrame. Setting this property ensures that your content is not embedded into unauthorized pages or frames.

            Valid values are:

            - `deny`: The page cannot be displayed in a frame.
            - `same_origin`: The page can only be displayed in a frame on the same origin as the page itself.
            - `allow_from`: The page can only be displayed in a frame on the origin specified by the `xFrameOptionsAllowFromUrl` property.
        xFrameOptionsAllowFromUrl:
          type: string
          description: "When the value of `xFrameOptions` is `allow_from`, this property\
            \ specifies the origin on which the page is allowed to display in a frame.\
            \ If the value of `xFrameOptions` is `allow_from`, you must include a\
            \ value for this property."
      description: ""
      x-ds-definition-name: recipientViewRequest
      x-ms-summary: ""
    referralInformation:
      type: object
      properties:
        advertisementId:
          type: string
          description: "A complex type that contains the following information for\
            \ entering referral and discount information. The following items are\
            \ included in the referral information (all string content): enableSupport,\
            \ includedSeats, saleDiscountPercent, saleDiscountAmount, saleDiscountFixedAmount,\
            \ saleDiscountPeriods, saleDiscountSeatPriceOverride, planStartMonth,\
            \ referralCode, referrerName, advertisementId, publisherId, shopperId,\
            \ promoCode, groupMemberId, idType, and industry.\n\n###### Note: saleDiscountPercent,\
            \ saleDiscountAmount, saleDiscountFixedAmount, saleDiscountPeriods, and\
            \ saleDiscountSeatPriceOverride are reserved for DoucSign use only. \n"
        enableSupport:
          type: string
          description: "When set to **true**, then customer support is provided as\
            \ part of the account plan."
        externalOrgId:
          type: string
          description: ""
        groupMemberId:
          type: string
          description: ""
        idType:
          type: string
          description: ""
        includedSeats:
          type: string
          description: The number of seats (users) included.
        industry:
          type: string
          description: ""
        planStartMonth:
          type: string
          description: ""
        promoCode:
          type: string
          description: ""
        publisherId:
          type: string
          description: ""
        referralCode:
          type: string
          description: ""
        referrerName:
          type: string
          description: ""
        saleDiscountAmount:
          type: string
          description: Reserved for DocuSign use only.
        saleDiscountFixedAmount:
          type: string
          description: Reserved for DocuSign use only.
        saleDiscountPercent:
          type: string
          description: Reserved for DocuSign use only.
        saleDiscountPeriods:
          type: string
          description: Reserved for DocuSign use only.
        saleDiscountSeatPriceOverride:
          type: string
          description: Reserved for DocuSign use only.
        shopperId:
          type: string
          description: ""
      description: "A complex type that contains the following information for entering\
        \ referral and discount information. The following items are included in the\
        \ referral information (all string content): enableSupport, includedSeats,\
        \ saleDiscountPercent, saleDiscountAmount, saleDiscountFixedAmount, saleDiscountPeriods,\
        \ saleDiscountSeatPriceOverride, planStartMonth, referralCode, referrerName,\
        \ advertisementId, publisherId, shopperId, promoCode, groupMemberId, idType,\
        \ and industry \n\n###### Note: saleDiscountPercent, saleDiscountAmount, saleDiscountFixedAmount,\
        \ saleDiscountPeriods, and saleDiscountSeatPriceOverride are reserved for\
        \ DoucSign use only."
      x-ds-definition-name: referralInformation
      x-ms-summary: "A complex type that contains the following information for entering\
        \ referral and discount information. The following items are included in the\
        \ referral information (all string content): enableSupport, includedSeats,\
        \ saleDiscountPercent, saleDiscountAmount, saleDiscountFixedAmount, saleDiscountPeriods,\
        \ saleDiscountSeatPriceOverride, planStartMonth, referralCode, referrerName,\
        \ advertisementId, publisherId, shopperId, promoCode, groupMemberId, idType,\
        \ and industry \n\n###### Note: saleDiscountPercent, saleDiscountAmount, saleDiscountFixedAmount,\
        \ saleDiscountPeriods, and saleDiscountSeatPriceOverride are reserved for\
        \ DoucSign use only."
    reminders:
      type: object
      properties:
        reminderDelay:
          type: string
          description: An interger that sets the number of days after the recipient
            receives the envelope that reminder emails are sent to the recipient.
        reminderEnabled:
          type: string
          description: "When set to **true**, the envelope expires (is no longer available\
            \ for signing) in the set number of days. If false, the account default\
            \ setting is used. If the account does not have an expiration setting,\
            \ the DocuSign default value of 120 days is used."
        reminderFrequency:
          type: string
          description: "An interger that sets the interval, in days, between reminder\
            \ emails."
      description: A complex element that specifies reminder settings for the envelope
      x-ds-definition-name: reminders
      x-ms-summary: A complex element that specifies reminder settings for the envelope
    resourceInformation:
      type: object
      properties:
        resources:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/nameValue'
      description: ""
      x-ds-definition-name: resourceInformation
      x-ms-summary: ""
    returnUrlRequest:
      type: object
      properties:
        returnUrl:
          type: string
          description: "Your app's return url that the user will be redirected to\
            \ after sending the envelope or completing the sending/tagging view. Query\
            \ parameters `envelopeId` and `event` will be added to the URL. The event\
            \ parameter values: \n\n* `Send` (the user sent the envelope)\n* `Save`\
            \ (the user saved the envelope, it is still a draft)\n* `Cancel` (the\
            \ user canceled the sending transaction)\n* `Error` (there was an error\
            \ during the send operation)\n* `SessionEnd` (the sending session ended\
            \ before the user completed a different action)"
      description: "The request body for the EnvelopeViews: createSender method."
      x-ds-definition-name: returnUrlRequest
      x-ms-summary: "The request body for the EnvelopeViews: createSender method."
    samlAssertionAttribute:
      type: object
      properties:
        errorDetails:
          $ref: '#/components/schemas/errorDetails'
        name:
          type: string
          description: ""
        originalValue:
          type: string
          description: 'The initial value of the tab when it was sent to the recipient. '
        value:
          type: string
          description: The value associated with the named SAML assertion attribute
      description: ""
      x-ds-definition-name: samlAssertionAttribute
      x-ms-summary: ""
    seal:
      type: object
      properties:
        configuration:
          type: object
          additionalProperties:
            type: string
          description: Electronic seal configuration  properties
        sealIdentifier:
          type: string
          description: Electronic Seal identifier
      description: Set of information related to the electronic seal used by the Trust
        Service Provider (TSP).
      x-ds-definition-name: seal
      x-ms-summary: Set of information related to the electronic seal used by the
        Trust Service Provider (TSP).
    sealIdentifier:
      type: object
      properties:
        sealDisplayName:
          type: string
          description: ""
        sealName:
          type: string
          description: ""
      description: ""
      x-ds-definition-name: sealIdentifier
      x-ms-summary: ""
    sealSign:
      type: object
      properties:
        accessCode:
          type: string
          description: Not applicable
        addAccessCodeToEmail:
          type: string
          description: Not applicable
        clientUserId:
          type: string
          description: Not applicable
        customFields:
          type: array
          description: An optional array of strings that allows the sender to provide
            custom data about the recipient. This information is returned in the envelope
            status but otherwise not used by DocuSign. Each customField string can
            be a maximum of 100 characters.
          items:
            type: string
        declinedDateTime:
          type: string
          description: Not applicable
        declinedReason:
          type: string
          description: Not applicable
        deliveredDateTime:
          type: string
          description: Not applicable
        deliveryMethod:
          type: string
          description: "Reserved: For DocuSign use only."
        documentVisibility:
          type: array
          description: Not applicable
          items:
            $ref: '#/components/schemas/documentVisibility'
        emailNotification:
          $ref: '#/components/schemas/recipientEmailNotification'
        embeddedRecipientStartURL:
          type: string
          description: "Specifies a sender provided valid URL string for redirecting\
            \ an embedded recipient. When using this option, the embedded recipient\
            \ still receives an email from DocuSign, just as a remote recipient would.\
            \ When the document link in the email is clicked the recipient is redirected,\
            \ through DocuSign, to the supplied URL to complete their actions. When\
            \ routing to the URL, the sender's system (the server responding to the\
            \ URL) must request a recipient token to launch a signing session. \n\n\
            If set to `SIGN_AT_DOCUSIGN`, the recipient is directed to an embedded\
            \ signing or viewing process directly at DocuSign. The signing or viewing\
            \ action is initiated by the DocuSign system and the transaction activity\
            \ and Certificate of Completion records will reflect this. In all other\
            \ ways the process is identical to an embedded signing or viewing operation\
            \ that is launched by any partner.\n\nIt is important to remember that\
            \ in a typical embedded workflow the authentication of an embedded recipient\
            \ is the responsibility of the sending application, DocuSign expects that\
            \ senders will follow their own process for establishing the recipient's\
            \ identity. In this workflow the recipient goes through the sending application\
            \ before the embedded signing or viewing process in initiated. However,\
            \ when the sending application sets `EmbeddedRecipientStartURL=SIGN_AT_DOCUSIGN`,\
            \ the recipient goes directly to the embedded signing or viewing process\
            \ bypassing the sending application and any authentication steps the sending\
            \ application would use. In this case, DocuSign recommends that you use\
            \ one of the normal DocuSign authentication features (Access Code, Phone\
            \ Authentication, SMS Authentication, etc.) to verify the identity of\
            \ the recipient.\n\nIf the `clientUserId` property is NOT set, and the\
            \ `embeddedRecipientStartURL` is set, DocuSign will ignore the redirect\
            \ URL and launch the standard signing process for the email recipient.\
            \ Information can be appended to the embedded recipient start URL using\
            \ merge fields. The available merge fields items are: envelopeId, recipientId,\
            \ recipientName, recipientEmail, and customFields. The `customFields`\
            \ property must be set fort the recipient or envelope. The merge fields\
            \ are enclosed in double brackets. \n\n*Example*: \n\n`http://senderHost/[[mergeField1]]/\
            \ beginSigningSession? [[mergeField2]]&[[mergeField3]]` "
        errorDetails:
          $ref: '#/components/schemas/errorDetails'
        faxNumber:
          type: string
          description: Reserved for DocuSign.
        idCheckConfigurationName:
          type: string
          description: "The name of the authentication check to use. This value must\
            \ match one of the authentication types that the account uses. The names\
            \ of these authentication types appear in the web console sending interface\
            \ in the Identify list for a recipient. This setting overrides any default\
            \ authentication setting. Valid values are:\n\n- `Phone Auth $`: The recipient\
            \ must authenticate by using two-factor authentication (2FA). You provide\
            \ the phone number to use for 2FA in the `phoneAuthentication` object.\n\
            - `SMS Auth $`: The recipient must authenticate via SMS. You provide the\
            \ phone number to use in the `smsAuthentication` object.\n- `ID Check\
            \ $`: The  recipient must answer detailed security questions. \n\n**Example**:\
            \ Your account has ID Check and SMS Authentication available. In the web\
            \ console Identify list, these appear as ID Check $ and SMS Auth $. To\
            \ use ID Check in an envelope, the idCheckConfigurationName should be\
            \ ID Check $. For SMS, you would use SMS Auth $, and you would also need\
            \ to add a phone number to the smsAuthentication node."
        idCheckInformationInput:
          $ref: '#/components/schemas/idCheckInformationInput'
        identityVerification:
          $ref: '#/components/schemas/recipientIdentityVerification'
        inheritEmailNotificationConfiguration:
          type: string
          description: "When set to **true** and the envelope recipient creates a\
            \ DocuSign account after signing, the Manage Account Email Notification\
            \ settings are used as the default settings for the recipient's account. "
        name:
          type: string
          description: ""
        note:
          type: string
          description: Not applicable
        phoneAuthentication:
          $ref: '#/components/schemas/recipientPhoneAuthentication'
        recipientAttachments:
          type: array
          description: Not applicable
          items:
            $ref: '#/components/schemas/recipientAttachment'
        recipientAuthenticationStatus:
          $ref: '#/components/schemas/authenticationStatus'
        recipientId:
          type: string
          description: (Required) The `recipientId` used when the envelope or template
            was created.
        recipientIdGuid:
          type: string
          description: "The globally-unique identifier (GUID) for a specific recipient\
            \ on a specific envelope. If the same recipient is associated with multiple\
            \ envelopes, they will have a different GUID for each one. Read only."
        recipientSignatureProviders:
          type: array
          description: (Required) Indicates which electronic seal to apply on documents
            when creating an envelope.
          items:
            $ref: '#/components/schemas/recipientSignatureProvider'
        requireIdLookup:
          type: string
          description: Not applicable
        roleName:
          type: string
          description: Optional element. Specifies the role name associated with the
            recipient.<br/><br/>This is required when working with template recipients.
        routingOrder:
          type: string
          description: "(Optional, default: 1) \nSpecifies the routing order of the\
            \ electronic seal in the envelope.\nThe routing order assigned to your\
            \ electronic seal cannot be shared with another recipient.\nIt is recommended\
            \ that you set a routing order for your electronic seals.\n"
        samlAuthentication:
          $ref: '#/components/schemas/recipientSAMLAuthentication'
        sentDateTime:
          type: string
          description: Not applicable
        signedDateTime:
          type: string
          description: Not applicable
        smsAuthentication:
          $ref: '#/components/schemas/recipientSMSAuthentication'
        socialAuthentications:
          type: array
          description: ' Lists the social ID type that can be used for recipient authentication.'
          items:
            $ref: '#/components/schemas/socialAuthentication'
        status:
          type: string
          description: Item status. <!-- TODO -->
        tabs:
          $ref: '#/components/schemas/EnvelopeRecipientTabs'
        templateLocked:
          type: string
          description: "When set to **true**, the sender cannot change any attributes\
            \ of the recipient. Used only when working with template recipients. "
        templateRequired:
          type: string
          description: "When set to **true**, the sender may not remove the recipient.\
            \ Used only when working with template recipients."
        totalTabCount:
          type: string
          description: Not applicable
        userId:
          type: string
          description: Not applicable
      description: "Specifies one or more electronic seals to apply on  documents.\
        \ \n\n```json\n\"recipients\": {\n      \"seals\": [\n        {\n        \
        \  \"recipientId\": \"1\",\n          \"routingOrder\" : 1,\n          \"\
        recipientSignatureProviders\": [\n            {\n              \"sealName\"\
        : \"52e9d968-13be-42ca-a6fe-4682bc45c106\"\n            }\n      \t]\n   \
        \ \t}\n  \t]\n\t},\n```\nFor more information on Electronic Seals , see https://support.docusign.com/en/guides/ndse-user-guide-apply-electronic-seals"
      x-ds-definition-name: sealSign
      x-ms-summary: "Specifies one or more electronic seals to apply on  documents.\
        \ \n\n```json\n\"recipients\": {\n      \"seals\": [\n        {\n        \
        \  \"recipientId\": \"1\",\n          \"routingOrder\" : 1,\n          \"\
        recipientSignatureProviders\": [\n            {\n              \"sealName\"\
        : \"52e9d968-13be-42ca-a6fe-4682bc45c106\"\n            }\n      \t]\n   \
        \ \t}\n  \t]\n\t},\n```\nFor more information on Electronic Seals , see https://support.docusign.com/en/guides/ndse-user-guide-apply-electronic-seals"
    seatDiscount:
      type: object
      properties:
        beginSeatCount:
          type: string
          description: "Reserved: TBD"
        discountPercent:
          type: string
          description: ""
        endSeatCount:
          type: string
          description: "Reserved: TBD"
      description: ""
      x-ds-definition-name: seatDiscount
      x-ms-summary: ""
    senderEmailNotifications:
      type: object
      properties:
        changedSigner:
          type: string
          description: "When set to **true**, the sender receives notification if\
            \ the signer changes."
        commentsOnlyPrivateAndMention:
          type: string
          description: ""
        commentsReceiveAll:
          type: string
          description: ""
        deliveryFailed:
          type: string
          description: "When set to **true**, the sender receives notification if\
            \ the delivery of the envelope fails."
        envelopeComplete:
          type: string
          description: "When set to **true**, the user receives notification that\
            \ the envelope has been completed."
        offlineSigningFailed:
          type: string
          description: "When set to **true**, the user receives notification if the\
            \ offline signing failed."
        powerformResponsesLimitNotificationEmail:
          type: string
          description: ""
        recipientViewed:
          type: string
          description: "When set to **true**, the sender receives notification that\
            \ the recipient viewed the enveloper."
        senderEnvelopeDeclined:
          type: string
          description: ""
        withdrawnConsent:
          type: string
          description: "When set to **true**, the user receives notification if consent\
            \ is withdrawn."
      description: ""
      x-ds-definition-name: senderEmailNotifications
      x-ms-summary: ""
    serverTemplate:
      type: object
      properties:
        sequence:
          type: string
          description: ""
        templateId:
          type: string
          description: "The unique identifier of the template. If this is not provided,\
            \ DocuSign will generate a value. "
      description: ""
      x-ds-definition-name: serverTemplate
      x-ms-summary: ""
    serviceInformation:
      type: object
      properties:
        buildBranch:
          type: string
          description: "Reserved: TBD"
        buildBranchDeployedDateTime:
          type: string
          description: "Reserved: TBD"
        buildSHA:
          type: string
          description: "Reserved: TBD"
        buildVersion:
          type: string
          description: "Reserved: TBD"
        linkedSites:
          type: array
          description: ""
          items:
            type: string
        serviceVersions:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/serviceVersion'
      description: ""
      x-ds-definition-name: serviceInformation
      x-ms-summary: ""
    serviceVersion:
      type: object
      properties:
        version:
          type: string
          description: The version of the rest API.
        versionUrl:
          type: string
          description: ""
      description: ""
      x-ds-definition-name: serviceVersion
      x-ms-summary: ""
    settingsMetadata:
      type: object
      properties:
        is21CFRPart11:
          type: string
          description: "When set to **true**, indicates that this module is enabled\
            \ on the account."
        options:
          type: array
          description: ""
          items:
            type: string
        rights:
          type: string
          description: ""
        uiHint:
          type: string
          description: ""
        uiOrder:
          type: string
          description: ""
        uiType:
          type: string
          description: ""
      description: ""
      x-ds-definition-name: settingsMetadata
      x-ms-summary: ""
    sharedItem:
      type: object
      properties:
        errorDetails:
          $ref: '#/components/schemas/errorDetails'
        shared:
          type: string
          description: |-
            How the item is shared. One of:

            - `not_shared`
            - `shared_to`
            - `shared_from`
            - `shared_to_and_from`
        user:
          $ref: '#/components/schemas/userInfo'
      description: Information about the shared item.
      x-ds-definition-name: sharedItem
      x-ms-summary: Information about the shared item.
    signatureProviderRequiredOption:
      type: object
      properties:
        requiredSignatureProviderOptionIds:
          type: array
          description: ""
          items:
            type: string
        signerType:
          type: string
          description: ""
      description: ""
      x-ds-definition-name: signatureProviderRequiredOption
      x-ms-summary: ""
    signatureType:
      type: object
      properties:
        isDefault:
          type: string
          description: ""
        type:
          type: string
          description: "Type of the user. Valid values: type_owner, type_participant."
      description: ""
      x-ds-definition-name: signatureType
      x-ms-summary: ""
    signer:
      type: object
      properties:
        accessCode:
          type: string
          description: "If a value is provided, the recipient must enter the value\
            \ as the access code to view and sign the envelope. \n\nMaximum Length:\
            \ 50 characters and it must conform to the account's access code format\
            \ setting.\n\nIf blank, but the signer `accessCode` property is set in\
            \ the envelope, then that value is used.\n\nIf blank and the signer `accessCode`\
            \ property is not set, then the access code is not required."
        addAccessCodeToEmail:
          type: string
          description: This Optional attribute indicates that the access code will
            be added to the email sent to the recipient; this nullifies the Security
            measure of Access Code on the recipient.
        agentCanEditEmail:
          type: string
          description: "Optional element. When set to **true**, the agent recipient\
            \ associated with this recipient can change the recipient's pre-populated\
            \ email address. This element is only active if enabled for the account."
        agentCanEditName:
          type: string
          description: "Optional. When set to **true**, the agent recipient associated\
            \ with this recipient can change the recipient's pre-populated name. This\
            \ element is only active if enabled for the account."
        autoNavigation:
          type: string
          description: "When set to **true**, autonavigation is set for the recipient."
        bulkRecipientsUri:
          type: string
          description: "The URL for the bulk recipient file with the bulk recipient\
            \ information for this envelope, if applicable. This information is read\
            \ only and is only shown after the bulk recipient file is uploaded to\
            \ the envelope by using the PUT method. "
        canSignOffline:
          type: string
          description: "When set to **true**, specifies that the signer can perform\
            \ the signing ceremony offline."
        clientUserId:
          type: string
          description: "Specifies whether the recipient is embedded or remote. \n\n\
            If the `clientUserId` property is not null then the recipient is embedded.\
            \ Use this field to associate the signer with their userId in your app.\
            \ Authenticating the user is the responsibility of your app when you use\
            \ embedded signing.\n\nNote: if the `clientUserId` property is set and\
            \ either `SignerMustHaveAccount` or `SignerMustLoginToSign` property of\
            \ the account settings is set to  **true**, an error is generated on sending.\
            \ \n\nMaximum length: 100 characters. "
        creationReason:
          type: string
          description: "The reason why the recipient was created (for example, `sender`).\
            \ Read only."
        customFields:
          type: array
          description: An optional array of strings that allows the sender to provide
            custom data about the recipient. This information is returned in the envelope
            status but otherwise not used by DocuSign. Each customField string can
            be a maximum of 100 characters.
          items:
            type: string
        declinedDateTime:
          type: string
          description: The date and time the recipient declined the document. Read
            only.
        declinedReason:
          type: string
          description: The reason the recipient declined the document. Read only.
        defaultRecipient:
          type: string
          description: "When set to **true**, this recipient is the default recipient\
            \ and any tabs generated by the transformPdfFields option are mapped to\
            \ this recipient."
        deliveredDateTime:
          type: string
          description: "Reserved: For DocuSign use only."
        deliveryMethod:
          type: string
          description: "Reserved: For DocuSign use only."
        documentVisibility:
          type: array
          description: "A list of `documentVisibility` objects. Each object in the\
            \ list specifies whether a document in the envelope is visible to this\
            \ recipient. For the envelope to use this functionality, Document Visibility\
            \ must be enabled for the account and the `enforceSignerVisibility` property\
            \ must be set to **true**."
          items:
            $ref: '#/components/schemas/documentVisibility'
        email:
          type: string
          description: "The recipient's email address. The system sends notification\
            \ of the documents to sign to this email address. \n\nMaximum length:\
            \ 100 characters. "
        emailNotification:
          $ref: '#/components/schemas/recipientEmailNotification'
        emailRecipientPostSigningURL:
          type: string
          description: ""
        embeddedRecipientStartURL:
          type: string
          description: "Specifies a sender provided valid URL string for redirecting\
            \ an embedded recipient. When using this option, the embedded recipient\
            \ still receives an email from DocuSign, just as a remote recipient would.\
            \ When the document link in the email is clicked the recipient is redirected,\
            \ through DocuSign, to the supplied URL to complete their actions. When\
            \ routing to the URL, the sender's system (the server responding to the\
            \ URL) must request a recipient token to launch a signing session. \n\n\
            If set to `SIGN_AT_DOCUSIGN`, the recipient is directed to an embedded\
            \ signing or viewing process directly at DocuSign. The signing or viewing\
            \ action is initiated by the DocuSign system and the transaction activity\
            \ and Certificate of Completion records will reflect this. In all other\
            \ ways the process is identical to an embedded signing or viewing operation\
            \ that is launched by any partner.\n\nIt is important to remember that\
            \ in a typical embedded workflow the authentication of an embedded recipient\
            \ is the responsibility of the sending application, DocuSign expects that\
            \ senders will follow their own process for establishing the recipient's\
            \ identity. In this workflow the recipient goes through the sending application\
            \ before the embedded signing or viewing process in initiated. However,\
            \ when the sending application sets `EmbeddedRecipientStartURL=SIGN_AT_DOCUSIGN`,\
            \ the recipient goes directly to the embedded signing or viewing process\
            \ bypassing the sending application and any authentication steps the sending\
            \ application would use. In this case, DocuSign recommends that you use\
            \ one of the normal DocuSign authentication features (Access Code, Phone\
            \ Authentication, SMS Authentication, etc.) to verify the identity of\
            \ the recipient.\n\nIf the `clientUserId` property is NOT set, and the\
            \ `embeddedRecipientStartURL` is set, DocuSign will ignore the redirect\
            \ URL and launch the standard signing process for the email recipient.\
            \ Information can be appended to the embedded recipient start URL using\
            \ merge fields. The available merge fields items are: envelopeId, recipientId,\
            \ recipientName, recipientEmail, and customFields. The `customFields`\
            \ property must be set fort the recipient or envelope. The merge fields\
            \ are enclosed in double brackets. \n\n*Example*: \n\n`http://senderHost/[[mergeField1]]/\
            \ beginSigningSession? [[mergeField2]]&[[mergeField3]]` "
        errorDetails:
          $ref: '#/components/schemas/errorDetails'
        excludedDocuments:
          type: array
          description: |-
            Specifies the documents that are not visible to this recipient. Document Visibility must be enabled for the account and the `enforceSignerVisibility` property must be set to **true** for the envelope to use this.

            When enforce signer visibility is enabled, documents with tabs can only be viewed by signers that have a tab on that document. Recipients that have an administrative role (Agent, Editor, or Intermediaries) or informational role (Certified Deliveries or Carbon Copies) can always see all the documents in an envelope, unless they are specifically excluded using this setting when an envelope is sent. Documents that do not have tabs are always visible to all recipients, unless they are specifically excluded using this setting when an envelope is sent.
          items:
            type: string
        faxNumber:
          type: string
          description: Reserved for DocuSign.
        firstName:
          type: string
          description: "The user's first name. \nMaximum Length: 50 characters."
        fullName:
          type: string
          description: Reserved for DocuSign.
        idCheckConfigurationName:
          type: string
          description: "The name of the authentication check to use. This value must\
            \ match one of the authentication types that the account uses. The names\
            \ of these authentication types appear in the web console sending interface\
            \ in the Identify list for a recipient. This setting overrides any default\
            \ authentication setting. Valid values are:\n\n- `Phone Auth $`: The recipient\
            \ must authenticate by using two-factor authentication (2FA). You provide\
            \ the phone number to use for 2FA in the `phoneAuthentication` object.\n\
            - `SMS Auth $`: The recipient must authenticate via SMS. You provide the\
            \ phone number to use in the `smsAuthentication` object.\n- `ID Check\
            \ $`: The  recipient must answer detailed security questions. \n\n**Example**:\
            \ Your account has ID Check and SMS Authentication available. In the web\
            \ console Identify list, these appear as ID Check $ and SMS Auth $. To\
            \ use ID Check in an envelope, the idCheckConfigurationName should be\
            \ ID Check $. For SMS, you would use SMS Auth $, and you would also need\
            \ to add a phone number to the smsAuthentication node."
        idCheckInformationInput:
          $ref: '#/components/schemas/idCheckInformationInput'
        identityVerification:
          $ref: '#/components/schemas/recipientIdentityVerification'
        inheritEmailNotificationConfiguration:
          type: string
          description: "When set to **true** and the envelope recipient creates a\
            \ DocuSign account after signing, the Manage Account Email Notification\
            \ settings are used as the default settings for the recipient's account. "
        isBulkRecipient:
          type: string
          description: "When set to **true**, this signer is a bulk recipient and\
            \ the recipient information is contained in a bulk recipient file. \n\n\
            Note that when this is true the email and name for the recipient becomes\
            \ bulk@recipient.com and \"Bulk Recipient\". These fields can not be changed\
            \ for the bulk recipient. \n"
        lastName:
          type: string
          description: The recipient's last name.
        name:
          type: string
          description: |-
            The full legal name of the recipient. Maximum Length: 100 characters.

            **Note**: You must always set a value for this property in requests, even if `firstName` and `lastName` are set.
        note:
          type: string
          description: |
            A note sent to the recipient in the signing email.
            This note is unique to this recipient.
            In the user interface,
            it appears near the upper left corner
            of the document
            on the signing screen.

            Maximum Length: 1000 characters.
        phoneAuthentication:
          $ref: '#/components/schemas/recipientPhoneAuthentication'
        proofFile:
          $ref: '#/components/schemas/recipientProofFile'
        recipientAttachments:
          type: array
          description: Reserved for DocuSign.
          items:
            $ref: '#/components/schemas/recipientAttachment'
        recipientAuthenticationStatus:
          $ref: '#/components/schemas/authenticationStatus'
        recipientId:
          type: string
          description: "A local reference that senders use to map recipients to other\
            \ objects, such as specific document tabs. Within an envelope, each `recipientId`\
            \ must be unique, but there is no uniqueness requirement across envelopes.\
            \ For example, many envelopes assign the first recipient a `recipientId`\
            \ of `1`."
        recipientIdGuid:
          type: string
          description: "The globally-unique identifier (GUID) for a specific recipient\
            \ on a specific envelope. If the same recipient is associated with multiple\
            \ envelopes, they will have a different GUID for each one. Read only."
        recipientSignatureProviders:
          type: array
          description: "The default signature provider is the DocuSign Electronic\
            \ signature system. This parameter is used to specify one or more Standards\
            \ Based Signature (digital signature) providers for the signer to use.\
            \ [More information.](https://developers.docusign.com/esign-rest-api/guides/standards-based-signatures)"
          items:
            $ref: '#/components/schemas/recipientSignatureProvider'
        recipientSuppliesTabs:
          type: string
          description: "When set to **true**, specifies that the recipient creates\
            \ the tabs."
        requireIdLookup:
          type: string
          description: "When set to **true**, the recipient is required to use the\
            \ specified ID check method (including Phone and SMS authentication) to\
            \ validate their identity. "
        requireSignerCertificate:
          type: string
          description: "By default, DocuSign signers create electronic signatures.\
            \ This field can be used to require the signer to use a SAFE-BioPharma\
            \ digital certificate for signing.\n\nThis parameter should only be used\
            \ to select a SAFE-BioPharma certificate. New integrations should use\
            \ the `recipientSignatureProviders` parameter for other types of digital\
            \ certificates. \n\nSet this parameter to `safe` to use a SAFE-BioPharma\
            \ certificate.\n\nThe signer must be enrolled in the SAFE program to sign\
            \ with a SAFE certificate."
        requireSignOnPaper:
          type: string
          description: "When set to **true**, the signer must print, sign, and upload\
            \ or fax the signed documents to DocuSign."
        roleName:
          type: string
          description: Optional element. Specifies the role name associated with the
            recipient.<br/><br/>This is required when working with template recipients.
        routingOrder:
          type: string
          description: 'Specifies the routing order of the recipient in the envelope. '
        samlAuthentication:
          $ref: '#/components/schemas/recipientSAMLAuthentication'
        sentDateTime:
          type: string
          description: The UTC DateTime when the envelope was sent. Read only.
        signatureInfo:
          $ref: '#/components/schemas/recipientSignatureInformation'
        signedDateTime:
          type: string
          description: Reserved for DocuSign.
        signInEachLocation:
          type: string
          description: "When set to **true** and the feature is enabled in the sender's\
            \ account, the signing recipient is required to draw signatures and initials\
            \ at each signature/initial tab (instead of adopting a signature/initial\
            \ style or only drawing a signature/initial once)."
        signingGroupId:
          type: string
          description: "Optional. The ID of the [signing group](https://support.docusign.com/en/guides/ndse-user-guide-signing-groups).\n\
            \n**Note**: When you send an envelope to a signing group, anyone in the\
            \ group can open it and sign it with their own signature. For this reason,\
            \ we recommend that you do not include non-signer recipients (such as\
            \ carbon copy recipients) in the same signing group as signer recipients.\
            \ However, you could create a second signing group for the non-signer\
            \ recipients and change the default action of Needs to Sign to a different\
            \ value, such as Receives a Copy. "
        signingGroupName:
          type: string
          description: "The display name for the signing group. \n\nMaximum Length:\
            \ 100 characters. "
        signingGroupUsers:
          type: array
          description: A complex type that contains information about users in the
            signing group.
          items:
            $ref: '#/components/schemas/userInfo'
        smsAuthentication:
          $ref: '#/components/schemas/recipientSMSAuthentication'
        socialAuthentications:
          type: array
          description: ' Lists the social ID type that can be used for recipient authentication.'
          items:
            $ref: '#/components/schemas/socialAuthentication'
        status:
          type: string
          description: |-
            Specifies the status of the recipient at the time of the request. Read only. Possible values are:

            - `created`: The recipient is in a draft state. This is only associated with draft envelopes (envelopes with a created status).
            - `sent`: The recipient has been sent an email notification that it is their turn to sign an envelope.
            - `delivered`: The recipient has viewed the documents in an envelope through the DocuSign signing web site. This is not an email delivery of the documents in an envelope.
            - `signed`; The recipient has completed (performed all required interactions, such as signing or entering data) all required tags in an envelope. This is a temporary state during processing, after which the recipient is automatically moved to completed.
            - `declined`: The recipient declined to sign the documents in the envelope.
            - `completed`: The recipient has completed their actions (signing or other required actions if not a signer) for an envelope.
            - `faxpending`: The recipient has finished signing and the system is waiting a fax attachment by the recipient before completing their signing step.
            - `autoresponded`: The recipient's email system auto-responded to the email from DocuSign. This status is used by the DocuSign webapp (also known as the DocuSign console) to inform senders about the auto-responded email.
        tabs:
          $ref: '#/components/schemas/EnvelopeRecipientTabs'
        templateLocked:
          type: string
          description: "When set to **true**, the sender cannot change any attributes\
            \ of the recipient. Used only when working with template recipients. "
        templateRequired:
          type: string
          description: "When set to **true**, the sender may not remove the recipient.\
            \ Used only when working with template recipients."
        totalTabCount:
          type: string
          description: The total number of tabs in the documents. Read only.
        userId:
          type: string
          description: "The user ID of the user being accessed. Generally this is\
            \ the user ID of the authenticated user, but if the authenticated user\
            \ is an Admin on the account, this may be another user the Admin user\
            \ is accessing. **Note**: For the [GET /v2/accounts/{accountId}/envelopes](https://developers.docusign.com/esign-rest-api/reference/Envelopes/Envelopes/listStatusChanges/#envelopesInformation)\
            \ method, the `user_id` query parameter is not implemented and should\
            \ not be used."
      description: "A complex type containing information about a signer recipient.\
        \ A signer is a recipient who must take action on a document, such as sign,\
        \ initial, date, or add data to form fields on a document."
      x-ds-definition-name: signer
      x-ms-summary: "A complex type containing information about a signer recipient.\
        \ A signer is a recipient who must take action on a document, such as sign,\
        \ initial, date, or add data to form fields on a document."
    signerAttachment:
      type: object
      properties:
        anchorCaseSensitive:
          type: string
          description: |-
            Reserved for DocuSign.
            <!--
            When set to **true**, the anchor string does not consider case when matching strings in the document. The default value is **true**.
            -->
        anchorHorizontalAlignment:
          type: string
          description: |
            Reserved for DocuSign.
            <!--
            Specifies the alignment of anchor tabs with anchor strings. Possible values are **left** or **right**. The default value is **left**.
            -->
        anchorIgnoreIfNotPresent:
          type: string
          description: "When set to **true**, this tab is ignored if anchorString\
            \ is not found in the document."
        anchorMatchWholeWord:
          type: string
          description: |
            Reserved for DocuSign.
            <!--
            When set to **true**, the anchor string in this tab matches whole words only (strings embedded in other strings are ignored.) The default value is **true**.
            -->
        anchorString:
          type: string
          description: Specifies the anchor string.
        anchorUnits:
          type: string
          description: |
            Specifies units of the
            `anchorXOffset` and
            `anchorYOffset`.
            Valid units are:

            - `pixels`
            - `inches`
            - `mms`
            - `cms`
        anchorXOffset:
          type: string
          description: |
            Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.
        anchorYOffset:
          type: string
          description: |
            Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.
        conditionalParentLabel:
          type: string
          description: For conditional fields this is the TabLabel of the parent tab
            that controls this tab's visibility.
        conditionalParentValue:
          type: string
          description: |
            For conditional fields, this is the value of the parent tab that controls the tab's visibility.

            If the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use "on" as the value to show that the parent tab is active.
        customTabId:
          type: string
          description: "The DocuSign generated custom tab ID for the custom tab to\
            \ be applied. This can only be used when adding new tabs for a recipient.\
            \ When used, the new tab inherits all the custom tab properties."
        documentId:
          type: string
          description: Specifies the document ID number that the tab is placed on.
            This must refer to an existing Document's ID attribute.
        errorDetails:
          $ref: '#/components/schemas/errorDetails'
        mergeField:
          $ref: '#/components/schemas/mergeField'
        name:
          type: string
          description: ""
        optional:
          type: string
          description: ""
        pageNumber:
          type: string
          description: |-
            Specifies the page number on which the tab is located.
            Must be 1 for supplemental documents.
        recipientId:
          type: string
          description: Unique for the recipient. It is used by the tab element to
            indicate which recipient is to sign the Document.
        scaleValue:
          type: number
          description: ""
          format: float
        status:
          type: string
          description: |
            Tab status
            <!-- todo -->
        tabGroupLabels:
          type: array
          description: ""
          items:
            type: string
        tabId:
          type: string
          description: The unique identifier for the tab.
        tabLabel:
          type: string
          description: |
            The label string associated with the tab.
            The string may be the empty string.
            If no value is provided, the tab type is used as the value.

            Maximum of 500 characters.
        tabOrder:
          type: string
          description: |-
            A positive integer that sets the order the tab is navigated to during signing.

            Tabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.
        templateLocked:
          type: string
          description: "When set to **true**, the sender cannot change any attributes\
            \ of the recipient. Used only when working with template recipients. "
        templateRequired:
          type: string
          description: "When set to **true**, the sender may not remove the recipient.\
            \ Used only when working with template recipients."
        tooltip:
          type: string
          description: ""
        xPosition:
          type: string
          description: |
            This property indicates the horizontal offset of the object on the page.
            DocuSign uses 72 DPI when determining position.
            Required. May be zero.

            To improve the tab's position on the document,
            DocuSign recommends
            adjusting `xPosition`
            and `yPosition`
            coordinates
            by (+0, -24)
        yPosition:
          type: string
          description: |
            This property indicates the vertical offset of the object on the page.
            DocuSign uses 72 DPI when determining position.
            Required. May be zero.

            To improve the tab's position on the document,
            DocuSign recommends
            adjusting `xPosition`
            and `yPosition`
            coordinates
            by (+0, -24)
      description: |
        A tab that allows the recipient to attach supporting
        documents to an envelope.
      x-ds-definition-name: signerAttachment
      x-ms-summary: |
        A tab that allows the recipient to attach supporting
        documents to an envelope.
    signerEmailNotifications:
      type: object
      properties:
        agentNotification:
          type: string
          description: "When set to **true**, the user receives agent notification\
            \ emails."
        carbonCopyNotification:
          type: string
          description: "When set to **true**, the user receives notifications of carbon\
            \ copy deliveries."
        certifiedDeliveryNotification:
          type: string
          description: "When set to **true**, the user receives notifications of certified\
            \ deliveries."
        commentsOnlyPrivateAndMention:
          type: string
          description: ""
        commentsReceiveAll:
          type: string
          description: ""
        documentMarkupActivation:
          type: string
          description: "When set to **true**, the user receives notification that\
            \ document markup has been activated."
        envelopeActivation:
          type: string
          description: "When set to **true**, the user receives notification that\
            \ the envelope has been activated."
        envelopeComplete:
          type: string
          description: "When set to **true**, the user receives notification that\
            \ the envelope has been completed."
        envelopeCorrected:
          type: string
          description: "When set to **true**, the user receives notification that\
            \ the envelope has been corrected."
        envelopeDeclined:
          type: string
          description: "When set to **true**, the user receives notification that\
            \ the envelope has been declined."
        envelopeVoided:
          type: string
          description: "When set to **true**, the user receives notification that\
            \ the envelope has been voided."
        faxReceived:
          type: string
          description: 'Reserved:'
        offlineSigningFailed:
          type: string
          description: "When set to **true**, the user receives notification if the\
            \ offline signing failed."
        purgeDocuments:
          type: string
          description: "When set to **true**, the user receives notification of document\
            \ purges."
        reassignedSigner:
          type: string
          description: "When set to **true**, the user receives notification that\
            \ the envelope has been reassigned."
        whenSigningGroupMember:
          type: string
          description: ""
      description: "An array of email notifications that specifies the email the user\
        \ receives when they are a sender. When the specific email notification is\
        \ set to true, the user receives those types of email notifications from DocuSign.\
        \ The user inherits the default account sender email notification settings\
        \ when the user is created."
      x-ds-definition-name: signerEmailNotifications
      x-ms-summary: "An array of email notifications that specifies the email the\
        \ user receives when they are a sender. When the specific email notification\
        \ is set to true, the user receives those types of email notifications from\
        \ DocuSign. The user inherits the default account sender email notification\
        \ settings when the user is created."
    signHere:
      type: object
      properties:
        anchorCaseSensitive:
          type: string
          description: |-
            Reserved for DocuSign.
            <!--
            When set to **true**, the anchor string does not consider case when matching strings in the document. The default value is **true**.
            -->
        anchorHorizontalAlignment:
          type: string
          description: |
            Reserved for DocuSign.
            <!--
            Specifies the alignment of anchor tabs with anchor strings. Possible values are **left** or **right**. The default value is **left**.
            -->
        anchorIgnoreIfNotPresent:
          type: string
          description: "When set to **true**, this tab is ignored if anchorString\
            \ is not found in the document."
        anchorMatchWholeWord:
          type: string
          description: |
            Reserved for DocuSign.
            <!--
            When set to **true**, the anchor string in this tab matches whole words only (strings embedded in other strings are ignored.) The default value is **true**.
            -->
        anchorString:
          type: string
          description: Specifies the anchor string.
        anchorUnits:
          type: string
          description: |
            Specifies units of the
            `anchorXOffset` and
            `anchorYOffset`.
            Valid units are:

            - `pixels`
            - `inches`
            - `mms`
            - `cms`
        anchorXOffset:
          type: string
          description: |
            Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.
        anchorYOffset:
          type: string
          description: |
            Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.
        conditionalParentLabel:
          type: string
          description: For conditional fields this is the TabLabel of the parent tab
            that controls this tab's visibility.
        conditionalParentValue:
          type: string
          description: |
            For conditional fields, this is the value of the parent tab that controls the tab's visibility.

            If the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use "on" as the value to show that the parent tab is active.
        customTabId:
          type: string
          description: "The DocuSign generated custom tab ID for the custom tab to\
            \ be applied. This can only be used when adding new tabs for a recipient.\
            \ When used, the new tab inherits all the custom tab properties."
        documentId:
          type: string
          description: Specifies the document ID number that the tab is placed on.
            This must refer to an existing Document's ID attribute.
        errorDetails:
          $ref: '#/components/schemas/errorDetails'
        mergeField:
          $ref: '#/components/schemas/mergeField'
        name:
          type: string
          description: Specifies the tool tip text for the tab.
        optional:
          type: string
          description: ""
        pageNumber:
          type: string
          description: |
            Specifies the page number on which the tab is located.
            Must be 1 for supplemental documents.
        recipientId:
          type: string
          description: Unique for the recipient. It is used by the tab element to
            indicate which recipient is to sign the Document.
        scaleValue:
          type: number
          description: ""
          format: float
        stampType:
          type: string
          description: ""
        stampTypeMetadata:
          $ref: '#/components/schemas/propertyMetadata'
        status:
          type: string
          description: |
            Tab status
            <!-- todo -->
        tabGroupLabels:
          type: array
          description: ""
          items:
            type: string
        tabId:
          type: string
          description: The unique identifier for the tab.
        tabLabel:
          type: string
          description: |
            The label string associated with the tab.
            The string may be the empty string.
            If no value is provided, the tab type is used as the value.

            Maximum of 500 characters.
        tabOrder:
          type: string
          description: |-
            A positive integer that sets the order the tab is navigated to during signing.

            Tabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.
        templateLocked:
          type: string
          description: "When set to **true**, the sender cannot change any attributes\
            \ of the recipient. Used only when working with template recipients. "
        templateRequired:
          type: string
          description: "When set to **true**, the sender may not remove the recipient.\
            \ Used only when working with template recipients."
        tooltip:
          type: string
          description: ""
        xPosition:
          type: string
          description: |
            This property indicates the horizontal offset of the object on the page.
            DocuSign uses 72 DPI when determining position.
            Required. May be zero.

            To improve the tab's position on the document,
            DocuSign recommends
            adjusting `xPosition`
            and `yPosition`
            coordinates
            by (+2, -27)
        yPosition:
          type: string
          description: |
            This property indicates the vertical offset of the object on the page.
            DocuSign uses 72 DPI when determining position.
            Required. May be zero.

            To improve the tab's position on the document,
            DocuSign recommends
            adjusting `xPosition`
            and `yPosition`
            coordinates
            by (+2, -27)
      description: |
        A tab that allows the recipient to sign a document. May be
        optional.
      x-ds-definition-name: signHere
      x-ms-summary: |
        A tab that allows the recipient to sign a document. May be
        optional.
    signingGroup:
      type: object
      properties:
        created:
          type: string
          description: The UTC DateTime when the workspace user authorization was
            created.
        createdBy:
          type: string
          description: ""
        errorDetails:
          $ref: '#/components/schemas/errorDetails'
        groupEmail:
          type: string
          description: ""
        groupName:
          type: string
          description: The name of the group. The search_text provided in the call
            automatically performs a wild card search on group_name.
        groupType:
          type: string
          description: The group type.
        modified:
          type: string
          description: ""
        modifiedBy:
          type: string
          description: ""
        signingGroupId:
          type: string
          description: "Optional. The ID of the [signing group](https://support.docusign.com/en/guides/ndse-user-guide-signing-groups).\n\
            \n**Note**: When you send an envelope to a signing group, anyone in the\
            \ group can open it and sign it with their own signature. For this reason,\
            \ we recommend that you do not include non-signer recipients (such as\
            \ carbon copy recipients) in the same signing group as signer recipients.\
            \ However, you could create a second signing group for the non-signer\
            \ recipients and change the default action of Needs to Sign to a different\
            \ value, such as Receives a Copy. "
        users:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/signingGroupUser'
      description: ""
      x-ds-definition-name: signingGroup
      x-ms-summary: ""
    signingGroupInformation:
      type: object
      properties:
        groups:
          type: array
          description: A collection group objects containing information about the
            groups returned.
          items:
            $ref: '#/components/schemas/signingGroup'
      description: ""
      x-ds-definition-name: signingGroupInformation
      x-ms-summary: ""
    signingGroupUser:
      type: object
      properties:
        email:
          type: string
          description: ""
        errorDetails:
          $ref: '#/components/schemas/errorDetails'
        userName:
          type: string
          description: "The name of the group member. \n\nMaximum Length: 100 characters. "
      description: ""
      x-ds-definition-name: signingGroupUser
      x-ms-summary: ""
    signingGroupUsers:
      type: object
      properties:
        users:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/signingGroupUser'
      description: ""
      x-ds-definition-name: signingGroupUsers
      x-ms-summary: ""
    smartSection:
      type: object
      properties:
        anchorCaseSensitive:
          type: string
          description: |-
            Reserved for DocuSign.
            <!--
            When set to **true**, the anchor string does not consider case when matching strings in the document. The default value is **true**.
            -->
        anchorHorizontalAlignment:
          type: string
          description: |
            Reserved for DocuSign.
            <!--
            Specifies the alignment of anchor tabs with anchor strings. Possible values are **left** or **right**. The default value is **left**.
            -->
        anchorIgnoreIfNotPresent:
          type: string
          description: "When set to **true**, this tab is ignored if anchorString\
            \ is not found in the document."
        anchorMatchWholeWord:
          type: string
          description: |
            Reserved for DocuSign.
            <!--
            When set to **true**, the anchor string in this tab matches whole words only (strings embedded in other strings are ignored.) The default value is **true**.
            -->
        anchorString:
          type: string
          description: Specifies the anchor string.
        anchorUnits:
          type: string
          description: |
            Specifies units of the
            `anchorXOffset` and
            `anchorYOffset`.
            Valid units are:

            - `pixels`
            - `inches`
            - `mms`
            - `cms`
        anchorXOffset:
          type: string
          description: |
            Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.
        anchorYOffset:
          type: string
          description: |
            Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.
        caseSensitive:
          type: boolean
          description: ""
        conditionalParentLabel:
          type: string
          description: For conditional fields this is the TabLabel of the parent tab
            that controls this tab's visibility.
        conditionalParentValue:
          type: string
          description: |
            For conditional fields, this is the value of the parent tab that controls the tab's visibility.

            If the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use "on" as the value to show that the parent tab is active.
        customTabId:
          type: string
          description: ""
        displaySettings:
          $ref: '#/components/schemas/smartSectionDisplaySettings'
        documentId:
          type: string
          description: The ID of the document being accessed.
        endAnchor:
          type: string
          description: ""
        endPosition:
          $ref: '#/components/schemas/smartSectionAnchorPosition'
        errorDetails:
          $ref: '#/components/schemas/errorDetails'
        mergeField:
          $ref: '#/components/schemas/mergeField'
        pageNumber:
          type: string
          description: The page number being accessed.
        recipientId:
          type: string
          description: "A local reference that senders use to map recipients to other\
            \ objects, such as specific document tabs. Within an envelope, each `recipientId`\
            \ must be unique, but there is no uniqueness requirement across envelopes.\
            \ For example, many envelopes assign the first recipient a `recipientId`\
            \ of `1`."
        removeEndAnchor:
          type: boolean
          description: ""
        removeStartAnchor:
          type: boolean
          description: ""
        startAnchor:
          type: string
          description: ""
        startPosition:
          $ref: '#/components/schemas/smartSectionAnchorPosition'
        status:
          type: string
          description: Item status. <!-- TODO -->
        tabGroupLabels:
          type: array
          description: ""
          items:
            type: string
        tabId:
          type: string
          description: The unique identifier for the tab.
        tabOrder:
          type: string
          description: |-
            A positive integer that sets the order the tab is navigated to during signing.

            Tabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.
        templateLocked:
          type: string
          description: "When set to **true**, the sender cannot change any attributes\
            \ of the recipient. Used only when working with template recipients. "
        templateRequired:
          type: string
          description: "When set to **true**, the sender may not remove the recipient.\
            \ Used only when working with template recipients."
        tooltip:
          type: string
          description: ""
        xPosition:
          type: string
          description: |
            This property indicates the horizontal offset of the object on the page.
            DocuSign uses 72 DPI when determining position.
            Required. May be zero.
        yPosition:
          type: string
          description: |
            This property indicates the vertical offset of the object on the page.
            DocuSign uses 72 DPI when determining position.
            Required. May be zero.
      description: ""
      x-ds-definition-name: smartSection
      x-ms-summary: ""
    smartSectionAnchorPosition:
      type: object
      properties:
        pageNumber:
          type: integer
          description: The page number being accessed.
          format: int32
        xPosition:
          type: number
          description: |
            This property indicates the horizontal offset of the object on the page.
            DocuSign uses 72 DPI when determining position.
            Required. May be zero.
          format: double
        yPosition:
          type: number
          description: |
            This property indicates the vertical offset of the object on the page.
            DocuSign uses 72 DPI when determining position.
            Required. May be zero.
          format: double
      description: ""
      x-ds-definition-name: smartSectionAnchorPosition
      x-ms-summary: ""
    smartSectionCollapsibleDisplaySettings:
      type: object
      properties:
        arrowClosed:
          type: string
          description: ""
        arrowColor:
          type: string
          description: ""
        arrowLocation:
          type: string
          description: ""
        arrowOpen:
          type: string
          description: ""
        arrowSize:
          type: string
          description: ""
        arrowStyle:
          type: string
          description: ""
        containerStyle:
          type: string
          description: ""
        labelStyle:
          type: string
          description: ""
        onlyArrowIsClickable:
          type: boolean
          description: ""
        outerLabelAndArrowStyle:
          type: string
          description: ""
      description: ""
      x-ds-definition-name: smartSectionCollapsibleDisplaySettings
      x-ms-summary: ""
    smartSectionDisplaySettings:
      type: object
      properties:
        cellStyle:
          type: string
          description: ""
        collapsibleSettings:
          $ref: '#/components/schemas/smartSectionCollapsibleDisplaySettings'
        display:
          type: string
          description: "This string sets the display and behavior properties of\n\
            the document during signing. The possible values are:\n\n* `modal`<br>\n\
            \  The document is shown as a supplement action strip\n  and can be viewed,\
            \ downloaded, or printed in a modal window.\n  This is the recommended\
            \ value for supplemental documents. \n\n* `download`<br>\n  The document\
            \ is shown as a supplement action strip\n  and can be viewed, downloaded,\
            \ or printed in a new browser window. \n\n* `inline`<br>\n  The document\
            \ is shown in the normal signing window.\n  This value is not used with\
            \ supplemental documents,\n  but is the default value for all other documents.\n"
        displayLabel:
          type: string
          description: ""
        displayOrder:
          type: integer
          description: ""
          format: int32
        displayPageNumber:
          type: integer
          description: ""
          format: int32
        hideLabelWhenOpened:
          type: boolean
          description: ""
        inlineOuterStyle:
          type: string
          description: ""
        labelWhenOpened:
          type: string
          description: ""
        preLabel:
          type: string
          description: ""
        scrollToTopWhenOpened:
          type: boolean
          description: ""
        tableStyle:
          type: string
          description: ""
      description: ""
      x-ds-definition-name: smartSectionDisplaySettings
      x-ms-summary: ""
    socialAccountInformation:
      type: object
      properties:
        email:
          type: string
          description: ""
        errorDetails:
          $ref: '#/components/schemas/errorDetails'
        provider:
          type: string
          description: "The social account provider (Facebook, Yahoo, etc.)"
        socialId:
          type: string
          description: The ID provided by the Socal Account.
        userName:
          type: string
          description: ""
      description: ""
      x-ds-definition-name: socialAccountInformation
      x-ms-summary: ""
    socialAuthentication:
      type: object
      properties:
        authentication:
          type: string
          description: "Reserved: TBD"
      description: ""
      x-ds-definition-name: socialAuthentication
      x-ms-summary: ""
    ssn:
      type: object
      properties:
        anchorCaseSensitive:
          type: string
          description: |-
            Reserved for DocuSign.
            <!--
            When set to **true**, the anchor string does not consider case when matching strings in the document. The default value is **true**.
            -->
        anchorHorizontalAlignment:
          type: string
          description: |
            Reserved for DocuSign.
            <!--
            Specifies the alignment of anchor tabs with anchor strings. Possible values are **left** or **right**. The default value is **left**.
            -->
        anchorIgnoreIfNotPresent:
          type: string
          description: "When set to **true**, this tab is ignored if anchorString\
            \ is not found in the document."
        anchorMatchWholeWord:
          type: string
          description: |
            Reserved for DocuSign.
            <!--
            When set to **true**, the anchor string in this tab matches whole words only (strings embedded in other strings are ignored.) The default value is **true**.
            -->
        anchorString:
          type: string
          description: Specifies the anchor string.
        anchorUnits:
          type: string
          description: |
            Specifies units of the
            `anchorXOffset` and
            `anchorYOffset`.
            Valid units are:

            - `pixels`
            - `inches`
            - `mms`
            - `cms`
        anchorXOffset:
          type: string
          description: |
            Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.
        anchorYOffset:
          type: string
          description: |
            Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.
        bold:
          type: string
          description: "When set to **true**, the information in the tab is bold."
        concealValueOnDocument:
          type: string
          description: |-
            When set to **true**, the field appears normally while the recipient is adding or modifying the information in the field, but the data is not visible (the characters are hidden by asterisks) to any other signer or the sender.

            When an envelope is completed the information is available to the sender through the Form Data link in the DocuSign Console.

            This setting applies only to text boxes and does not affect list boxes, radio buttons, or check boxes.
        conditionalParentLabel:
          type: string
          description: For conditional fields this is the TabLabel of the parent tab
            that controls this tab's visibility.
        conditionalParentValue:
          type: string
          description: |
            For conditional fields, this is the value of the parent tab that controls the tab's visibility.

            If the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use "on" as the value to show that the parent tab is active.
        customTabId:
          type: string
          description: "The DocuSign generated custom tab ID for the custom tab to\
            \ be applied. This can only be used when adding new tabs for a recipient.\
            \ When used, the new tab inherits all the custom tab properties."
        disableAutoSize:
          type: string
          description: "When set to **true**, disables the auto sizing of single line\
            \ text boxes in the signing screen when the signer enters data. If disabled\
            \ users will only be able enter as much data as the text box can hold.\
            \ By default this is false. This property only affects single line text\
            \ boxes."
        documentId:
          type: string
          description: Specifies the document ID number that the tab is placed on.
            This must refer to an existing Document's ID attribute.
        errorDetails:
          $ref: '#/components/schemas/errorDetails'
        font:
          type: string
          description: |
            The font to be used for the tab value. Supported Fonts include:

            - Default
            - Arial
            - ArialNarrow
            - Calibri
            - CourierNew
            - Garamond
            - Georgia
            - Helvetica
            - LucidaConsole
            - MSGothic
            - MSMincho
            - OCR-A
            - Tahoma
            - TimesNewRoman
            - Trebuchet
            - Verdana
        fontColor:
          type: string
          description: "The font color used for the information in the tab. Possible\
            \ values are: \n\n- Black\n- BrightBlue\n- BrightRed\n- DarkGreen\n- DarkRed\n\
            - Gold\n- Green\n- NavyBlue\n- Purple\n- White\n"
        fontSize:
          type: string
          description: |-
            The font size used for the information in the tab. Possible values are:

            - Size7
            - Size8
            - Size9
            - Size10
            - Size11
            - Size12
            - Size14
            - Size16
            - Size18
            - Size20
            - Size22
            - Size24
            - Size26
            - Size28
            - Size36
            - Size48
            - Size72
        italic:
          type: string
          description: "When set to **true**, the information in the tab is italic."
        locked:
          type: string
          description: "When set to **true**, the signer cannot change the data of\
            \ the custom tab."
        maxLength:
          type: integer
          description: An optional value that describes the maximum length of the
            property when the property is a string.
          format: int32
        mergeField:
          $ref: '#/components/schemas/mergeField'
        name:
          type: string
          description: Specifies the tool tip text for the tab.
        originalValue:
          type: string
          description: 'The initial value of the tab when it was sent to the recipient. '
        pageNumber:
          type: string
          description: |-
            Specifies the page number on which the tab is located.
            Must be 1 for supplemental documents.
        recipientId:
          type: string
          description: Unique for the recipient. It is used by the tab element to
            indicate which recipient is to sign the Document.
        requireAll:
          type: string
          description: "When set to **true** and shared is true, information must\
            \ be entered in this field to complete the envelope. "
        required:
          type: string
          description: "When set to **true**, the signer is required to fill out this\
            \ tab"
        requireInitialOnSharedChange:
          type: string
          description: "Optional element for field markup. When set to **true**, the\
            \ signer is required to initial when they modify a shared field."
        senderRequired:
          type: string
          description: "When set to **true**, the sender must populate the tab before\
            \ an envelope can be sent using the template. \n\nThis value tab can only\
            \ be changed by modifying (PUT) the template. \n\nTabs with a `senderRequired`\
            \ value of true cannot be deleted from an envelope."
        shared:
          type: string
          description: "When set to **true**, this custom tab is shared."
        status:
          type: string
          description: |
            Tab status
            <!-- todo -->
        tabGroupLabels:
          type: array
          description: ""
          items:
            type: string
        tabId:
          type: string
          description: The unique identifier for the tab.
        tabLabel:
          type: string
          description: |
            The label string associated with the tab.
            The string may be the empty string.
            If no value is provided, the tab type is used as the value.

            Maximum of 500 characters.
        tabOrder:
          type: string
          description: |-
            A positive integer that sets the order the tab is navigated to during signing.

            Tabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.
        templateLocked:
          type: string
          description: "When set to **true**, the sender cannot change any attributes\
            \ of the recipient. Used only when working with template recipients. "
        templateRequired:
          type: string
          description: "When set to **true**, the sender may not remove the recipient.\
            \ Used only when working with template recipients."
        tooltip:
          type: string
          description: ""
        underline:
          type: string
          description: "When set to **true**, the information in the tab is underlined."
        validationMessage:
          type: string
          description: The message displayed if the custom tab fails input validation
            (either custom of embedded).
        validationPattern:
          type: string
          description: A regular expressionn used to validate input for the tab.
        value:
          type: string
          description: 'Specifies the value of the tab. '
        width:
          type: integer
          description: Width of the tab in pixels.
          format: int32
        xPosition:
          type: string
          description: |
            This property indicates the horizontal offset of the object on the page.
            DocuSign uses 72 DPI when determining position.
            Required. May be zero.

            To improve the tab's position on the document,
            DocuSign recommends
            adjusting `xPosition`
            and `yPosition`
            coordinates
            by (-3, -2)
        yPosition:
          type: string
          description: |
            This property indicates the vertical offset of the object on the page.
            DocuSign uses 72 DPI when determining position.
            Required. May be zero.

            To improve the tab's position on the document,
            DocuSign recommends
            adjusting `xPosition`
            and `yPosition`
            coordinates
            by (-3, -2)
      description: |
        A one-line field that allows the recipient to enter a Social
        Security Number. The SSN can be typed with or without
        dashes. It uses the same parameters as a Text tab, with the
        validation message and pattern set for SSN information.
      x-ds-definition-name: ssn
      x-ms-summary: |
        A one-line field that allows the recipient to enter a Social
        Security Number. The SSN can be typed with or without
        dashes. It uses the same parameters as a Text tab, with the
        validation message and pattern set for SSN information.
    ssn4InformationInput:
      type: object
      properties:
        displayLevelCode:
          type: string
          description: "Specifies the display level for the recipient. \nValid values\
            \ are: \n\n* ReadOnly\n* Editable\n* DoNotDisplay"
        receiveInResponse:
          type: string
          description: "When set to **true**, the information needs to be returned\
            \ in the response."
        ssn4:
          type: string
          description: The last four digits of the recipient's Social Security Number
            (SSN).
      description: ""
      x-ds-definition-name: ssn4InformationInput
      x-ms-summary: ""
    ssn9InformationInput:
      type: object
      properties:
        displayLevelCode:
          type: string
          description: "Specifies the display level for the recipient. \nValid values\
            \ are: \n\n* ReadOnly\n* Editable\n* DoNotDisplay"
        ssn9:
          type: string
          description: ' The recipient''s Social Security Number(SSN).'
      description: ""
      x-ds-definition-name: ssn9InformationInput
      x-ms-summary: ""
    supportedLanguages:
      type: object
      properties:
        languages:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/nameValue'
      description: ""
      x-ds-definition-name: supportedLanguages
      x-ms-summary: ""
    tabAccountSettings:
      type: object
      properties:
        allowTabOrder:
          type: string
          description: ""
        allowTabOrderMetadata:
          $ref: '#/components/schemas/settingsMetadata'
        approveDeclineTabsEnabled:
          type: string
          description: ""
        approveDeclineTabsMetadata:
          $ref: '#/components/schemas/settingsMetadata'
        calculatedFieldsEnabled:
          type: string
          description: ""
        calculatedFieldsMetadata:
          $ref: '#/components/schemas/settingsMetadata'
        checkboxTabsEnabled:
          type: string
          description: ""
        checkboxTabsMetadata:
          $ref: '#/components/schemas/settingsMetadata'
        dataFieldRegexEnabled:
          type: string
          description: ""
        dataFieldRegexMetadata:
          $ref: '#/components/schemas/settingsMetadata'
        dataFieldSizeEnabled:
          type: string
          description: ""
        dataFieldSizeMetadata:
          $ref: '#/components/schemas/settingsMetadata'
        firstLastEmailTabsEnabled:
          type: string
          description: ""
        firstLastEmailTabsMetadata:
          $ref: '#/components/schemas/settingsMetadata'
        listTabsEnabled:
          type: string
          description: ""
        listTabsMetadata:
          $ref: '#/components/schemas/settingsMetadata'
        noteTabsEnabled:
          type: string
          description: ""
        noteTabsMetadata:
          $ref: '#/components/schemas/settingsMetadata'
        radioTabsEnabled:
          type: string
          description: ""
        radioTabsMetadata:
          $ref: '#/components/schemas/settingsMetadata'
        savingCustomTabsEnabled:
          type: string
          description: ""
        savingCustomTabsMetadata:
          $ref: '#/components/schemas/settingsMetadata'
        senderToChangeTabAssignmentsEnabled:
          type: string
          description: ""
        senderToChangeTabAssignmentsMetadata:
          $ref: '#/components/schemas/settingsMetadata'
        sharedCustomTabsEnabled:
          type: string
          description: ""
        sharedCustomTabsMetadata:
          $ref: '#/components/schemas/settingsMetadata'
        tabDataLabelEnabled:
          type: string
          description: ""
        tabDataLabelMetadata:
          $ref: '#/components/schemas/settingsMetadata'
        tabLocationEnabled:
          type: string
          description: ""
        tabLocationMetadata:
          $ref: '#/components/schemas/settingsMetadata'
        tabLockingEnabled:
          type: string
          description: ""
        tabLockingMetadata:
          $ref: '#/components/schemas/settingsMetadata'
        tabScaleEnabled:
          type: string
          description: ""
        tabScaleMetadata:
          $ref: '#/components/schemas/settingsMetadata'
        tabTextFormattingEnabled:
          type: string
          description: ""
        tabTextFormattingMetadata:
          $ref: '#/components/schemas/settingsMetadata'
        textTabsEnabled:
          type: string
          description: ""
        textTabsMetadata:
          $ref: '#/components/schemas/settingsMetadata'
      description: ""
      x-ds-definition-name: tabAccountSettings
      x-ms-summary: ""
    tabMetadata:
      type: object
      properties:
        anchor:
          type: string
          description: An optional string that is used to auto-match tabs to strings
            located in the documents of an envelope.
        anchorCaseSensitive:
          type: string
          description: |-
            Reserved for DocuSign.
            <!--
            When set to **true**, the anchor string does not consider case when matching strings in the document. The default value is **true**.
            -->
        anchorHorizontalAlignment:
          type: string
          description: |
            Reserved for DocuSign.
            <!--
            Specifies the alignment of anchor tabs with anchor strings. Possible values are **left** or **right**. The default value is **left**.
            -->
        anchorIgnoreIfNotPresent:
          type: string
          description: "When set to **true**, this tab is ignored if anchorString\
            \ is not found in the document."
        anchorMatchWholeWord:
          type: string
          description: |
            Reserved for DocuSign.
            <!--
            When set to **true**, the anchor string in this tab matches whole words only (strings embedded in other strings are ignored.) The default value is **true**.
            -->
        anchorUnits:
          type: string
          description: |
            Specifies units of the
            `anchorXOffset` and
            `anchorYOffset`.
            Valid units are:

            - `pixels`
            - `inches`
            - `mms`
            - `cms`
        anchorXOffset:
          type: string
          description: |
            Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.
        anchorYOffset:
          type: string
          description: |
            Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.
        bold:
          type: string
          description: "When set to **true**, the information in the tab is bold."
        collaborative:
          type: string
          description: ""
        concealValueOnDocument:
          type: string
          description: |-
            When set to **true**, the field appears normally while the recipient is adding or modifying the information in the field, but the data is not visible (the characters are hidden by asterisks) to any other signer or the sender.

            When an envelope is completed the information is available to the sender through the Form Data link in the DocuSign Console.

            This setting applies only to text boxes and does not affect list boxes, radio buttons, or check boxes.
        createdByDisplayName:
          type: string
          description: The user name of the DocuSign user who created this object.
        createdByUserId:
          type: string
          description: The userId of the DocuSign user who created this object.
        customTabId:
          type: string
          description: ""
        disableAutoSize:
          type: string
          description: "When set to **true**, disables the auto sizing of single line\
            \ text boxes in the signing screen when the signer enters data. If disabled\
            \ users will only be able enter as much data as the text box can hold.\
            \ By default this is false. This property only affects single line text\
            \ boxes."
        editable:
          type: string
          description: "When set to **true**, the custom tab is editable. Otherwise\
            \ the custom tab cannot be modified."
        font:
          type: string
          description: |
            The font to be used for the tab value. Supported Fonts include:

            - Default
            - Arial
            - ArialNarrow
            - Calibri
            - CourierNew
            - Garamond
            - Georgia
            - Helvetica
            - LucidaConsole
            - MSGothic
            - MSMincho
            - OCR-A
            - Tahoma
            - TimesNewRoman
            - Trebuchet
            - Verdana
        fontColor:
          type: string
          description: "The font color used for the information in the tab. Possible\
            \ values are: \n\n- Black\n- BrightBlue\n- BrightRed\n- DarkGreen\n- DarkRed\n\
            - Gold\n- Green\n- NavyBlue\n- Purple\n- White\n"
        fontSize:
          type: string
          description: |-
            The font size used for the information in the tab. Possible values are:

            - Size7
            - Size8
            - Size9
            - Size10
            - Size11
            - Size12
            - Size14
            - Size16
            - Size18
            - Size20
            - Size22
            - Size24
            - Size26
            - Size28
            - Size36
            - Size48
            - Size72
        height:
          type: string
          description: Height of the tab in pixels.
        includedInEmail:
          type: string
          description: "When set to **true**, the tab is included in e-mails related\
            \ to the envelope on which it exists. This applies to only specific tabs."
        initialValue:
          type: string
          description: The original value of the tab.
        italic:
          type: string
          description: "When set to **true**, the information in the tab is italic."
        items:
          type: array
          description: ""
          items:
            type: string
        lastModified:
          type: string
          description: Utc date and time the comment was last updated (can only be
            done by creator.)
        lastModifiedByDisplayName:
          type: string
          description: The User Name of the DocuSign user who last modified this object.
        lastModifiedByUserId:
          type: string
          description: The userId of the DocuSign user who last modified this object.
        locked:
          type: string
          description: "When set to **true**, the signer cannot change the data of\
            \ the custom tab."
        maximumLength:
          type: string
          description: ""
        mergeField:
          $ref: '#/components/schemas/mergeField'
        name:
          type: string
          description: ""
        paymentItemCode:
          type: string
          description: ""
        paymentItemDescription:
          type: string
          description: ""
        paymentItemName:
          type: string
          description: ""
        requireAll:
          type: string
          description: "When set to **true** and shared is true, information must\
            \ be entered in this field to complete the envelope. "
        required:
          type: string
          description: "When set to **true**, the signer is required to fill out this\
            \ tab"
        requireInitialOnSharedChange:
          type: string
          description: "Optional element for field markup. When set to **true**, the\
            \ signer is required to initial when they modify a shared field."
        scaleValue:
          type: string
          description: ""
        selected:
          type: string
          description: "When set to **true**, the radio button is selected."
        shared:
          type: string
          description: ""
        stampType:
          type: string
          description: ""
        stampTypeMetadata:
          $ref: '#/components/schemas/propertyMetadata'
        tabLabel:
          type: string
          description: |
            The label string associated with the tab.
            The string may be the empty string.
            If no value is provided, the tab type is used as the value.

            Maximum of 500 characters.
        type:
          type: string
          description: "Type of the user. Valid values: type_owner, type_participant."
        underline:
          type: string
          description: "When set to **true**, the information in the tab is underlined."
        validationMessage:
          type: string
          description: The message displayed if the custom tab fails input validation
            (either custom of embedded).
        validationPattern:
          type: string
          description: A regular expressionn used to validate input for the tab.
        width:
          type: string
          description: Width of the tab in pixels.
      description: ""
      x-ds-definition-name: tabMetadata
      x-ms-summary: ""
    tabMetadataList:
      type: object
      properties:
        tabs:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/tabMetadata'
      description: ""
      x-ds-definition-name: tabMetadataList
      x-ms-summary: ""
    tabs:
      type: object
      properties:
        approveTabs:
          type: array
          description: "A list of\n[Approve tabs][approve].\n\n\nThis tab allows\n\
            the recipient to approve documents without\nplacing a signature or initials\
            \ on the document. If the\nrecipient clicks the tab during the signing\
            \ process, the\nrecipient is considered to have signed the document. No\n\
            information is shown on the document of the approval, but it\nis recorded\
            \ as a signature in the envelope history.\n\n[approve]:\t\t      https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/approve\n"
          items:
            $ref: '#/components/schemas/approve'
        checkboxTabs:
          type: array
          description: |
            A list of
            [Checkbox tabs][checkbox].


            This tab allows the recipient to select a yes/no (on/off) option.


            [checkbox]:  https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/checkbox
          items:
            $ref: '#/components/schemas/checkbox'
        companyTabs:
          type: array
          description: "A list of \n[Company tabs][company].\n\n\nThis tab displays\
            \ the recipient's company name.\n\n\n\n[company]: https://developers.docusign.com/esign-rest-api/reference/EnvelopeRecipientTabs/create/#/definitions/company\
            \ \n"
          items:
            $ref: '#/components/schemas/company'
        dateSignedTabs:
          type: array
          description: "A list of \n[Date Signed tabs][dateSigned]\n\n\nThis tab displays\
            \ the date that the recipient signed the\ndocument.\n\n[dateSigned]: https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/dateSigned\
            \ \n"
          items:
            $ref: '#/components/schemas/dateSigned'
        dateTabs:
          type: array
          description: "A list of \n[Date tabs][date].\n\n\nThis tab allows the recipient\
            \ to enter a date. Date tabs\nare one-line fields that allow date information\
            \ to be\nentered in any format. The tooltip for this tab recommends\n\
            entering the date as MM/DD/YYYY, but this is not enforced.\nThe format\
            \ entered by the signer is retained. If you need a\nparticular date format\
            \ enforced, DocuSign recommends using a\nText tab with a validation pattern\
            \ and a validation message\nto enforce the format.\n\n\n[date]: https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/date\
            \ \n"
          items:
            $ref: '#/components/schemas/date'
        declineTabs:
          type: array
          description: "A list of \n[Decline tabs][decline].\n\nThis tab allows the\
            \ recipient the option of declining an\nenvelope. If the recipient clicks\
            \ the tab during the signing\nprocess, the envelope is voided.\n\n\n[decline]:\
            \ https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/decline\
            \ \n"
          items:
            $ref: '#/components/schemas/decline'
        emailAddressTabs:
          type: array
          description: "A list of \n[Email Address tabs][emailAddress].\n\nThis tab\
            \ \ndisplays the recipient's email as entered in the\nrecipient information.\n\
            \n\n[emailAddress]: https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/emailAddress\
            \ \n"
          items:
            $ref: '#/components/schemas/emailAddress'
        emailTabs:
          type: array
          description: "A list of \n[Email tabs][email].\n\nThis tab \nallows the\
            \ recipient to enter an email address.\nThis is a one-line field that\
            \ checks that a valid email\naddress is entered. It uses the same parameters\
            \ as a Text\ntab, with the validation message and pattern set for email\n\
            information.\n\nWhen getting information that includes\nthis tab type,\
            \ the original value of the tab when the\nassociated envelope was sent\
            \ is included in the response.\n\n[email]: https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/email\
            \ \n"
          items:
            $ref: '#/components/schemas/email'
        envelopeIdTabs:
          type: array
          description: "A list of \n[Envelope ID tabs][envelopeId].\n\nThis tab \n\
            displays the envelope ID. Recipients cannot enter\nor change the information\
            \ in this tab.\n\n\n[envelopeId]: https://developers.docusign.com/esign-rest-api/reference/EnvelopeRecipientTabs/create/#/definitions/envelopeId\
            \ \n"
          items:
            $ref: '#/components/schemas/envelopeId'
        firstNameTabs:
          type: array
          description: "A list of \n[First Name tabs][firstName].\n\nThis tab \ndisplays\
            \ the recipient's first name. It\ntakes the recipient's name as entered\
            \ in the recipient\ninformation, splits it into sections based on spaces\
            \ and\nuses the first section as the first name.\n\n\n[firstName]: https://developers.docusign.com/esign-rest-api/reference/EnvelopeRecipientTabs/create/#/definitions/firstName\
            \ \n"
          items:
            $ref: '#/components/schemas/firstName'
        formulaTabs:
          type: array
          description: "A list of [Formula tabs][formulaTab].\n\nThe value of a formula\
            \ tab is calculated\nfrom the values of other\nnumber or date tabs in\
            \ the document.\nWhen the recipient completes the underlying fields,\n\
            the formula tab calculates and displays the result.\n\nThe `formula` property\
            \ of the tab\ncontains the references\nto the underlying tabs.\nSee [Calculated\
            \ Fields][calculatedfields]\nin the DocuSign Support Center\nto learn\
            \ more about formulas.\n\nIf a formula tab contains\na `paymentDetails`\
            \ property,\nthe tab is considered a payment item.\nSee [Requesting Payments\
            \ Along with Signatures][paymentguide]\nin the DocuSign Support Center\n\
            to learn more about payments.\n\n[calculatedfields]: https://support.docusign.com/en/guides/ndse-user-guide-calculated-fields\n\
            [paymentguide]:     https://support.docusign.com/en/guides/requesting-payments-along-with-signatures\n\
            [formulaTab]:\t    \thttps://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/formulaTab\n"
          items:
            $ref: '#/components/schemas/formulaTab'
        fullNameTabs:
          type: array
          description: "A list of \n[Full Name tabs][fullName].\n\nThis tab \ndisplays\
            \ the recipient's full name.\n\n\n[fullName]: https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/fullName\
            \ \n"
          items:
            $ref: '#/components/schemas/fullName'
        initialHereTabs:
          type: array
          description: "A list of \n[Initial Here tabs][initialHere].\n\nThis tab\
            \ allows the recipient to initial the document. May\nbe optional.\n\n\
            [initialHere]: https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/initialHere\
            \ \n"
          items:
            $ref: '#/components/schemas/initialHere'
        lastNameTabs:
          type: array
          description: "A list of \n[Last Name tabs][lastName].\n\nThis tab \ndisplays\
            \ the recipient's last name. It\ntakes the recipient's name as entered\
            \ in the recipient\ninformation, splits it into sections based on spaces\
            \ and\nuses the last section as the last name.\n\n\n[lastName]: https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/lastName\
            \ \n"
          items:
            $ref: '#/components/schemas/lastName'
        listTabs:
          type: array
          description: "A list of \n[list tabs][list].\n\nThis tab offers a list of\
            \ options to choose from. The\n`listItems` property is used to specify\
            \ the selectable\noptions.\n\n\n\n[list]: https://developers.docusign.com/esign-rest-api/reference/EnvelopeRecipientTabs/create/#/definitions/list\
            \ \n"
          items:
            $ref: '#/components/schemas/list'
        notarizeTabs:
          type: array
          description: "A list of \n[Notarize tabs][notarize].\n\nA notarize tab is\
            \ a tab that alerts notary recipients that\nthey must take action on the\
            \ page.\nOnly one notarize tab can appear on a page.\n\n[notarize]: https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/notarize\
            \ \n"
          items:
            $ref: '#/components/schemas/notarize'
        noteTabs:
          type: array
          description: "A list of \n[Note tabs][note].\n\nThis tab  displays additional\
            \ information, in the form of a\nnote, for the recipient.\n\n[note]: https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/note\
            \ \n"
          items:
            $ref: '#/components/schemas/note'
        numberTabs:
          type: array
          description: "A list of \n[Number tabs][number].\n\nThis tab allows the\
            \ recipient to enter numbers and decimal\n(.) points.\n\n\n\n[number]:\
            \ https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/number\
            \ \n"
          items:
            $ref: '#/components/schemas/number'
        radioGroupTabs:
          type: array
          description: "A list of \n[Radio Group tabs][radioGroup].\n\nThis tab \n\
            This group tab is used to place radio buttons on a document.\nThe `radios`\
            \ property is used to add and place the radio\nbuttons associated with\
            \ the group. Only one radio button can\nbe selected in a group.\n\n\n\
            [radioGroup]: https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/radioGroup\
            \ \n"
          items:
            $ref: '#/components/schemas/radioGroup'
        signerAttachmentTabs:
          type: array
          description: "A list of \n[Signer Attachment tabs][signerAttachment].\n\n\
            This tab \nallows the recipient to attach supporting\ndocuments to an\
            \ envelope.\n\n\n[signerAttachment]: https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/signerAttachment\
            \ \n"
          items:
            $ref: '#/components/schemas/signerAttachment'
        signHereTabs:
          type: array
          description: "A list of \n[Sign Here tabs][signHere].\n\nThis tab  allows\
            \ the recipient to sign a document. May be\noptional.\n\n[signHere]: https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/signHere\
            \ \n"
          items:
            $ref: '#/components/schemas/signHere'
        smartSectionTabs:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/smartSection'
        ssnTabs:
          type: array
          description: "A list of \n[SSN tabs][ssn].\n\nThis tab \nis a one-line field\
            \ that allows the recipient to enter a Social\nSecurity Number. The SSN\
            \ can be typed with or without\ndashes. It uses the same parameters as\
            \ a Text tab, with the\nvalidation message and pattern set for SSN information.\n\
            \n\n[ssn]: https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/ssn\
            \ \n"
          items:
            $ref: '#/components/schemas/ssn'
        textTabs:
          type: array
          description: "A list of \n[Text tabs][text].\n\nThis tab \nA tab that allows\
            \ the recipient to enter any type of text.\n\n[text]: https://developers.docusign.com/esign-rest-api/reference/EnvelopeRecipientTabs/create/#/definitions/text\
            \ \n"
          items:
            $ref: '#/components/schemas/text'
        titleTabs:
          type: array
          description: "A list of \n[Title tabs][title].\n\nThis tab  displays the\
            \ recipient's title.\n\n\n[title]: https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/title\
            \ \n"
          items:
            $ref: '#/components/schemas/title'
        viewTabs:
          type: array
          description: "A list of \n[View tabs][view].\n\nThis tab \nThis tab is used\
            \ with the Approve tab to handle\nsupplemental documents.\n\n[view]: https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/view\
            \ \n"
          items:
            $ref: '#/components/schemas/view'
        zipTabs:
          type: array
          description: "A list of \n[Zip tabs][zip].\n\nThis tab \nallows the recipient\
            \ to enter a ZIP code. The ZIP\ncode can be five digits or nine digits\
            \ in the ZIP+4 format.\nThe zip code can be typed with or without dashes.\
            \ It uses\nthe same parameters as a Text tab, with the validation\nmessage\
            \ and pattern set for ZIP code information.\n\n\n[zip]: https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/zip\n"
          items:
            $ref: '#/components/schemas/zip'
      description: ""
      x-ds-definition-name: tabs
      x-ms-summary: ""
    templateCustomFields:
      type: object
      properties:
        listCustomFields:
          type: array
          description: An array of list custom fields.
          items:
            $ref: '#/components/schemas/listCustomField'
        textCustomFields:
          type: array
          description: An array of text custom fields.
          items:
            $ref: '#/components/schemas/textCustomField'
      description: ""
      x-ds-definition-name: templateCustomFields
      x-ms-summary: ""
    templateDocumentsResult:
      type: object
      properties:
        templateDocuments:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/envelopeDocument'
        templateId:
          type: string
          description: The ID of the template being accessed.
      description: ""
      x-ds-definition-name: templateDocumentsResult
      x-ms-summary: ""
    templateDocumentVisibilityList:
      type: object
      properties:
        documentVisibility:
          type: array
          description: "A list of `documentVisibility` objects. Each object in the\
            \ list specifies whether a document in the envelope is visible to this\
            \ recipient. For the envelope to use this functionality, Document Visibility\
            \ must be enabled for the account and the `enforceSignerVisibility` property\
            \ must be set to **true**."
          items:
            $ref: '#/components/schemas/documentVisibility'
      description: ""
      x-ds-definition-name: templateDocumentVisibilityList
      x-ms-summary: ""
    templateInformation:
      type: object
      properties:
        templates:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/templateSummary'
      description: ""
      x-ds-definition-name: templateInformation
      x-ms-summary: ""
    templateMatch:
      type: object
      properties:
        documentEndPage:
          type: string
          description: ""
        documentStartPage:
          type: string
          description: ""
        matchPercentage:
          type: string
          description: ""
      description: ""
      x-ds-definition-name: templateMatch
      x-ms-summary: ""
    templateNotificationRequest:
      type: object
      properties:
        expirations:
          $ref: '#/components/schemas/expirations'
        password:
          type: string
          description: ""
        reminders:
          $ref: '#/components/schemas/reminders'
        useAccountDefaults:
          type: string
          description: "When set to **true**, the account default notification settings\
            \ are used for the envelope."
      description: ""
      x-ds-definition-name: templateNotificationRequest
      x-ms-summary: ""
    templateRecipients:
      type: object
      properties:
        agents:
          type: array
          description: A complex type defining the management and access rights of
            a recipient assigned assigned as an agent on the document.
          items:
            $ref: '#/components/schemas/agent'
        carbonCopies:
          type: array
          description: "A complex type containing information about recipients who\
            \ should receive a copy of the envelope, but does not need to sign it."
          items:
            $ref: '#/components/schemas/carbonCopy'
        certifiedDeliveries:
          type: array
          description: "A complex type containing information on a recipient the must\
            \ receive the completed documents for the envelope to be completed, but\
            \ the recipient does not need to sign, initial, date, or add information\
            \ to any of the documents."
          items:
            $ref: '#/components/schemas/certifiedDelivery'
        currentRoutingOrder:
          type: string
          description: ""
        editors:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/editor'
        errorDetails:
          $ref: '#/components/schemas/errorDetails'
        inPersonSigners:
          type: array
          description: Specifies a signer that is in the same physical location as
            a DocuSign user who will act as a Signing Host for the transaction. The
            recipient added is the Signing Host and new separate Signer Name field
            appears after Sign in person is selected.
          items:
            $ref: '#/components/schemas/inPersonSigner'
        intermediaries:
          type: array
          description: "Identifies a recipient that can, but is not required to, add\
            \ name and email information for recipients at the same or subsequent\
            \ level in the routing order (until subsequent Agents, Editors or Intermediaries\
            \ recipient types are added)."
          items:
            $ref: '#/components/schemas/intermediary'
        recipientCount:
          type: string
          description: |-
            The list of recipient event statuses that will trigger Connect to send updates to the url. It can be a two-part list with:

            * recipientEventStatusCode - The recipient status, this can be Sent, Delivered, Completed, Declined, AuthenticationFailed, and AutoResponded.
            * includeDocuments - When set to **true**, the envelope time zone information is included in the message.
        seals:
          type: array
          description: "Specifies one or more electronic seals to apply on documents.\
            \ For more information on Electronic Seals , see https://support.docusign.com/en/guides/ndse-user-guide-apply-electronic-seals"
          items:
            $ref: '#/components/schemas/sealSign'
        signers:
          type: array
          description: A complex type containing information about the Signer recipient.
          items:
            $ref: '#/components/schemas/signer'
        witnesses:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/witness'
      description: ""
      x-ds-definition-name: templateRecipients
      x-ms-summary: ""
    templateRole:
      type: object
      properties:
        accessCode:
          type: string
          description: "If a value is provided, the recipient must enter the value\
            \ as the access code to view and sign the envelope. \n\nMaximum Length:\
            \ 50 characters and it must conform to the account's access code format\
            \ setting.\n\nIf blank, but the signer `accessCode` property is set in\
            \ the envelope, then that value is used.\n\nIf blank and the signer `accessCode`\
            \ property is not set, then the access code is not required."
        clientUserId:
          type: string
          description: "Specifies whether the recipient is embedded or remote. \n\n\
            If the `clientUserId` property is not null then the recipient is embedded.\
            \ Use this field to associate the signer with their userId in your app.\
            \ Authenticating the user is the responsibility of your app when you use\
            \ embedded signing.\n\nNote: if the `clientUserId` property is set and\
            \ either `SignerMustHaveAccount` or `SignerMustLoginToSign` property of\
            \ the account settings is set to  **true**, an error is generated on sending.\
            \ \n\nMaximum length: 100 characters. "
        defaultRecipient:
          type: string
          description: "When set to **true**, this recipient is the default recipient\
            \ and any tabs generated by the transformPdfFields option are mapped to\
            \ this recipient."
        email:
          type: string
          description: Specifies the email associated with a role name.
        emailNotification:
          $ref: '#/components/schemas/recipientEmailNotification'
        embeddedRecipientStartURL:
          type: string
          description: "Specifies a sender provided valid URL string for redirecting\
            \ an embedded recipient. When using this option, the embedded recipient\
            \ still receives an email from DocuSign, just as a remote recipient would.\
            \ When the document link in the email is clicked the recipient is redirected,\
            \ through DocuSign, to the supplied URL to complete their actions. When\
            \ routing to the URL, the sender's system (the server responding to the\
            \ URL) must request a recipient token to launch a signing session. \n\n\
            If set to `SIGN_AT_DOCUSIGN`, the recipient is directed to an embedded\
            \ signing or viewing process directly at DocuSign. The signing or viewing\
            \ action is initiated by the DocuSign system and the transaction activity\
            \ and Certificate of Completion records will reflect this. In all other\
            \ ways the process is identical to an embedded signing or viewing operation\
            \ that is launched by any partner.\n\nIt is important to remember that\
            \ in a typical embedded workflow the authentication of an embedded recipient\
            \ is the responsibility of the sending application, DocuSign expects that\
            \ senders will follow their own process for establishing the recipient's\
            \ identity. In this workflow the recipient goes through the sending application\
            \ before the embedded signing or viewing process in initiated. However,\
            \ when the sending application sets `EmbeddedRecipientStartURL=SIGN_AT_DOCUSIGN`,\
            \ the recipient goes directly to the embedded signing or viewing process\
            \ bypassing the sending application and any authentication steps the sending\
            \ application would use. In this case, DocuSign recommends that you use\
            \ one of the normal DocuSign authentication features (Access Code, Phone\
            \ Authentication, SMS Authentication, etc.) to verify the identity of\
            \ the recipient.\n\nIf the `clientUserId` property is NOT set, and the\
            \ `embeddedRecipientStartURL` is set, DocuSign will ignore the redirect\
            \ URL and launch the standard signing process for the email recipient.\
            \ Information can be appended to the embedded recipient start URL using\
            \ merge fields. The available merge fields items are: envelopeId, recipientId,\
            \ recipientName, recipientEmail, and customFields. The `customFields`\
            \ property must be set fort the recipient or envelope. The merge fields\
            \ are enclosed in double brackets. \n\n*Example*: \n\n`http://senderHost/[[mergeField1]]/\
            \ beginSigningSession? [[mergeField2]]&[[mergeField3]]` "
        inPersonSignerName:
          type: string
          description: |-
            Specifies the full legal name of the signer in person signer template roles.

            Maximum Length: 100 characters.
        name:
          type: string
          description: Specifies the recipient's name.
        recipientSignatureProviders:
          type: array
          description: "The default signature provider is the DocuSign Electronic\
            \ signature system. This parameter is used to specify one or more Standards\
            \ Based Signature (digital signature) providers for the signer to use.\
            \ [More information.](https://developers.docusign.com/esign-rest-api/guides/standards-based-signatures)"
          items:
            $ref: '#/components/schemas/recipientSignatureProvider'
        roleName:
          type: string
          description: Optional element. Specifies the role name associated with the
            recipient.<br/><br/>This is required when working with template recipients.
        routingOrder:
          type: string
          description: 'Specifies the routing order of the recipient in the envelope. '
        signingGroupId:
          type: string
          description: "Optional. The ID of the [signing group](https://support.docusign.com/en/guides/ndse-user-guide-signing-groups).\n\
            \n**Note**: When you send an envelope to a signing group, anyone in the\
            \ group can open it and sign it with their own signature. For this reason,\
            \ we recommend that you do not include non-signer recipients (such as\
            \ carbon copy recipients) in the same signing group as signer recipients.\
            \ However, you could create a second signing group for the non-signer\
            \ recipients and change the default action of Needs to Sign to a different\
            \ value, such as Receives a Copy. "
        tabs:
          $ref: '#/components/schemas/EnvelopeRecipientTabs'
      description: ""
      x-ds-definition-name: templateRole
      x-ms-summary: ""
    templateSharedItem:
      type: object
      properties:
        errorDetails:
          $ref: '#/components/schemas/errorDetails'
        owner:
          $ref: '#/components/schemas/userInfo'
        shared:
          type: string
          description: |
            How the template is shared. One of:

            - `not_shared`
            - `shared_to`
            - `shared_from`
            - `shared_to_and_from`
        sharedGroups:
          type: array
          description: List of groups that share the template.
          items:
            $ref: '#/components/schemas/memberGroupSharedItem'
        sharedUsers:
          type: array
          description: List of users that share the template.
          items:
            $ref: '#/components/schemas/userSharedItem'
        templateId:
          type: string
          description: "The unique identifier of the template. If this is not provided,\
            \ DocuSign will generate a value. "
        templateName:
          type: string
          description: The name of the shared template.
      description: Information about shared templates.
      x-ds-definition-name: templateSharedItem
      x-ms-summary: Information about shared templates.
    templateSummary:
      type: object
      properties:
        applied:
          type: string
          description: "Reserved: TBD"
        documentId:
          type: string
          description: Specifies the document ID number that the tab is placed on.
            This must refer to an existing Document's ID attribute.
        documentName:
          type: string
          description: ""
        name:
          type: string
          description: ""
        templateId:
          type: string
          description: "The unique identifier of the template. If this is not provided,\
            \ DocuSign will generate a value. "
        templateMatch:
          $ref: '#/components/schemas/templateMatch'
        uri:
          type: string
          description: ""
      description: ""
      x-ds-definition-name: templateSummary
      x-ms-summary: ""
    templateTabs:
      type: object
      properties:
        approveTabs:
          type: array
          description: "A list of\n[Approve tabs][approve].\n\n\nThis tab allows\n\
            the recipient to approve documents without\nplacing a signature or initials\
            \ on the document. If the\nrecipient clicks the tab during the signing\
            \ process, the\nrecipient is considered to have signed the document. No\n\
            information is shown on the document of the approval, but it\nis recorded\
            \ as a signature in the envelope history.\n\n[approve]:\t\t      https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/approve\n"
          items:
            $ref: '#/components/schemas/approve'
        checkboxTabs:
          type: array
          description: |
            A list of
            [Checkbox tabs][checkbox].


            This tab allows the recipient to select a yes/no (on/off) option.


            [checkbox]:  https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/checkbox
          items:
            $ref: '#/components/schemas/checkbox'
        companyTabs:
          type: array
          description: "A list of \n[Company tabs][company].\n\n\nThis tab displays\
            \ the recipient's company name.\n\n\n\n[company]: https://developers.docusign.com/esign-rest-api/reference/EnvelopeRecipientTabs/create/#/definitions/company\
            \ \n"
          items:
            $ref: '#/components/schemas/company'
        dateSignedTabs:
          type: array
          description: "A list of \n[Date Signed tabs][dateSigned]\n\n\nThis tab displays\
            \ the date that the recipient signed the\ndocument.\n\n[dateSigned]: https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/dateSigned\
            \ \n"
          items:
            $ref: '#/components/schemas/dateSigned'
        dateTabs:
          type: array
          description: "A list of \n[Date tabs][date].\n\n\nThis tab allows the recipient\
            \ to enter a date. Date tabs\nare one-line fields that allow date information\
            \ to be\nentered in any format. The tooltip for this tab recommends\n\
            entering the date as MM/DD/YYYY, but this is not enforced.\nThe format\
            \ entered by the signer is retained. If you need a\nparticular date format\
            \ enforced, DocuSign recommends using a\nText tab with a validation pattern\
            \ and a validation message\nto enforce the format.\n\n\n[date]: https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/date\
            \ \n"
          items:
            $ref: '#/components/schemas/date'
        declineTabs:
          type: array
          description: "A list of \n[Decline tabs][decline].\n\nThis tab allows the\
            \ recipient the option of declining an\nenvelope. If the recipient clicks\
            \ the tab during the signing\nprocess, the envelope is voided.\n\n\n[decline]:\
            \ https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/decline\
            \ \n"
          items:
            $ref: '#/components/schemas/decline'
        emailAddressTabs:
          type: array
          description: "A list of \n[Email Address tabs][emailAddress].\n\nThis tab\
            \ \ndisplays the recipient's email as entered in the\nrecipient information.\n\
            \n\n[emailAddress]: https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/emailAddress\
            \ \n"
          items:
            $ref: '#/components/schemas/emailAddress'
        emailTabs:
          type: array
          description: "A list of \n[Email tabs][email].\n\nThis tab \nallows the\
            \ recipient to enter an email address.\nThis is a one-line field that\
            \ checks that a valid email\naddress is entered. It uses the same parameters\
            \ as a Text\ntab, with the validation message and pattern set for email\n\
            information.\n\nWhen getting information that includes\nthis tab type,\
            \ the original value of the tab when the\nassociated envelope was sent\
            \ is included in the response.\n\n[email]: https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/email\
            \ \n"
          items:
            $ref: '#/components/schemas/email'
        envelopeIdTabs:
          type: array
          description: "A list of \n[Envelope ID tabs][envelopeId].\n\nThis tab \n\
            displays the envelope ID. Recipients cannot enter\nor change the information\
            \ in this tab.\n\n\n[envelopeId]: https://developers.docusign.com/esign-rest-api/reference/EnvelopeRecipientTabs/create/#/definitions/envelopeId\
            \ \n"
          items:
            $ref: '#/components/schemas/envelopeId'
        firstNameTabs:
          type: array
          description: "A list of \n[First Name tabs][firstName].\n\nThis tab \ndisplays\
            \ the recipient's first name. It\ntakes the recipient's name as entered\
            \ in the recipient\ninformation, splits it into sections based on spaces\
            \ and\nuses the first section as the first name.\n\n\n[firstName]: https://developers.docusign.com/esign-rest-api/reference/EnvelopeRecipientTabs/create/#/definitions/firstName\
            \ \n"
          items:
            $ref: '#/components/schemas/firstName'
        formulaTabs:
          type: array
          description: "A list of [Formula tabs][formulaTab].\n\nThe value of a formula\
            \ tab is calculated\nfrom the values of other\nnumber or date tabs in\
            \ the document.\nWhen the recipient completes the underlying fields,\n\
            the formula tab calculates and displays the result.\n\nThe `formula` property\
            \ of the tab\ncontains the references\nto the underlying tabs.\nSee [Calculated\
            \ Fields][calculatedfields]\nin the DocuSign Support Center\nto learn\
            \ more about formulas.\n\nIf a formula tab contains\na `paymentDetails`\
            \ property,\nthe tab is considered a payment item.\nSee [Requesting Payments\
            \ Along with Signatures][paymentguide]\nin the DocuSign Support Center\n\
            to learn more about payments.\n\n[calculatedfields]: https://support.docusign.com/en/guides/ndse-user-guide-calculated-fields\n\
            [paymentguide]:     https://support.docusign.com/en/guides/requesting-payments-along-with-signatures\n\
            [formulaTab]:\t    \thttps://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/formulaTab\n"
          items:
            $ref: '#/components/schemas/formulaTab'
        fullNameTabs:
          type: array
          description: "A list of \n[Full Name tabs][fullName].\n\nThis tab \ndisplays\
            \ the recipient's full name.\n\n\n[fullName]: https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/fullName\
            \ \n"
          items:
            $ref: '#/components/schemas/fullName'
        initialHereTabs:
          type: array
          description: "A list of \n[Initial Here tabs][initialHere].\n\nThis tab\
            \ allows the recipient to initial the document. May\nbe optional.\n\n\
            [initialHere]: https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/initialHere\
            \ \n"
          items:
            $ref: '#/components/schemas/initialHere'
        lastNameTabs:
          type: array
          description: "A list of \n[Last Name tabs][lastName].\n\nThis tab \ndisplays\
            \ the recipient's last name. It\ntakes the recipient's name as entered\
            \ in the recipient\ninformation, splits it into sections based on spaces\
            \ and\nuses the last section as the last name.\n\n\n[lastName]: https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/lastName\
            \ \n"
          items:
            $ref: '#/components/schemas/lastName'
        listTabs:
          type: array
          description: "A list of \n[list tabs][list].\n\nThis tab offers a list of\
            \ options to choose from. The\n`listItems` property is used to specify\
            \ the selectable\noptions.\n\n\n\n[list]: https://developers.docusign.com/esign-rest-api/reference/EnvelopeRecipientTabs/create/#/definitions/list\
            \ \n"
          items:
            $ref: '#/components/schemas/list'
        notarizeTabs:
          type: array
          description: "A list of \n[Notarize tabs][notarize].\n\nA notarize tab is\
            \ a tab that alerts notary recipients that\nthey must take action on the\
            \ page.\nOnly one notarize tab can appear on a page.\n\n[notarize]: https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/notarize\
            \ \n"
          items:
            $ref: '#/components/schemas/notarize'
        noteTabs:
          type: array
          description: "A list of \n[Note tabs][note].\n\nThis tab  displays additional\
            \ information, in the form of a\nnote, for the recipient.\n\n[note]: https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/note\
            \ \n"
          items:
            $ref: '#/components/schemas/note'
        numberTabs:
          type: array
          description: "A list of \n[Number tabs][number].\n\nThis tab allows the\
            \ recipient to enter numbers and decimal\n(.) points.\n\n\n\n[number]:\
            \ https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/number\
            \ \n"
          items:
            $ref: '#/components/schemas/number'
        radioGroupTabs:
          type: array
          description: "A list of \n[Radio Group tabs][radioGroup].\n\nThis tab \n\
            This group tab is used to place radio buttons on a document.\nThe `radios`\
            \ property is used to add and place the radio\nbuttons associated with\
            \ the group. Only one radio button can\nbe selected in a group.\n\n\n\
            [radioGroup]: https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/radioGroup\
            \ \n"
          items:
            $ref: '#/components/schemas/radioGroup'
        signerAttachmentTabs:
          type: array
          description: "A list of \n[Signer Attachment tabs][signerAttachment].\n\n\
            This tab \nallows the recipient to attach supporting\ndocuments to an\
            \ envelope.\n\n\n[signerAttachment]: https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/signerAttachment\
            \ \n"
          items:
            $ref: '#/components/schemas/signerAttachment'
        signHereTabs:
          type: array
          description: "A list of \n[Sign Here tabs][signHere].\n\nThis tab  allows\
            \ the recipient to sign a document. May be\noptional.\n\n[signHere]: https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/signHere\
            \ \n"
          items:
            $ref: '#/components/schemas/signHere'
        smartSectionTabs:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/smartSection'
        ssnTabs:
          type: array
          description: "A list of \n[SSN tabs][ssn].\n\nThis tab \nis a one-line field\
            \ that allows the recipient to enter a Social\nSecurity Number. The SSN\
            \ can be typed with or without\ndashes. It uses the same parameters as\
            \ a Text tab, with the\nvalidation message and pattern set for SSN information.\n\
            \n\n[ssn]: https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/ssn\
            \ \n"
          items:
            $ref: '#/components/schemas/ssn'
        textTabs:
          type: array
          description: "A list of \n[Text tabs][text].\n\nThis tab \nA tab that allows\
            \ the recipient to enter any type of text.\n\n[text]: https://developers.docusign.com/esign-rest-api/reference/EnvelopeRecipientTabs/create/#/definitions/text\
            \ \n"
          items:
            $ref: '#/components/schemas/text'
        titleTabs:
          type: array
          description: "A list of \n[Title tabs][title].\n\nThis tab  displays the\
            \ recipient's title.\n\n\n[title]: https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/title\
            \ \n"
          items:
            $ref: '#/components/schemas/title'
        viewTabs:
          type: array
          description: "A list of \n[View tabs][view].\n\nThis tab \nThis tab is used\
            \ with the Approve tab to handle\nsupplemental documents.\n\n[view]: https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/view\
            \ \n"
          items:
            $ref: '#/components/schemas/view'
        zipTabs:
          type: array
          description: "A list of \n[Zip tabs][zip].\n\nThis tab \nallows the recipient\
            \ to enter a ZIP code. The ZIP\ncode can be five digits or nine digits\
            \ in the ZIP+4 format.\nThe zip code can be typed with or without dashes.\
            \ It uses\nthe same parameters as a Text tab, with the validation\nmessage\
            \ and pattern set for ZIP code information.\n\n\n[zip]: https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/zip\n"
          items:
            $ref: '#/components/schemas/zip'
      description: ""
      x-ds-definition-name: templateTabs
      x-ms-summary: ""
    templateUpdateSummary:
      type: object
      properties:
        bulkEnvelopeStatus:
          $ref: '#/components/schemas/bulkEnvelopeStatus'
        envelopeId:
          type: string
          description: The envelope ID of the envelope status that failed to post.
        errorDetails:
          $ref: '#/components/schemas/errorDetails'
        listCustomFieldUpdateResults:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/listCustomField'
        lockInformation:
          $ref: '#/components/schemas/EnvelopeLocks'
        recipientUpdateResults:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/recipientUpdateResponse'
        tabUpdateResults:
          $ref: '#/components/schemas/EnvelopeRecipientTabs'
        textCustomFieldUpdateResults:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/textCustomField'
      description: ""
      x-ds-definition-name: templateUpdateSummary
      x-ms-summary: ""
    text:
      type: object
      properties:
        anchorCaseSensitive:
          type: string
          description: |-
            Reserved for DocuSign.
            <!--
            When set to **true**, the anchor string does not consider case when matching strings in the document. The default value is **true**.
            -->
        anchorHorizontalAlignment:
          type: string
          description: |
            Reserved for DocuSign.
            <!--
            Specifies the alignment of anchor tabs with anchor strings. Possible values are **left** or **right**. The default value is **left**.
            -->
        anchorIgnoreIfNotPresent:
          type: string
          description: "When set to **true**, this tab is ignored if anchorString\
            \ is not found in the document."
        anchorMatchWholeWord:
          type: string
          description: |
            Reserved for DocuSign.
            <!--
            When set to **true**, the anchor string in this tab matches whole words only (strings embedded in other strings are ignored.) The default value is **true**.
            -->
        anchorString:
          type: string
          description: Specifies the anchor string.
        anchorUnits:
          type: string
          description: |
            Specifies units of the
            `anchorXOffset` and
            `anchorYOffset`.
            Valid units are:

            - `pixels`
            - `inches`
            - `mms`
            - `cms`
        anchorXOffset:
          type: string
          description: |
            Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.
        anchorYOffset:
          type: string
          description: |
            Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.
        bold:
          type: string
          description: "When set to **true**, the information in the tab is bold."
        concealValueOnDocument:
          type: string
          description: |-
            When set to **true**, the field appears normally while the recipient is adding or modifying the information in the field, but the data is not visible (the characters are hidden by asterisks) to any other signer or the sender.

            When an envelope is completed the information is available to the sender through the Form Data link in the DocuSign Console.

            This setting applies only to text boxes and does not affect list boxes, radio buttons, or check boxes.
        conditionalParentLabel:
          type: string
          description: For conditional fields this is the TabLabel of the parent tab
            that controls this tab's visibility.
        conditionalParentValue:
          type: string
          description: |
            For conditional fields, this is the value of the parent tab that controls the tab's visibility.

            If the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use "on" as the value to show that the parent tab is active.
        customTabId:
          type: string
          description: "The DocuSign generated custom tab ID for the custom tab to\
            \ be applied. This can only be used when adding new tabs for a recipient.\
            \ When used, the new tab inherits all the custom tab properties."
        disableAutoSize:
          type: string
          description: "When set to **true**, disables the auto sizing of single line\
            \ text boxes in the signing screen when the signer enters data. If disabled\
            \ users will only be able enter as much data as the text box can hold.\
            \ By default this is false. This property only affects single line text\
            \ boxes."
        documentId:
          type: string
          description: Specifies the document ID number that the tab is placed on.
            This must refer to an existing Document's ID attribute.
        errorDetails:
          $ref: '#/components/schemas/errorDetails'
        font:
          type: string
          description: |
            The font to be used for the tab value. Supported Fonts include:

            - Default
            - Arial
            - ArialNarrow
            - Calibri
            - CourierNew
            - Garamond
            - Georgia
            - Helvetica
            - LucidaConsole
            - MSGothic
            - MSMincho
            - OCR-A
            - Tahoma
            - TimesNewRoman
            - Trebuchet
            - Verdana
        fontColor:
          type: string
          description: "The font color used for the information in the tab. Possible\
            \ values are: \n\n- Black\n- BrightBlue\n- BrightRed\n- DarkGreen\n- DarkRed\n\
            - Gold\n- Green\n- NavyBlue\n- Purple\n- White\n"
        fontSize:
          type: string
          description: |-
            The font size used for the information in the tab. Possible values are:

            - Size7
            - Size8
            - Size9
            - Size10
            - Size11
            - Size12
            - Size14
            - Size16
            - Size18
            - Size20
            - Size22
            - Size24
            - Size26
            - Size28
            - Size36
            - Size48
            - Size72
        formula:
          type: string
          description: |
            Contains the formula
            for calculating the value of
            this tab.

            Use a tab's `tabLabel`,
            enclosed in brackets,
            to refer to it.

            For example,
            you want to present the total cost
            of two items, tax included.

            The cost of each item is stored
            in number tabs labeled Item1 and Item2.
            The tax rate is in a number tab
            labeled TaxRate.

            The formula string for this property
            would be:
            `([Item1] + [Item2]) * (1 + [TaxRate])`

            See [Calculated Fields][calculatedfields]
            in the DocuSign Support Center
            to learn more about formulas.

            Maximum Length: 2000 characters

            [calculatedfields]: https://support.docusign.com/en/guides/ndse-user-guide-calculated-fields
        height:
          type: integer
          description: Height of the tab in pixels.
          format: int32
        isPaymentAmount:
          type: string
          description: "When set to **true**, sets this as a payment tab. Can only\
            \ be used with Text, Number, Formula, or List tabs. The value of the tab\
            \ must be a number. "
        italic:
          type: string
          description: "When set to **true**, the information in the tab is italic."
        locked:
          type: string
          description: "When set to **true**, the signer cannot change the data of\
            \ the custom tab."
        maxLength:
          type: integer
          description: An optional value that describes the maximum length of the
            property when the property is a string.
          format: int32
        mergeField:
          $ref: '#/components/schemas/mergeField'
        name:
          type: string
          description: Specifies the tool tip text for the tab.
        originalValue:
          type: string
          description: 'The initial value of the tab when it was sent to the recipient. '
        pageNumber:
          type: string
          description: |-
            Specifies the page number on which the tab is located.
            Must be 1 for supplemental documents.
        recipientId:
          type: string
          description: Unique for the recipient. It is used by the tab element to
            indicate which recipient is to sign the Document.
        requireAll:
          type: string
          description: "When set to **true** and shared is true, information must\
            \ be entered in this field to complete the envelope. "
        required:
          type: string
          description: "When set to **true**, the signer is required to fill out this\
            \ tab"
        requireInitialOnSharedChange:
          type: string
          description: "Optional element for field markup. When set to **true**, the\
            \ signer is required to initial when they modify a shared field."
        senderRequired:
          type: string
          description: "When set to **true**, the sender must populate the tab before\
            \ an envelope can be sent using the template. \n\nThis value tab can only\
            \ be changed by modifying (PUT) the template. \n\nTabs with a `senderRequired`\
            \ value of true cannot be deleted from an envelope."
        shared:
          type: string
          description: "When set to **true**, this custom tab is shared."
        status:
          type: string
          description: |
            Tab status
            <!-- todo -->
        tabGroupLabels:
          type: array
          description: ""
          items:
            type: string
        tabId:
          type: string
          description: The unique identifier for the tab.
        tabLabel:
          type: string
          description: |
            The label string associated with the tab.
            The string may be the empty string.
            If no value is provided, the tab type is used as the value.

            Maximum of 500 characters.
        tabOrder:
          type: string
          description: |-
            A positive integer that sets the order the tab is navigated to during signing.

            Tabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.
        templateLocked:
          type: string
          description: "When set to **true**, the sender cannot change any attributes\
            \ of the recipient. Used only when working with template recipients. "
        templateRequired:
          type: string
          description: "When set to **true**, the sender may not remove the recipient.\
            \ Used only when working with template recipients."
        tooltip:
          type: string
          description: ""
        underline:
          type: string
          description: "When set to **true**, the information in the tab is underlined."
        validationMessage:
          type: string
          description: The message displayed if the custom tab fails input validation
            (either custom of embedded).
        validationPattern:
          type: string
          description: A regular expressionn used to validate input for the tab.
        value:
          type: string
          description: 'Specifies the value of the tab. '
        width:
          type: integer
          description: Width of the tab in pixels.
          format: int32
        xPosition:
          type: string
          description: |
            This property indicates the horizontal offset of the object on the page.
            DocuSign uses 72 DPI when determining position.
            Required. May be zero.

            To improve the tab's position on the document,
            DocuSign recommends
            adjusting `xPosition`
            and `yPosition`
            coordinates
            by (-3, -2)
        yPosition:
          type: string
          description: |
            This property indicates the vertical offset of the object on the page.
            DocuSign uses 72 DPI when determining position.
            Required. May be zero.

            To improve the tab's position on the document,
            DocuSign recommends
            adjusting `xPosition`
            and `yPosition`
            coordinates
            by (-3, -2)
      description: |
        A tab that allows the recipient to enter any type of text.
      x-ds-definition-name: text
      x-ms-summary: |
        A tab that allows the recipient to enter any type of text.
    textCustomField:
      type: object
      properties:
        configurationType:
          type: string
          description: "If merge field's are being used, specifies the type of the\
            \ merge field. The only  supported value is **salesforce**."
        errorDetails:
          $ref: '#/components/schemas/errorDetails'
        fieldId:
          type: string
          description: An ID used to specify a custom field.
        name:
          type: string
          description: The name of the custom field.
        required:
          type: string
          description: "When set to **true**, the signer is required to fill out this\
            \ tab"
        show:
          type: string
          description: "A boolean indicating if the value should be displayed.  If\
            \ this value is set to **true**, the custom field is displayed at the\
            \ top of the certificate of completion. If this value is left blank/ or\
            \ set to **false**, then it does not appear in the certificate of completion. "
        value:
          type: string
          description: The value of the custom field.
      description: ""
      x-ds-definition-name: textCustomField
      x-ms-summary: ""
    title:
      type: object
      properties:
        anchorCaseSensitive:
          type: string
          description: |-
            Reserved for DocuSign.
            <!--
            When set to **true**, the anchor string does not consider case when matching strings in the document. The default value is **true**.
            -->
        anchorHorizontalAlignment:
          type: string
          description: |
            Reserved for DocuSign.
            <!--
            Specifies the alignment of anchor tabs with anchor strings. Possible values are **left** or **right**. The default value is **left**.
            -->
        anchorIgnoreIfNotPresent:
          type: string
          description: "When set to **true**, this tab is ignored if anchorString\
            \ is not found in the document."
        anchorMatchWholeWord:
          type: string
          description: |
            Reserved for DocuSign.
            <!--
            When set to **true**, the anchor string in this tab matches whole words only (strings embedded in other strings are ignored.) The default value is **true**.
            -->
        anchorString:
          type: string
          description: Specifies the anchor string.
        anchorUnits:
          type: string
          description: |
            Specifies units of the
            `anchorXOffset` and
            `anchorYOffset`.
            Valid units are:

            - `pixels`
            - `inches`
            - `mms`
            - `cms`
        anchorXOffset:
          type: string
          description: |
            Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.
        anchorYOffset:
          type: string
          description: |
            Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.
        bold:
          type: string
          description: "When set to **true**, the information in the tab is bold."
        concealValueOnDocument:
          type: string
          description: |-
            When set to **true**, the field appears normally while the recipient is adding or modifying the information in the field, but the data is not visible (the characters are hidden by asterisks) to any other signer or the sender.

            When an envelope is completed the information is available to the sender through the Form Data link in the DocuSign Console.

            This setting applies only to text boxes and does not affect list boxes, radio buttons, or check boxes.
        conditionalParentLabel:
          type: string
          description: For conditional fields this is the TabLabel of the parent tab
            that controls this tab's visibility.
        conditionalParentValue:
          type: string
          description: |
            For conditional fields, this is the value of the parent tab that controls the tab's visibility.

            If the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use "on" as the value to show that the parent tab is active.
        customTabId:
          type: string
          description: "The DocuSign generated custom tab ID for the custom tab to\
            \ be applied. This can only be used when adding new tabs for a recipient.\
            \ When used, the new tab inherits all the custom tab properties."
        disableAutoSize:
          type: string
          description: "When set to **true**, disables the auto sizing of single line\
            \ text boxes in the signing screen when the signer enters data. If disabled\
            \ users will only be able enter as much data as the text box can hold.\
            \ By default this is false. This property only affects single line text\
            \ boxes."
        documentId:
          type: string
          description: Specifies the document ID number that the tab is placed on.
            This must refer to an existing Document's ID attribute.
        errorDetails:
          $ref: '#/components/schemas/errorDetails'
        font:
          type: string
          description: |
            The font to be used for the tab value. Supported Fonts include:

            - Default
            - Arial
            - ArialNarrow
            - Calibri
            - CourierNew
            - Garamond
            - Georgia
            - Helvetica
            - LucidaConsole
            - MSGothic
            - MSMincho
            - OCR-A
            - Tahoma
            - TimesNewRoman
            - Trebuchet
            - Verdana
        fontColor:
          type: string
          description: "The font color used for the information in the tab. Possible\
            \ values are: \n\n- Black\n- BrightBlue\n- BrightRed\n- DarkGreen\n- DarkRed\n\
            - Gold\n- Green\n- NavyBlue\n- Purple\n- White\n"
        fontSize:
          type: string
          description: |-
            The font size used for the information in the tab. Possible values are:

            - Size7
            - Size8
            - Size9
            - Size10
            - Size11
            - Size12
            - Size14
            - Size16
            - Size18
            - Size20
            - Size22
            - Size24
            - Size26
            - Size28
            - Size36
            - Size48
            - Size72
        italic:
          type: string
          description: "When set to **true**, the information in the tab is italic."
        locked:
          type: string
          description: "When set to **true**, the signer cannot change the data of\
            \ the custom tab."
        maxLength:
          type: integer
          description: An optional value that describes the maximum length of the
            property when the property is a string.
          format: int32
        mergeField:
          $ref: '#/components/schemas/mergeField'
        name:
          type: string
          description: ""
        originalValue:
          type: string
          description: 'The initial value of the tab when it was sent to the recipient. '
        pageNumber:
          type: string
          description: |-
            Specifies the page number on which the tab is located.
            Must be 1 for supplemental documents.
        recipientId:
          type: string
          description: Unique for the recipient. It is used by the tab element to
            indicate which recipient is to sign the Document.
        required:
          type: string
          description: "When set to **true**, the signer is required to fill out this\
            \ tab"
        status:
          type: string
          description: |
            Tab status
            <!-- todo -->
        tabGroupLabels:
          type: array
          description: ""
          items:
            type: string
        tabId:
          type: string
          description: The unique identifier for the tab.
        tabLabel:
          type: string
          description: |
            The label string associated with the tab.
            The string may be the empty string.
            If no value is provided, the tab type is used as the value.

            Maximum of 500 characters.
        tabOrder:
          type: string
          description: |-
            A positive integer that sets the order the tab is navigated to during signing.

            Tabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.
        templateLocked:
          type: string
          description: "When set to **true**, the sender cannot change any attributes\
            \ of the recipient. Used only when working with template recipients. "
        templateRequired:
          type: string
          description: "When set to **true**, the sender may not remove the recipient.\
            \ Used only when working with template recipients."
        tooltip:
          type: string
          description: ""
        underline:
          type: string
          description: "When set to **true**, the information in the tab is underlined."
        value:
          type: string
          description: 'Specifies the value of the tab. '
        width:
          type: integer
          description: Width of the tab in pixels.
          format: int32
        xPosition:
          type: string
          description: |
            This property indicates the horizontal offset of the object on the page.
            DocuSign uses 72 DPI when determining position.
            Required. May be zero.

            To improve the tab's position on the document,
            DocuSign recommends
            adjusting `xPosition`
            and `yPosition`
            coordinates
            by (-3, -2)
        yPosition:
          type: string
          description: |
            This property indicates the vertical offset of the object on the page.
            DocuSign uses 72 DPI when determining position.
            Required. May be zero.

            To improve the tab's position on the document,
            DocuSign recommends
            adjusting `xPosition`
            and `yPosition`
            coordinates
            by (-3, -2)
      description: |
        A tab that displays the recipient's title.
      x-ds-definition-name: title
      x-ms-summary: |
        A tab that displays the recipient's title.
    usageHistory:
      type: object
      properties:
        lastSentDateTime:
          type: string
          description: 'The date and time the user last sent an envelope. '
        lastSignedDateTime:
          type: string
          description: The date and time the user last signed an envelope.
        sentCount:
          type: integer
          description: 'The number of envelopes the user has sent. '
          format: int32
        signedCount:
          type: integer
          description: 'The number of envelopes the user has signed. '
          format: int32
      description: "A complex element consisting of: \n\n* lastSentDateTime - the\
        \ date and time the user last sent an envelope. \n* lastSignedDateTime - the\
        \ date and time the user last signed an envelope.\n* sentCount - the number\
        \ of envelopes the user has sent.\n* signedCount - the number of envelopes\
        \ the user has signed."
      x-ds-definition-name: usageHistory
      x-ms-summary: "A complex element consisting of: \n\n* lastSentDateTime - the\
        \ date and time the user last sent an envelope. \n* lastSignedDateTime - the\
        \ date and time the user last signed an envelope.\n* sentCount - the number\
        \ of envelopes the user has sent.\n* signedCount - the number of envelopes\
        \ the user has signed."
    userAccountManagementGranularInformation:
      type: object
      properties:
        canManageAccountSecuritySettings:
          type: string
          description: ""
        canManageAccountSecuritySettingsMetadata:
          $ref: '#/components/schemas/settingsMetadata'
        canManageAccountSettings:
          type: string
          description: ""
        canManageAccountSettingsMetadata:
          $ref: '#/components/schemas/settingsMetadata'
        canManageAdmins:
          type: string
          description: |-
            **True**
            if the user can manage
            admins.
        canManageAdminsMetadata:
          $ref: '#/components/schemas/settingsMetadata'
        canManageEnvelopeTransfer:
          type: string
          description: ""
        canManageEnvelopeTransferMetadata:
          $ref: '#/components/schemas/settingsMetadata'
        canManageGroups:
          type: string
          description: |-
            **True**
            if the user can manage
            groups.
        canManageGroupsMetadata:
          $ref: '#/components/schemas/settingsMetadata'
        canManageReporting:
          type: string
          description: ""
        canManageReportingMetadata:
          $ref: '#/components/schemas/settingsMetadata'
        canManageSharing:
          type: string
          description: ""
        canManageSharingMetadata:
          $ref: '#/components/schemas/settingsMetadata'
        canManageSigningGroups:
          type: string
          description: ""
        canManageSigningGroupsMetadata:
          $ref: '#/components/schemas/settingsMetadata'
        canManageUsers:
          type: string
          description: |-
            **True**
            if the user can manage
            users.
        canManageUsersMetadata:
          $ref: '#/components/schemas/settingsMetadata'
        canViewUsers:
          type: string
          description: ""
        canViewUsersMetadata:
          $ref: '#/components/schemas/settingsMetadata'
      description: Describes which account management capabilities a user has.
      x-ds-definition-name: userAccountManagementGranularInformation
      x-ms-summary: Describes which account management capabilities a user has.
    userInfo:
      type: object
      properties:
        activationAccessCode:
          type: string
          description: ""
        email:
          type: string
          description: ""
        errorDetails:
          $ref: '#/components/schemas/errorDetails'
        loginStatus:
          type: string
          description: ""
        sendActivationEmail:
          type: string
          description: ""
        uri:
          type: string
          description: ""
        userId:
          type: string
          description: "The user ID of the user being accessed. Generally this is\
            \ the user ID of the authenticated user, but if the authenticated user\
            \ is an Admin on the account, this may be another user the Admin user\
            \ is accessing. **Note**: For the [GET /v2/accounts/{accountId}/envelopes](https://developers.docusign.com/esign-rest-api/reference/Envelopes/Envelopes/listStatusChanges/#envelopesInformation)\
            \ method, the `user_id` query parameter is not implemented and should\
            \ not be used."
        userName:
          type: string
          description: ""
        userStatus:
          type: string
          description: |
            Status of the user's account. One of:

            * ActivationRequired
            * ActivationSent
            * Active
            * Closed
            * Disabled
        userType:
          type: string
          description: ""
      description: ""
      x-ds-definition-name: userInfo
      x-ms-summary: ""
    userInfoList:
      type: object
      properties:
        users:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/userInfo'
      description: ""
      x-ds-definition-name: userInfoList
      x-ms-summary: ""
    userInformation:
      type: object
      properties:
        accountManagementGranular:
          $ref: '#/components/schemas/userAccountManagementGranularInformation'
        activationAccessCode:
          type: string
          description: ""
        countryCode:
          type: string
          description: ""
        createdDateTime:
          type: string
          description: Indicates the date and time the item was created.
        customSettings:
          type: array
          description: The name/value pair information for the user custom setting.
          items:
            $ref: '#/components/schemas/nameValue'
        email:
          type: string
          description: ""
        enableConnectForUser:
          type: string
          description: "Specifies whether the user is enabled for updates from DocuSign\
            \ Connect. Valid values: true or false."
        errorDetails:
          $ref: '#/components/schemas/errorDetails'
        firstName:
          type: string
          description: "The user's first name. \nMaximum Length: 50 characters."
        forgottenPasswordInfo:
          $ref: '#/components/schemas/forgottenPasswordInformation'
        groupList:
          type: array
          description: "A list of the group information for groups to add the user\
            \ to. Group information can be found by calling [ML:GET group information].\
            \ The only required parameter is groupId. \n\nThe parameters are:\n\n\
            * groupId - The DocuSign group ID for the group.\n* groupName - The name\
            \ of the group\n* permissionProfileId - The ID of the permission profile\
            \ associated with the group.\n* groupType - The group type.\n"
          items:
            $ref: '#/components/schemas/group'
        homeAddress:
          $ref: '#/components/schemas/addressInformation_v2'
        initialsImageUri:
          type: string
          description: Contains the URI for an endpoint that you can use to retrieve
            the initials image.
        isAdmin:
          type: string
          description: Determines if the feature set is actively set as part of the
            plan.
        jobTitle:
          type: string
          description: ""
        lastLogin:
          type: string
          description: The date-time when the user last logged on to the system.
        lastName:
          type: string
          description: The recipient's last name.
        loginStatus:
          type: string
          description: ""
        middleName:
          type: string
          description: "The user's middle name. \nLimit: 50 characters."
        password:
          type: string
          description: ""
        passwordExpiration:
          type: string
          description: "If password expiration is enabled, the date-time when the\
            \ user's password expires."
        permissionProfileId:
          type: string
          description: ""
        permissionProfileName:
          type: string
          description: ""
        profileImageUri:
          type: string
          description: ""
        sendActivationEmail:
          type: string
          description: ""
        sendActivationOnInvalidLogin:
          type: string
          description: "When set to **true**, specifies that an additional activation\
            \ email is sent to the user if they fail a log on before activating their\
            \ account. "
        signatureImageUri:
          type: string
          description: Contains the URI for an endpoint that you can use to retrieve
            the signature image.
        subscribe:
          type: string
          description: ""
        suffixName:
          type: string
          description: "The suffix for the user's name, such as Jr, IV, PhD, etc.\n\
            \nLimit: 50 characters. "
        title:
          type: string
          description: The title of the user.
        uri:
          type: string
          description: ""
        userId:
          type: string
          description: "The user ID of the user being accessed. Generally this is\
            \ the user ID of the authenticated user, but if the authenticated user\
            \ is an Admin on the account, this may be another user the Admin user\
            \ is accessing. **Note**: For the [GET /v2/accounts/{accountId}/envelopes](https://developers.docusign.com/esign-rest-api/reference/Envelopes/Envelopes/listStatusChanges/#envelopesInformation)\
            \ method, the `user_id` query parameter is not implemented and should\
            \ not be used."
        userName:
          type: string
          description: ""
        userProfileLastModifiedDate:
          type: string
          description: The date-time when the user's profile was last modified.
        userSettings:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/nameValue'
        userStatus:
          type: string
          description: |
            Status of the user's account. One of:

            * ActivationRequired
            * ActivationSent
            * Active
            * Closed
            * Disabled
        userType:
          type: string
          description: ""
        workAddress:
          $ref: '#/components/schemas/addressInformation_v2'
      description: ""
      x-ds-definition-name: userInformation
      x-ms-summary: ""
    userInformationList:
      type: object
      properties:
        endPosition:
          type: string
          description: 'The last position in the result set. '
        nextUri:
          type: string
          description: 'The URI for the next chunk of records based on the search
            request. It is `null` if this is the last set of results for the search. '
        previousUri:
          type: string
          description: 'The URI for the prior chunk of records based on the search
            request. It is `null` if this is the first set of results for the search. '
        resultSetSize:
          type: string
          description: 'The number of results returned in this response. '
        startPosition:
          type: string
          description: Starting position of the current result set.
        totalSetSize:
          type: string
          description: The total number of items in the search's result set. It will
            always be greater than or equal to the value of the `resultSetSize` field.
        users:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/userInformation'
      description: ""
      x-ds-definition-name: userInformationList
      x-ms-summary: ""
    userPasswordInformation:
      type: object
      properties:
        currentPassword:
          type: string
          description: The user's current password to be changed.
        email:
          type: string
          description: The user's email address for the associated account.
        forgottenPasswordInfo:
          $ref: '#/components/schemas/forgottenPasswordInformation'
        newPassword:
          type: string
          description: The user's new password.
      description: ""
      x-ds-definition-name: userPasswordInformation
      x-ms-summary: ""
    userPasswordRules:
      type: object
      properties:
        passwordRules:
          $ref: '#/components/schemas/accountPasswordRules'
        userId:
          type: string
          description: "The user ID of the user being accessed. Generally this is\
            \ the user ID of the authenticated user, but if the authenticated user\
            \ is an Admin on the account, this may be another user the Admin user\
            \ is accessing. **Note**: For the [GET /v2/accounts/{accountId}/envelopes](https://developers.docusign.com/esign-rest-api/reference/Envelopes/Envelopes/listStatusChanges/#envelopesInformation)\
            \ method, the `user_id` query parameter is not implemented and should\
            \ not be used."
      description: ""
      x-ds-definition-name: userPasswordRules
      x-ms-summary: ""
    userProfile:
      type: object
      properties:
        address:
          $ref: '#/components/schemas/addressInformation_v2'
        authenticationMethods:
          type: array
          description: "These properties cannot be modified in the PUT. \n\nIndicates\
            \ the authentication methods used by the user."
          items:
            $ref: '#/components/schemas/authenticationMethod'
        companyName:
          type: string
          description: The name of the user's Company.
        displayOrganizationInfo:
          type: string
          description: " When set to **true**, the user's company and title information\
            \ are shown on the ID card. "
        displayPersonalInfo:
          type: string
          description: "When set to **true**, the user's Address and Phone number\
            \ are shown on the ID card."
        displayProfile:
          type: string
          description: "When set to **true**, the user's ID card can be viewed from\
            \ signed documents and envelope history."
        displayUsageHistory:
          type: string
          description: "When set to **true**, the user's usage information is shown\
            \ on the ID card."
        profileImageUri:
          type: string
          description: ""
        title:
          type: string
          description: The title of the user.
        usageHistory:
          $ref: '#/components/schemas/usageHistory'
        userDetails:
          $ref: '#/components/schemas/userInformation'
        userProfileLastModifiedDate:
          type: string
          description: The date-time when the user's profile was last modified.
      description: ""
      x-ds-definition-name: userProfile
      x-ms-summary: ""
    userSettingsInformation:
      type: object
      properties:
        accountManagementGranular:
          $ref: '#/components/schemas/userAccountManagementGranularInformation'
        senderEmailNotifications:
          $ref: '#/components/schemas/senderEmailNotifications'
        signerEmailNotifications:
          $ref: '#/components/schemas/signerEmailNotifications'
        userSettings:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/nameValue'
      description: ""
      x-ds-definition-name: userSettingsInformation
      x-ms-summary: ""
    userSharedItem:
      type: object
      properties:
        errorDetails:
          $ref: '#/components/schemas/errorDetails'
        shared:
          type: string
          description: |
            How the item is shared. One of:

            - `not_shared`
            - `shared_to`
            - `shared_from`
            - `shared_to_and_from`
        user:
          $ref: '#/components/schemas/userInfo'
      description: Information about a shared item.
      x-ds-definition-name: userSharedItem
      x-ms-summary: Information about a shared item.
    userSignature:
      type: object
      properties:
        adoptedDateTime:
          type: string
          description: The date and time the user adopted their signature.
        createdDateTime:
          type: string
          description: Indicates the date and time the item was created.
        dateStampProperties:
          $ref: '#/components/schemas/dateStampProperties'
        errorDetails:
          $ref: '#/components/schemas/errorDetails'
        externalID:
          type: string
          description: ""
        imageType:
          type: string
          description: One of **signature_image** or **initials_image**.
        initials150ImageId:
          type: string
          description: ""
        initialsImageUri:
          type: string
          description: Contains the URI for an endpoint that you can use to retrieve
            the initials image.
        isDefault:
          type: string
          description: ""
        phoneticName:
          type: string
          description: ""
        signature150ImageId:
          type: string
          description: ""
        signatureFont:
          type: string
          description: ""
        signatureId:
          type: string
          description: The ID of the signature being accessed.
        signatureImageUri:
          type: string
          description: Contains the URI for an endpoint that you can use to retrieve
            the signature image.
        signatureInitials:
          type: string
          description: ""
        signatureName:
          type: string
          description: Specifies the user signature name.
        signatureType:
          type: string
          description: ""
        stampFormat:
          type: string
          description: ""
        stampImageUri:
          type: string
          description: ""
        stampSizeMM:
          type: string
          description: ""
        stampType:
          type: string
          description: ""
      description: ""
      x-ds-definition-name: userSignature
      x-ms-summary: ""
    userSignatureDefinition:
      type: object
      properties:
        signatureFont:
          type: string
          description: ""
        signatureId:
          type: string
          description: "Specifies the signature ID associated with the signature name.\
            \ You can use the signature ID in the URI in place of the signature name,\
            \ and the value stored in the `signatureName` property in the body is\
            \ used. This allows the use of special characters (such as \"&\", \"<\"\
            , \">\") in a the signature name. Note that with each update to signatures,\
            \ the returned signature ID might change, so the caller will need to trigger\
            \ off the signature name to get the new signature ID."
        signatureInitials:
          type: string
          description: ""
        signatureName:
          type: string
          description: Specifies the user signature name.
      description: ""
      x-ds-definition-name: userSignatureDefinition
      x-ms-summary: ""
    userSignaturesInformation:
      type: object
      properties:
        userSignatures:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/userSignature'
      description: ""
      x-ds-definition-name: userSignaturesInformation
      x-ms-summary: ""
    userSocialIdResult:
      type: object
      properties:
        socialAccountInformation:
          type: array
          description: "Contains properties that map a DocuSign user to a social account\
            \ (Facebook, Yahoo, etc.)"
          items:
            $ref: '#/components/schemas/socialAccountInformation'
        userId:
          type: string
          description: "The user ID of the user being accessed. Generally this is\
            \ the user ID of the authenticated user, but if the authenticated user\
            \ is an Admin on the account, this may be another user the Admin user\
            \ is accessing. **Note**: For the [GET /v2/accounts/{accountId}/envelopes](https://developers.docusign.com/esign-rest-api/reference/Envelopes/Envelopes/listStatusChanges/#envelopesInformation)\
            \ method, the `user_id` query parameter is not implemented and should\
            \ not be used."
      description: ""
      x-ds-definition-name: userSocialIdResult
      x-ms-summary: ""
    usersResponse:
      type: object
      properties:
        endPosition:
          type: string
          description: 'The last position in the result set. '
        nextUri:
          type: string
          description: 'The URI for the next chunk of records based on the search
            request. It is `null` if this is the last set of results for the search. '
        previousUri:
          type: string
          description: 'The URI for the prior chunk of records based on the search
            request. It is `null` if this is the first set of results for the search. '
        resultSetSize:
          type: string
          description: 'The number of results returned in this response. '
        startPosition:
          type: string
          description: Starting position of the current result set.
        totalSetSize:
          type: string
          description: The total number of items in the search's result set. It will
            always be greater than or equal to the value of the `resultSetSize` field.
        users:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/userInfo'
      description: ""
      x-ds-definition-name: usersResponse
      x-ms-summary: ""
    view:
      type: object
      properties:
        anchorCaseSensitive:
          type: string
          description: |-
            Reserved for DocuSign.
            <!--
            When set to **true**, the anchor string does not consider case when matching strings in the document. The default value is **true**.
            -->
        anchorHorizontalAlignment:
          type: string
          description: |
            Reserved for DocuSign.
            <!--
            Specifies the alignment of anchor tabs with anchor strings. Possible values are **left** or **right**. The default value is **left**.
            -->
        anchorIgnoreIfNotPresent:
          type: string
          description: "When set to **true**, this tab is ignored if anchorString\
            \ is not found in the document."
        anchorMatchWholeWord:
          type: string
          description: |
            Reserved for DocuSign.
            <!--
            When set to **true**, the anchor string in this tab matches whole words only (strings embedded in other strings are ignored.) The default value is **true**.
            -->
        anchorString:
          type: string
          description: Specifies the anchor string.
        anchorUnits:
          type: string
          description: |
            Specifies units of the
            `anchorXOffset` and
            `anchorYOffset`.
            Valid units are:

            - `pixels`
            - `inches`
            - `mms`
            - `cms`
        anchorXOffset:
          type: string
          description: |
            Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.
        anchorYOffset:
          type: string
          description: |
            Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.
        bold:
          type: string
          description: "When set to **true**, the information in the tab is bold."
        buttonText:
          type: string
          description: ""
        conditionalParentLabel:
          type: string
          description: For conditional fields this is the TabLabel of the parent tab
            that controls this tab's visibility.
        conditionalParentValue:
          type: string
          description: |
            For conditional fields, this is the value of the parent tab that controls the tab's visibility.

            If the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use "on" as the value to show that the parent tab is active.
        customTabId:
          type: string
          description: "The DocuSign generated custom tab ID for the custom tab to\
            \ be applied. This can only be used when adding new tabs for a recipient.\
            \ When used, the new tab inherits all the custom tab properties."
        documentId:
          type: string
          description: Specifies the document ID number that the tab is placed on.
            This must refer to an existing Document's ID attribute.
        errorDetails:
          $ref: '#/components/schemas/errorDetails'
        font:
          type: string
          description: |
            The font to be used for the tab value. Supported Fonts include:

            - Default
            - Arial
            - ArialNarrow
            - Calibri
            - CourierNew
            - Garamond
            - Georgia
            - Helvetica
            - LucidaConsole
            - MSGothic
            - MSMincho
            - OCR-A
            - Tahoma
            - TimesNewRoman
            - Trebuchet
            - Verdana
        fontColor:
          type: string
          description: "The font color used for the information in the tab. Possible\
            \ values are: \n\n- Black\n- BrightBlue\n- BrightRed\n- DarkGreen\n- DarkRed\n\
            - Gold\n- Green\n- NavyBlue\n- Purple\n- White\n"
        fontSize:
          type: string
          description: |-
            The font size used for the information in the tab. Possible values are:

            - Size7
            - Size8
            - Size9
            - Size10
            - Size11
            - Size12
            - Size14
            - Size16
            - Size18
            - Size20
            - Size22
            - Size24
            - Size26
            - Size28
            - Size36
            - Size48
            - Size72
        height:
          type: integer
          description: Height of the tab in pixels.
          format: int32
        italic:
          type: string
          description: "When set to **true**, the information in the tab is italic."
        mergeField:
          $ref: '#/components/schemas/mergeField'
        pageNumber:
          type: string
          description: |-
            Specifies the page number on which the tab is located.
            Must be 1 for supplemental documents.
        recipientId:
          type: string
          description: Unique for the recipient. It is used by the tab element to
            indicate which recipient is to sign the Document.
        required:
          type: string
          description: "When set to **true**, the signer is required to fill out this\
            \ tab"
        requiredRead:
          type: string
          description: ""
        status:
          type: string
          description: |
            Tab status
            <!-- todo -->
        tabGroupLabels:
          type: array
          description: ""
          items:
            type: string
        tabId:
          type: string
          description: The unique identifier for the tab.
        tabLabel:
          type: string
          description: |
            The label string associated with the tab.
            The string may be the empty string.
            If no value is provided, the tab type is used as the value.

            Maximum of 500 characters.
        tabOrder:
          type: string
          description: |-
            A positive integer that sets the order the tab is navigated to during signing.

            Tabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.
        templateLocked:
          type: string
          description: "When set to **true**, the sender cannot change any attributes\
            \ of the recipient. Used only when working with template recipients. "
        templateRequired:
          type: string
          description: "When set to **true**, the sender may not remove the recipient.\
            \ Used only when working with template recipients."
        tooltip:
          type: string
          description: ""
        underline:
          type: string
          description: "When set to **true**, the information in the tab is underlined."
        width:
          type: integer
          description: Width of the tab in pixels.
          format: int32
        xPosition:
          type: string
          description: |+
            This property indicates the horizontal offset of the object on the page.
            DocuSign uses 72 DPI when determining position.
            Required. May be zero.

        yPosition:
          type: string
          description: |+
            This property indicates the vertical offset of the object on the page.
            DocuSign uses 72 DPI when determining position.
            Required. May be zero.

      description: |-
        This tab is used with the Approve tab to handle
        supplemental documents.
      x-ds-definition-name: view
      x-ms-summary: |-
        This tab is used with the Approve tab to handle
        supplemental documents.
    viewUrl:
      type: object
      properties:
        url:
          type: string
          description: "The endpoint to which webhook notification messages are sent\
            \ via an HTTP/S POST request. For the DocuSign production platform, the\
            \ url must start with https. For the demo platform, either http or https\
            \ is ok."
      description: ""
      x-ds-definition-name: viewUrl
      x-ms-summary: ""
    watermark:
      type: object
      properties:
        displayAngle:
          type: string
          description: ""
        enabled:
          type: string
          description: ""
        font:
          type: string
          description: |
            The font to be used for the tab value. Supported Fonts include:

            - Default
            - Arial
            - ArialNarrow
            - Calibri
            - CourierNew
            - Garamond
            - Georgia
            - Helvetica
            - LucidaConsole
            - MSGothic
            - MSMincho
            - OCR-A
            - Tahoma
            - TimesNewRoman
            - Trebuchet
            - Verdana
        fontColor:
          type: string
          description: "The font color used for the information in the tab. Possible\
            \ values are: \n\n- Black\n- BrightBlue\n- BrightRed\n- DarkGreen\n- DarkRed\n\
            - Gold\n- Green\n- NavyBlue\n- Purple\n- White\n"
        fontSize:
          type: string
          description: |-
            The font size used for the information in the tab. Possible values are:

            - Size7
            - Size8
            - Size9
            - Size10
            - Size11
            - Size12
            - Size14
            - Size16
            - Size18
            - Size20
            - Size22
            - Size24
            - Size26
            - Size28
            - Size36
            - Size48
            - Size72
        id:
          type: string
          description: ""
        imageBase64:
          type: string
          description: ""
        transparency:
          type: string
          description: ""
        watermarkText:
          type: string
          description: ""
      description: ""
      x-ds-definition-name: watermark
      x-ms-summary: ""
    witness:
      type: object
      properties:
        accessCode:
          type: string
          description: "If a value is provided, the recipient must enter the value\
            \ as the access code to view and sign the envelope. \n\nMaximum Length:\
            \ 50 characters and it must conform to the account's access code format\
            \ setting.\n\nIf blank, but the signer `accessCode` property is set in\
            \ the envelope, then that value is used.\n\nIf blank and the signer `accessCode`\
            \ property is not set, then the access code is not required."
        addAccessCodeToEmail:
          type: string
          description: This Optional attribute indicates that the access code will
            be added to the email sent to the recipient; this nullifies the Security
            measure of Access Code on the recipient.
        agentCanEditEmail:
          type: string
          description: ""
        agentCanEditName:
          type: string
          description: ""
        autoNavigation:
          type: string
          description: "When set to **true**, autonavigation is set for the recipient."
        bulkRecipientsUri:
          type: string
          description: "The URL for the bulk recipient file with the bulk recipient\
            \ information for this envelope, if applicable. This information is read\
            \ only and is only shown after the bulk recipient file is uploaded to\
            \ the envelope by using the PUT method. "
        canSignOffline:
          type: string
          description: "When set to **true**, specifies that the signer can perform\
            \ the signing ceremony offline."
        clientUserId:
          type: string
          description: "Specifies whether the recipient is embedded or remote. \n\n\
            If the `clientUserId` property is not null then the recipient is embedded.\
            \ Use this field to associate the signer with their userId in your app.\
            \ Authenticating the user is the responsibility of your app when you use\
            \ embedded signing.\n\nNote: if the `clientUserId` property is set and\
            \ either `SignerMustHaveAccount` or `SignerMustLoginToSign` property of\
            \ the account settings is set to  **true**, an error is generated on sending.\
            \ \n\nMaximum length: 100 characters. "
        creationReason:
          type: string
          description: "The reason why the recipient was created (for example, `sender`).\
            \ Read only."
        customFields:
          type: array
          description: An optional array of strings that allows the sender to provide
            custom data about the recipient. This information is returned in the envelope
            status but otherwise not used by DocuSign. Each customField string can
            be a maximum of 100 characters.
          items:
            type: string
        declinedDateTime:
          type: string
          description: The date and time the recipient declined the document. Read
            only.
        declinedReason:
          type: string
          description: The reason the recipient declined the document. Read only.
        defaultRecipient:
          type: string
          description: "When set to **true**, this recipient is the default recipient\
            \ and any tabs generated by the transformPdfFields option are mapped to\
            \ this recipient."
        deliveredDateTime:
          type: string
          description: "Reserved: For DocuSign use only."
        deliveryMethod:
          type: string
          description: "Reserved: For DocuSign use only."
        documentVisibility:
          type: array
          description: "A list of `documentVisibility` objects. Each object in the\
            \ list specifies whether a document in the envelope is visible to this\
            \ recipient. For the envelope to use this functionality, Document Visibility\
            \ must be enabled for the account and the `enforceSignerVisibility` property\
            \ must be set to **true**."
          items:
            $ref: '#/components/schemas/documentVisibility'
        email:
          type: string
          description: ""
        emailNotification:
          $ref: '#/components/schemas/recipientEmailNotification'
        emailRecipientPostSigningURL:
          type: string
          description: ""
        embeddedRecipientStartURL:
          type: string
          description: "Specifies a sender provided valid URL string for redirecting\
            \ an embedded recipient. When using this option, the embedded recipient\
            \ still receives an email from DocuSign, just as a remote recipient would.\
            \ When the document link in the email is clicked the recipient is redirected,\
            \ through DocuSign, to the supplied URL to complete their actions. When\
            \ routing to the URL, the sender's system (the server responding to the\
            \ URL) must request a recipient token to launch a signing session. \n\n\
            If set to `SIGN_AT_DOCUSIGN`, the recipient is directed to an embedded\
            \ signing or viewing process directly at DocuSign. The signing or viewing\
            \ action is initiated by the DocuSign system and the transaction activity\
            \ and Certificate of Completion records will reflect this. In all other\
            \ ways the process is identical to an embedded signing or viewing operation\
            \ that is launched by any partner.\n\nIt is important to remember that\
            \ in a typical embedded workflow the authentication of an embedded recipient\
            \ is the responsibility of the sending application, DocuSign expects that\
            \ senders will follow their own process for establishing the recipient's\
            \ identity. In this workflow the recipient goes through the sending application\
            \ before the embedded signing or viewing process in initiated. However,\
            \ when the sending application sets `EmbeddedRecipientStartURL=SIGN_AT_DOCUSIGN`,\
            \ the recipient goes directly to the embedded signing or viewing process\
            \ bypassing the sending application and any authentication steps the sending\
            \ application would use. In this case, DocuSign recommends that you use\
            \ one of the normal DocuSign authentication features (Access Code, Phone\
            \ Authentication, SMS Authentication, etc.) to verify the identity of\
            \ the recipient.\n\nIf the `clientUserId` property is NOT set, and the\
            \ `embeddedRecipientStartURL` is set, DocuSign will ignore the redirect\
            \ URL and launch the standard signing process for the email recipient.\
            \ Information can be appended to the embedded recipient start URL using\
            \ merge fields. The available merge fields items are: envelopeId, recipientId,\
            \ recipientName, recipientEmail, and customFields. The `customFields`\
            \ property must be set fort the recipient or envelope. The merge fields\
            \ are enclosed in double brackets. \n\n*Example*: \n\n`http://senderHost/[[mergeField1]]/\
            \ beginSigningSession? [[mergeField2]]&[[mergeField3]]` "
        errorDetails:
          $ref: '#/components/schemas/errorDetails'
        excludedDocuments:
          type: array
          description: |-
            Specifies the documents that are not visible to this recipient. Document Visibility must be enabled for the account and the `enforceSignerVisibility` property must be set to **true** for the envelope to use this.

            When enforce signer visibility is enabled, documents with tabs can only be viewed by signers that have a tab on that document. Recipients that have an administrative role (Agent, Editor, or Intermediaries) or informational role (Certified Deliveries or Carbon Copies) can always see all the documents in an envelope, unless they are specifically excluded using this setting when an envelope is sent. Documents that do not have tabs are always visible to all recipients, unless they are specifically excluded using this setting when an envelope is sent.
          items:
            type: string
        faxNumber:
          type: string
          description: Reserved for DocuSign.
        firstName:
          type: string
          description: "The user's first name. \nMaximum Length: 50 characters."
        fullName:
          type: string
          description: Reserved for DocuSign.
        idCheckConfigurationName:
          type: string
          description: "The name of the authentication check to use. This value must\
            \ match one of the authentication types that the account uses. The names\
            \ of these authentication types appear in the web console sending interface\
            \ in the Identify list for a recipient. This setting overrides any default\
            \ authentication setting. Valid values are:\n\n- `Phone Auth $`: The recipient\
            \ must authenticate by using two-factor authentication (2FA). You provide\
            \ the phone number to use for 2FA in the `phoneAuthentication` object.\n\
            - `SMS Auth $`: The recipient must authenticate via SMS. You provide the\
            \ phone number to use in the `smsAuthentication` object.\n- `ID Check\
            \ $`: The  recipient must answer detailed security questions. \n\n**Example**:\
            \ Your account has ID Check and SMS Authentication available. In the web\
            \ console Identify list, these appear as ID Check $ and SMS Auth $. To\
            \ use ID Check in an envelope, the idCheckConfigurationName should be\
            \ ID Check $. For SMS, you would use SMS Auth $, and you would also need\
            \ to add a phone number to the smsAuthentication node."
        idCheckInformationInput:
          $ref: '#/components/schemas/idCheckInformationInput'
        identityVerification:
          $ref: '#/components/schemas/recipientIdentityVerification'
        inheritEmailNotificationConfiguration:
          type: string
          description: "When set to **true** and the envelope recipient creates a\
            \ DocuSign account after signing, the Manage Account Email Notification\
            \ settings are used as the default settings for the recipient's account. "
        isBulkRecipient:
          type: string
          description: "When set to **true**, this signer is a bulk recipient and\
            \ the recipient information is contained in a bulk recipient file. \n\n\
            Note that when this is true the email and name for the recipient becomes\
            \ bulk@recipient.com and \"Bulk Recipient\". These fields can not be changed\
            \ for the bulk recipient. \n"
        lastName:
          type: string
          description: The recipient's last name.
        name:
          type: string
          description: ""
        note:
          type: string
          description: |
            A note sent to the recipient in the signing email.
            This note is unique to this recipient.
            In the user interface,
            it appears near the upper left corner
            of the document
            on the signing screen.

            Maximum Length: 1000 characters.
        offlineAttributes:
          $ref: '#/components/schemas/offlineAttributes'
        phoneAuthentication:
          $ref: '#/components/schemas/recipientPhoneAuthentication'
        proofFile:
          $ref: '#/components/schemas/recipientProofFile'
        recipientAttachments:
          type: array
          description: Reserved for DocuSign.
          items:
            $ref: '#/components/schemas/recipientAttachment'
        recipientAuthenticationStatus:
          $ref: '#/components/schemas/authenticationStatus'
        recipientId:
          type: string
          description: "A local reference that senders use to map recipients to other\
            \ objects, such as specific document tabs. Within an envelope, each `recipientId`\
            \ must be unique, but there is no uniqueness requirement across envelopes.\
            \ For example, many envelopes assign the first recipient a `recipientId`\
            \ of `1`."
        recipientIdGuid:
          type: string
          description: "The globally-unique identifier (GUID) for a specific recipient\
            \ on a specific envelope. If the same recipient is associated with multiple\
            \ envelopes, they will have a different GUID for each one. Read only."
        recipientSignatureProviders:
          type: array
          description: "The default signature provider is the DocuSign Electronic\
            \ signature system. This parameter is used to specify one or more Standards\
            \ Based Signature (digital signature) providers for the signer to use.\
            \ [More information.](https://developers.docusign.com/esign-rest-api/guides/standards-based-signatures)"
          items:
            $ref: '#/components/schemas/recipientSignatureProvider'
        recipientSuppliesTabs:
          type: string
          description: "When set to **true**, specifies that the recipient creates\
            \ the tabs."
        requireIdLookup:
          type: string
          description: "When set to **true**, the recipient is required to use the\
            \ specified ID check method (including Phone and SMS authentication) to\
            \ validate their identity. "
        requireSignerCertificate:
          type: string
          description: "By default, DocuSign signers create electronic signatures.\
            \ This field can be used to require the signer to use a SAFE-BioPharma\
            \ digital certificate for signing.\n\nThis parameter should only be used\
            \ to select a SAFE-BioPharma certificate. New integrations should use\
            \ the `recipientSignatureProviders` parameter for other types of digital\
            \ certificates. \n\nSet this parameter to `safe` to use a SAFE-BioPharma\
            \ certificate.\n\nThe signer must be enrolled in the SAFE program to sign\
            \ with a SAFE certificate."
        requireSignOnPaper:
          type: string
          description: "When set to **true**, the signer must print, sign, and upload\
            \ or fax the signed documents to DocuSign."
        roleName:
          type: string
          description: Optional element. Specifies the role name associated with the
            recipient.<br/><br/>This is required when working with template recipients.
        routingOrder:
          type: string
          description: 'Specifies the routing order of the recipient in the envelope. '
        samlAuthentication:
          $ref: '#/components/schemas/recipientSAMLAuthentication'
        sentDateTime:
          type: string
          description: The UTC DateTime when the envelope was sent. Read only.
        signatureInfo:
          $ref: '#/components/schemas/recipientSignatureInformation'
        signedDateTime:
          type: string
          description: Reserved for DocuSign.
        signInEachLocation:
          type: string
          description: "When set to **true** and the feature is enabled in the sender's\
            \ account, the signing recipient is required to draw signatures and initials\
            \ at each signature/initial tab (instead of adopting a signature/initial\
            \ style or only drawing a signature/initial once)."
        signingGroupId:
          type: string
          description: "Optional. The ID of the [signing group](https://support.docusign.com/en/guides/ndse-user-guide-signing-groups).\n\
            \n**Note**: When you send an envelope to a signing group, anyone in the\
            \ group can open it and sign it with their own signature. For this reason,\
            \ we recommend that you do not include non-signer recipients (such as\
            \ carbon copy recipients) in the same signing group as signer recipients.\
            \ However, you could create a second signing group for the non-signer\
            \ recipients and change the default action of Needs to Sign to a different\
            \ value, such as Receives a Copy. "
        signingGroupName:
          type: string
          description: "The display name for the signing group. \n\nMaximum Length:\
            \ 100 characters. "
        signingGroupUsers:
          type: array
          description: A complex type that contains information about users in the
            signing group.
          items:
            $ref: '#/components/schemas/userInfo'
        smsAuthentication:
          $ref: '#/components/schemas/recipientSMSAuthentication'
        socialAuthentications:
          type: array
          description: ' Lists the social ID type that can be used for recipient authentication.'
          items:
            $ref: '#/components/schemas/socialAuthentication'
        status:
          type: string
          description: Item status. <!-- TODO -->
        tabs:
          $ref: '#/components/schemas/EnvelopeRecipientTabs'
        templateLocked:
          type: string
          description: "When set to **true**, the sender cannot change any attributes\
            \ of the recipient. Used only when working with template recipients. "
        templateRequired:
          type: string
          description: "When set to **true**, the sender may not remove the recipient.\
            \ Used only when working with template recipients."
        totalTabCount:
          type: string
          description: The total number of tabs in the documents. Read only.
        userId:
          type: string
          description: "The user ID of the user being accessed. Generally this is\
            \ the user ID of the authenticated user, but if the authenticated user\
            \ is an Admin on the account, this may be another user the Admin user\
            \ is accessing. **Note**: For the [GET /v2/accounts/{accountId}/envelopes](https://developers.docusign.com/esign-rest-api/reference/Envelopes/Envelopes/listStatusChanges/#envelopesInformation)\
            \ method, the `user_id` query parameter is not implemented and should\
            \ not be used."
        witnessFor:
          type: string
          description: ""
        witnessForGuid:
          type: string
          description: ""
      description: ""
      x-ds-definition-name: witness
      x-ms-summary: ""
    workspace:
      type: object
      properties:
        billableAccountId:
          type: string
          description: ""
        created:
          type: string
          description: The UTC DateTime when the workspace user authorization was
            created.
        createdByInformation:
          $ref: '#/components/schemas/workspaceUser'
        lastModified:
          type: string
          description: Utc date and time the comment was last updated (can only be
            done by creator.)
        lastModifiedByInformation:
          $ref: '#/components/schemas/workspaceUser'
        status:
          type: string
          description: Item status. <!-- TODO -->
        workspaceBaseUrl:
          type: string
          description: The relative URL that may be used to access the workspace.
        workspaceDescription:
          type: string
          description: Text describing the purpose of the workspace.
        workspaceId:
          type: string
          description: Specifies the workspace ID GUID.
        workspaceName:
          type: string
          description: The name of the workspace.
        workspaceUri:
          type: string
          description: The relative URI that may be used to access the workspace.
      description: ""
      x-ds-definition-name: workspace
      x-ms-summary: ""
    workspaceFolderContents:
      type: object
      properties:
        endPosition:
          type: string
          description: 'The last position in the result set. '
        folder:
          $ref: '#/components/schemas/workspaceItem'
        items:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/workspaceItem'
        parentFolders:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/workspaceItem'
        resultSetSize:
          type: string
          description: 'The number of results returned in this response. '
        startPosition:
          type: string
          description: Starting position of the current result set.
        totalSetSize:
          type: string
          description: The total number of items in the search's result set. It will
            always be greater than or equal to the value of the `resultSetSize` field.
        workspaceId:
          type: string
          description: "The id of the workspace, always populated."
      description: Provides properties that describe the contents of a workspace folder.
      x-ds-definition-name: workspaceFolderContents
      x-ms-summary: Provides properties that describe the contents of a workspace
        folder.
    workspaceItem:
      type: object
      properties:
        callerAuthorization:
          $ref: '#/components/schemas/workspaceUserAuthorization'
        contentType:
          type: string
          description: ""
        created:
          type: string
          description: The UTC DateTime when the workspace user authorization was
            created.
        createdById:
          type: string
          description: ""
        createdByInformation:
          $ref: '#/components/schemas/workspaceUser'
        extension:
          type: string
          description: ""
        fileSize:
          type: string
          description: ""
        fileUri:
          type: string
          description: ""
        id:
          type: string
          description: ""
        isPublic:
          type: string
          description: " If true, this supersedes need for bit mask permission with\
            \ workspaceUserAuthorization"
        lastModified:
          type: string
          description: Utc date and time the comment was last updated (can only be
            done by creator.)
        lastModifiedById:
          type: string
          description: ""
        lastModifiedByInformation:
          $ref: '#/components/schemas/workspaceUser'
        name:
          type: string
          description: ""
        pageCount:
          type: string
          description: ""
        parentFolderId:
          type: string
          description: ""
        parentFolderUri:
          type: string
          description: ""
        type:
          type: string
          description: "Type of the user. Valid values: type_owner, type_participant."
        uri:
          type: string
          description: ""
      description: ""
      x-ds-definition-name: workspaceItem
      x-ms-summary: ""
    workspaceItemList:
      type: object
      properties:
        items:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/workspaceItem'
      description: Provides properties that describe the items contained in a workspace.
      x-ds-definition-name: workspaceItemList
      x-ms-summary: Provides properties that describe the items contained in a workspace.
    workspaceList:
      type: object
      properties:
        endPosition:
          type: string
          description: 'The last position in the result set. '
        resultSetSize:
          type: string
          description: 'The number of results returned in this response. '
        startPosition:
          type: string
          description: Starting position of the current result set.
        totalSetSize:
          type: string
          description: The total number of items in the search's result set. It will
            always be greater than or equal to the value of the `resultSetSize` field.
        workspaces:
          type: array
          description: A list of workspaces.
          items:
            $ref: '#/components/schemas/workspace'
      description: Provides properties that describe the workspaces avaialble.
      x-ds-definition-name: workspaceList
      x-ms-summary: Provides properties that describe the workspaces avaialble.
    workspaceUser:
      type: object
      properties:
        accountId:
          type: string
          description: The account ID associated with the envelope.
        accountName:
          type: string
          description: The name of the account that the workspace user belongs to.
        activeSince:
          type: string
          description: ""
        created:
          type: string
          description: The UTC DateTime when the workspace user was created.
        createdById:
          type: string
          description: ""
        email:
          type: string
          description: ""
        errorDetails:
          $ref: '#/components/schemas/errorDetails'
        lastModified:
          type: string
          description: Utc date and time the comment was last updated (can only be
            done by creator.)
        lastModifiedById:
          type: string
          description: ""
        status:
          type: string
          description: "Filters the results by user status.\nYou can specify a comma-separated\n\
            list of the following statuses:\n\n* ActivationRequired \n* ActivationSent\
            \ \n* Active\n* Closed \n* Disabled"
        type:
          type: string
          description: "Type of the user. Valid values: type_owner, type_participant."
        userId:
          type: string
          description: "The user ID of the user being accessed. Generally this is\
            \ the user ID of the authenticated user, but if the authenticated user\
            \ is an Admin on the account, this may be another user the Admin user\
            \ is accessing. **Note**: For the [GET /v2/accounts/{accountId}/envelopes](https://developers.docusign.com/esign-rest-api/reference/Envelopes/Envelopes/listStatusChanges/#envelopesInformation)\
            \ method, the `user_id` query parameter is not implemented and should\
            \ not be used."
        userName:
          type: string
          description: ""
        workspaceId:
          type: string
          description: Specifies the workspace ID GUID.
        workspaceUserBaseUrl:
          type: string
          description: The relative URI that may be used to access a workspace user.
        workspaceUserId:
          type: string
          description: ""
      description: 'A workspaceUser representing the user. This property is only returned
        in response to user specific GET call. '
      x-ds-definition-name: workspaceUser
      x-ms-summary: 'A workspaceUser representing the user. This property is only
        returned in response to user specific GET call. '
    workspaceUserAuthorization:
      type: object
      properties:
        canDelete:
          type: string
          description: ""
        canMove:
          type: string
          description: ""
        canTransact:
          type: string
          description: ""
        canView:
          type: string
          description: ""
        created:
          type: string
          description: The UTC DateTime when the workspace user authorization was
            created.
        createdById:
          type: string
          description: ""
        errorDetails:
          $ref: '#/components/schemas/errorDetails'
        modified:
          type: string
          description: ""
        modifiedById:
          type: string
          description: ""
        workspaceUserId:
          type: string
          description: ""
        workspaceUserInformation:
          $ref: '#/components/schemas/workspaceUser'
      description: Provides properties that describe user authorization to a workspace.
      x-ds-definition-name: workspaceUserAuthorization
      x-ms-summary: Provides properties that describe user authorization to a workspace.
    zip:
      type: object
      properties:
        anchorCaseSensitive:
          type: string
          description: |-
            Reserved for DocuSign.
            <!--
            When set to **true**, the anchor string does not consider case when matching strings in the document. The default value is **true**.
            -->
        anchorHorizontalAlignment:
          type: string
          description: |
            Reserved for DocuSign.
            <!--
            Specifies the alignment of anchor tabs with anchor strings. Possible values are **left** or **right**. The default value is **left**.
            -->
        anchorIgnoreIfNotPresent:
          type: string
          description: "When set to **true**, this tab is ignored if anchorString\
            \ is not found in the document."
        anchorMatchWholeWord:
          type: string
          description: |
            Reserved for DocuSign.
            <!--
            When set to **true**, the anchor string in this tab matches whole words only (strings embedded in other strings are ignored.) The default value is **true**.
            -->
        anchorString:
          type: string
          description: Specifies the anchor string.
        anchorUnits:
          type: string
          description: |
            Specifies units of the
            `anchorXOffset` and
            `anchorYOffset`.
            Valid units are:

            - `pixels`
            - `inches`
            - `mms`
            - `cms`
        anchorXOffset:
          type: string
          description: |
            Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.
        anchorYOffset:
          type: string
          description: |
            Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.
        bold:
          type: string
          description: "When set to **true**, the information in the tab is bold."
        concealValueOnDocument:
          type: string
          description: |-
            When set to **true**, the field appears normally while the recipient is adding or modifying the information in the field, but the data is not visible (the characters are hidden by asterisks) to any other signer or the sender.

            When an envelope is completed the information is available to the sender through the Form Data link in the DocuSign Console.

            This setting applies only to text boxes and does not affect list boxes, radio buttons, or check boxes.
        conditionalParentLabel:
          type: string
          description: For conditional fields this is the TabLabel of the parent tab
            that controls this tab's visibility.
        conditionalParentValue:
          type: string
          description: |
            For conditional fields, this is the value of the parent tab that controls the tab's visibility.

            If the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use "on" as the value to show that the parent tab is active.
        customTabId:
          type: string
          description: "The DocuSign generated custom tab ID for the custom tab to\
            \ be applied. This can only be used when adding new tabs for a recipient.\
            \ When used, the new tab inherits all the custom tab properties."
        disableAutoSize:
          type: string
          description: "When set to **true**, disables the auto sizing of single line\
            \ text boxes in the signing screen when the signer enters data. If disabled\
            \ users will only be able enter as much data as the text box can hold.\
            \ By default this is false. This property only affects single line text\
            \ boxes."
        documentId:
          type: string
          description: Specifies the document ID number that the tab is placed on.
            This must refer to an existing Document's ID attribute.
        errorDetails:
          $ref: '#/components/schemas/errorDetails'
        font:
          type: string
          description: |
            The font to be used for the tab value. Supported Fonts include:

            - Default
            - Arial
            - ArialNarrow
            - Calibri
            - CourierNew
            - Garamond
            - Georgia
            - Helvetica
            - LucidaConsole
            - MSGothic
            - MSMincho
            - OCR-A
            - Tahoma
            - TimesNewRoman
            - Trebuchet
            - Verdana
        fontColor:
          type: string
          description: "The font color used for the information in the tab. Possible\
            \ values are: \n\n- Black\n- BrightBlue\n- BrightRed\n- DarkGreen\n- DarkRed\n\
            - Gold\n- Green\n- NavyBlue\n- Purple\n- White\n"
        fontSize:
          type: string
          description: |-
            The font size used for the information in the tab. Possible values are:

            - Size7
            - Size8
            - Size9
            - Size10
            - Size11
            - Size12
            - Size14
            - Size16
            - Size18
            - Size20
            - Size22
            - Size24
            - Size26
            - Size28
            - Size36
            - Size48
            - Size72
        italic:
          type: string
          description: "When set to **true**, the information in the tab is italic."
        locked:
          type: string
          description: "When set to **true**, the signer cannot change the data of\
            \ the custom tab."
        maxLength:
          type: integer
          description: An optional value that describes the maximum length of the
            property when the property is a string.
          format: int32
        mergeField:
          $ref: '#/components/schemas/mergeField'
        name:
          type: string
          description: ""
        originalValue:
          type: string
          description: 'The initial value of the tab when it was sent to the recipient. '
        pageNumber:
          type: string
          description: |-
            Specifies the page number on which the tab is located.
            Must be 1 for supplemental documents.
        recipientId:
          type: string
          description: Unique for the recipient. It is used by the tab element to
            indicate which recipient is to sign the Document.
        requireAll:
          type: string
          description: "When set to **true** and shared is true, information must\
            \ be entered in this field to complete the envelope. "
        required:
          type: string
          description: "When set to **true**, the signer is required to fill out this\
            \ tab"
        requireInitialOnSharedChange:
          type: string
          description: "Optional element for field markup. When set to **true**, the\
            \ signer is required to initial when they modify a shared field."
        senderRequired:
          type: string
          description: "When set to **true**, the sender must populate the tab before\
            \ an envelope can be sent using the template. \n\nThis value tab can only\
            \ be changed by modifying (PUT) the template. \n\nTabs with a `senderRequired`\
            \ value of true cannot be deleted from an envelope."
        shared:
          type: string
          description: "When set to **true**, this custom tab is shared."
        status:
          type: string
          description: |
            Tab status
            <!-- todo -->
        tabGroupLabels:
          type: array
          description: ""
          items:
            type: string
        tabId:
          type: string
          description: The unique identifier for the tab.
        tabLabel:
          type: string
          description: |
            The label string associated with the tab.
            The string may be the empty string.
            If no value is provided, the tab type is used as the value.

            Maximum of 500 characters.
        tabOrder:
          type: string
          description: |-
            A positive integer that sets the order the tab is navigated to during signing.

            Tabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.
        templateLocked:
          type: string
          description: "When set to **true**, the sender cannot change any attributes\
            \ of the recipient. Used only when working with template recipients. "
        templateRequired:
          type: string
          description: "When set to **true**, the sender may not remove the recipient.\
            \ Used only when working with template recipients."
        tooltip:
          type: string
          description: ""
        underline:
          type: string
          description: "When set to **true**, the information in the tab is underlined."
        useDash4:
          type: string
          description: ""
        validationMessage:
          type: string
          description: The message displayed if the custom tab fails input validation
            (either custom of embedded).
        validationPattern:
          type: string
          description: A regular expressionn used to validate input for the tab.
        value:
          type: string
          description: 'Specifies the value of the tab. '
        width:
          type: integer
          description: Width of the tab in pixels.
          format: int32
        xPosition:
          type: string
          description: |
            This property indicates the horizontal offset of the object on the page.
            DocuSign uses 72 DPI when determining position.
            Required. May be zero.

            To improve the tab's position on the document,
            DocuSign recommends
            adjusting `xPosition`
            and `yPosition`
            coordinates
            by (-3, -2)
        yPosition:
          type: string
          description: |
            This property indicates the vertical offset of the object on the page.
            DocuSign uses 72 DPI when determining position.
            Required. May be zero.

            To improve the tab's position on the document,
            DocuSign recommends
            adjusting `xPosition`
            and `yPosition`
            coordinates
            by (-3, -2)
      description: |
        A tab that allows the recipient to enter a ZIP code. The ZIP
        code can be five digits or nine digits in the ZIP+4 format.
        The zip code can be typed with or without dashes. It uses
        the same parameters as a Text tab, with the validation
        message and pattern set for ZIP code information.
      x-ds-definition-name: zip
      x-ms-summary: |
        A tab that allows the recipient to enter a ZIP code. The ZIP
        code can be five digits or nine digits in the ZIP+4 format.
        The zip code can be typed with or without dashes. It uses
        the same parameters as a Text tab, with the validation
        message and pattern set for ZIP code information.
    AccountBrands:
      type: object
      properties:
        brands:
          type: array
          description: The list of brands.
          items:
            $ref: '#/components/schemas/brand'
        recipientBrandIdDefault:
          type: string
          description: The brand seen by envelope recipients when a brand is not explicitly
            set.
        senderBrandIdDefault:
          type: string
          description: The brand seen by envelope senders when a brand is not explicitly
            set.
      description: Brand management for accounts
      x-ds-definition-name: brandsResponse
      x-ds-category: Accounts
      x-ds-order: "10"
      x-ms-summary: Brand management for accounts
    AccountConsumerDisclosures:
      type: object
      properties:
        accountEsignId:
          type: string
          description: A GUID identifying the account associated with the consumer
            disclosure
        allowCDWithdraw:
          type: string
          description: Indicates whether the customer can withdraw their acceptance
            of the consumer disclosure.
        allowCDWithdrawMetadata:
          $ref: '#/components/schemas/settingsMetadata'
        changeEmail:
          type: string
          description: ""
        changeEmailOther:
          type: string
          description: ""
        companyName:
          type: string
          description: The name of the company associated with the consumer disclosure.
        companyPhone:
          type: string
          description: The phone number of the company associated with the consumer
            disclosure.
        copyCostPerPage:
          type: string
          description: ""
        copyFeeCollectionMethod:
          type: string
          description: |-
            Specifies the fee collection method for cases in which the customer requires paper copies of the document.

            Maximum Length: 255 characters
        copyRequestEmail:
          type: string
          description: ""
        custom:
          type: string
          description: ""
        enableEsign:
          type: string
          description: ""
        esignAgreement:
          type: string
          description: The Electronic Record and Signature Disclosure text. The disclosure
            text includes the html formatting.
        esignText:
          type: string
          description: ""
        languageCode:
          type: string
          description: ""
        mustAgreeToEsign:
          type: string
          description: ""
        pdfId:
          type: string
          description: "**Deprecated**\n\nThe `\x80\x9cpdfId` property in the consumer_disclosure\
            \ PUT request is deprecated. For security reasons going forward, any value\
            \ provided in the request packet must be ignored. "
        useBrand:
          type: string
          description: ""
        useConsumerDisclosureWithinAccount:
          type: string
          description: ""
        useConsumerDisclosureWithinAccountMetadata:
          $ref: '#/components/schemas/settingsMetadata'
        withdrawAddressLine1:
          type: string
          description: "Contains the first address line of the postal address to which\
            \ a customer can send a consent withdrawal notification.\n\nMaximum length:\
            \ 100 characters. "
        withdrawAddressLine2:
          type: string
          description: "Contains the second address line of the postal address to\
            \ which a customer can send a consent withdrawal notification.\n\nMaximum\
            \ length: 100 characters. "
        withdrawByEmail:
          type: string
          description: Indicates whether the customer can withdraw consent by email.
        withdrawByMail:
          type: string
          description: Indicates whether the customer can withdraw consent by postal
            mail.
        withdrawByPhone:
          type: string
          description: Indicates whether the customer can withdraw consent by phone.
        withdrawCity:
          type: string
          description: "Contains the city of the postal address to which a customer\
            \ can send a consent withdrawal notification.\n\nMaximum length: 50 characters. "
        withdrawConsequences:
          type: string
          description: Indicates the consequences of withdrawing consent.
        withdrawEmail:
          type: string
          description: "Contains the email address to which a customer can send a\
            \ consent withdrawal notification.\n\nMaximum length: 100 characters. "
        withdrawOther:
          type: string
          description: |-
            Indicates other information need to withdraw consent.

            Maximum length: 255 characters.
        withdrawPhone:
          type: string
          description: "Contains the phone number which a customer can call to register\
            \ consent withdrawal notification.\n\nMaximum length: 20 characters. "
        withdrawPostalCode:
          type: string
          description: "Contains the postal code of the postal address to which a\
            \ customer can send a consent withdrawal notification.\n\nMaximum length:\
            \ 20 characters. "
        withdrawState:
          type: string
          description: Contains the state of the postal address to which a customer
            can send a consent withdrawal notification.
      description: Account consumer disclosures
      x-ds-definition-name: consumerDisclosure
      x-ds-category: Accounts
      x-ds-order: "20"
      x-ms-summary: Account consumer disclosures
    AccountCustomFields:
      type: object
      properties:
        listCustomFields:
          type: array
          description: An array of list custom fields.
          items:
            $ref: '#/components/schemas/listCustomField'
        textCustomFields:
          type: array
          description: An array of text custom fields.
          items:
            $ref: '#/components/schemas/textCustomField'
      description: Custom Fields
      x-ds-definition-name: customFields
      x-ds-category: Accounts
      x-ds-order: "30"
      x-ms-summary: Custom Fields
    EnvelopeCustomFields:
      type: object
      properties:
        listCustomFields:
          type: array
          description: An array of list custom fields.
          items:
            $ref: '#/components/schemas/listCustomField'
        textCustomFields:
          type: array
          description: An array of text custom fields.
          items:
            $ref: '#/components/schemas/textCustomField'
      description: Envelope custom fields
      x-ds-definition-name: customFields
      x-ds-category: Envelopes
      x-ds-order: "70"
      x-ms-summary: Envelope custom fields
    EnvelopeDocumentFields:
      type: object
      properties:
        documentFields:
          type: array
          description: "The array of name/value custom data strings to be added to\
            \ a document. Custom document field information is returned in the status,\
            \ but otherwise is not used by DocuSign. The array contains the elements:\
            \ \n\n* name - A string that can be a maximum of 50 characters. \n* value\
            \ - A string that can be a maximum of 200 characters.\n\n*IMPORTANT*:\
            \ If you are using xml, the name/value pair is contained in a nameValue\
            \ element. \n"
          items:
            $ref: '#/components/schemas/nameValue'
      description: Envelope document fields
      x-ds-definition-name: documentFieldsInformation
      x-ds-category: Envelopes
      x-ds-order: "60"
      x-ms-summary: Envelope document fields
    EnvelopeLocks:
      type: object
      properties:
        errorDetails:
          $ref: '#/components/schemas/errorDetails'
        lockDurationInSeconds:
          type: string
          description: |
            Sets the time, in seconds, until the lock expires when there is no activity on the envelope.

            If no value is entered, then the default value of 300 seconds is used. The maximum value is 1,800 seconds.

            The lock duration can be extended.
        lockedByApp:
          type: string
          description: Specifies the friendly name of  the application that is locking
            the envelope.
        lockedByUser:
          $ref: '#/components/schemas/userInfo'
        lockedUntilDateTime:
          type: string
          description: The datetime until the envelope lock expires.
        lockToken:
          type: string
          description: A unique identifier provided to the owner of the envelope lock.   Used
            to prove ownership of the lock.
        lockType:
          type: string
          description: The type of envelope lock.  Currently "edit" is the only supported
            type.
        useScratchPad:
          type: string
          description: "Reserved for future use.\n\nIndicates whether a scratchpad\
            \ is used for editing information.\n "
      description: Envelope locks
      x-ds-definition-name: lockInformation
      x-ds-category: Envelopes
      x-ds-order: "80"
      x-ms-summary: Envelope locks
    EnvelopeRecipients:
      type: object
      properties:
        agents:
          type: array
          description: A complex type defining the management and access rights of
            a recipient assigned assigned as an agent on the document.
          items:
            $ref: '#/components/schemas/agent'
        carbonCopies:
          type: array
          description: "A complex type containing information about recipients who\
            \ should receive a copy of the envelope, but does not need to sign it."
          items:
            $ref: '#/components/schemas/carbonCopy'
        certifiedDeliveries:
          type: array
          description: "A complex type containing information on a recipient the must\
            \ receive the completed documents for the envelope to be completed, but\
            \ the recipient does not need to sign, initial, date, or add information\
            \ to any of the documents."
          items:
            $ref: '#/components/schemas/certifiedDelivery'
        currentRoutingOrder:
          type: string
          description: ""
        editors:
          type: array
          description: A complex type defining the management and access rights of
            a recipient assigned assigned as an editor on the document.
          items:
            $ref: '#/components/schemas/editor'
        errorDetails:
          $ref: '#/components/schemas/errorDetails'
        inPersonSigners:
          type: array
          description: Specifies a signer that is in the same physical location as
            a DocuSign user who will act as a Signing Host for the transaction. The
            recipient added is the Signing Host and new separate Signer Name field
            appears after Sign in person is selected.
          items:
            $ref: '#/components/schemas/inPersonSigner'
        intermediaries:
          type: array
          description: "Identifies a recipient that can, but is not required to, add\
            \ name and email information for recipients at the same or subsequent\
            \ level in the routing order (until subsequent Agents, Editors or Intermediaries\
            \ recipient types are added)."
          items:
            $ref: '#/components/schemas/intermediary'
        recipientCount:
          type: string
          description: |-
            The list of recipient event statuses that will trigger Connect to send updates to the url. It can be a two-part list with:

            * recipientEventStatusCode - The recipient status, this can be Sent, Delivered, Completed, Declined, AuthenticationFailed, and AutoResponded.
            * includeDocuments - When set to **true**, the envelope time zone information is included in the message.
        seals:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/sealSign'
        signers:
          type: array
          description: A complex type containing information about the Signer recipient.
          items:
            $ref: '#/components/schemas/signer'
        witnesses:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/witness'
      description: Envelope recipients
      x-ds-definition-name: recipients
      x-ds-category: Envelopes
      x-ds-order: "20"
      x-ms-summary: Envelope recipients
    EnvelopeRecipientTabs:
      type: object
      properties:
        approveTabs:
          type: array
          description: "A list of\n[Approve tabs][approve].\n\n\nThis tab allows\n\
            the recipient to approve documents without\nplacing a signature or initials\
            \ on the document. If the\nrecipient clicks the tab during the signing\
            \ process, the\nrecipient is considered to have signed the document. No\n\
            information is shown on the document of the approval, but it\nis recorded\
            \ as a signature in the envelope history.\n\n[approve]:\t\t      https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/approve\n"
          items:
            $ref: '#/components/schemas/approve'
        checkboxTabs:
          type: array
          description: |
            A list of
            [Checkbox tabs][checkbox].


            This tab allows the recipient to select a yes/no (on/off) option.


            [checkbox]:  https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/checkbox
          items:
            $ref: '#/components/schemas/checkbox'
        companyTabs:
          type: array
          description: "A list of \n[Company tabs][company].\n\n\nThis tab displays\
            \ the recipient's company name.\n\n\n\n[company]: https://developers.docusign.com/esign-rest-api/reference/EnvelopeRecipientTabs/create/#/definitions/company\
            \ \n"
          items:
            $ref: '#/components/schemas/company'
        dateSignedTabs:
          type: array
          description: "A list of \n[Date Signed tabs][dateSigned]\n\n\nThis tab displays\
            \ the date that the recipient signed the\ndocument.\n\n[dateSigned]: https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/dateSigned\
            \ \n"
          items:
            $ref: '#/components/schemas/dateSigned'
        dateTabs:
          type: array
          description: "A list of \n[Date tabs][date].\n\n\nThis tab allows the recipient\
            \ to enter a date. Date tabs\nare one-line fields that allow date information\
            \ to be\nentered in any format. The tooltip for this tab recommends\n\
            entering the date as MM/DD/YYYY, but this is not enforced.\nThe format\
            \ entered by the signer is retained. If you need a\nparticular date format\
            \ enforced, DocuSign recommends using a\nText tab with a validation pattern\
            \ and a validation message\nto enforce the format.\n\n\n[date]: https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/date\
            \ \n"
          items:
            $ref: '#/components/schemas/date'
        declineTabs:
          type: array
          description: "A list of \n[Decline tabs][decline].\n\nThis tab allows the\
            \ recipient the option of declining an\nenvelope. If the recipient clicks\
            \ the tab during the signing\nprocess, the envelope is voided.\n\n\n[decline]:\
            \ https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/decline\
            \ \n"
          items:
            $ref: '#/components/schemas/decline'
        emailAddressTabs:
          type: array
          description: "A list of \n[Email Address tabs][emailAddress].\n\nThis tab\
            \ \ndisplays the recipient's email as entered in the\nrecipient information.\n\
            \n\n[emailAddress]: https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/emailAddress\
            \ \n"
          items:
            $ref: '#/components/schemas/emailAddress'
        emailTabs:
          type: array
          description: "A list of \n[Email tabs][email].\n\nThis tab \nallows the\
            \ recipient to enter an email address.\nThis is a one-line field that\
            \ checks that a valid email\naddress is entered. It uses the same parameters\
            \ as a Text\ntab, with the validation message and pattern set for email\n\
            information.\n\nWhen getting information that includes\nthis tab type,\
            \ the original value of the tab when the\nassociated envelope was sent\
            \ is included in the response.\n\n[email]: https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/email\
            \ \n"
          items:
            $ref: '#/components/schemas/email'
        envelopeIdTabs:
          type: array
          description: "A list of \n[Envelope ID tabs][envelopeId].\n\nThis tab \n\
            displays the envelope ID. Recipients cannot enter\nor change the information\
            \ in this tab.\n\n\n[envelopeId]: https://developers.docusign.com/esign-rest-api/reference/EnvelopeRecipientTabs/create/#/definitions/envelopeId\
            \ \n"
          items:
            $ref: '#/components/schemas/envelopeId'
        firstNameTabs:
          type: array
          description: "A list of \n[First Name tabs][firstName].\n\nThis tab \ndisplays\
            \ the recipient's first name. It\ntakes the recipient's name as entered\
            \ in the recipient\ninformation, splits it into sections based on spaces\
            \ and\nuses the first section as the first name.\n\n\n[firstName]: https://developers.docusign.com/esign-rest-api/reference/EnvelopeRecipientTabs/create/#/definitions/firstName\
            \ \n"
          items:
            $ref: '#/components/schemas/firstName'
        formulaTabs:
          type: array
          description: "A list of [Formula tabs][formulaTab].\n\nThe value of a formula\
            \ tab is calculated\nfrom the values of other\nnumber or date tabs in\
            \ the document.\nWhen the recipient completes the underlying fields,\n\
            the formula tab calculates and displays the result.\n\nThe `formula` property\
            \ of the tab\ncontains the references\nto the underlying tabs.\nSee [Calculated\
            \ Fields][calculatedfields]\nin the DocuSign Support Center\nto learn\
            \ more about formulas.\n\nIf a formula tab contains\na `paymentDetails`\
            \ property,\nthe tab is considered a payment item.\nSee [Requesting Payments\
            \ Along with Signatures][paymentguide]\nin the DocuSign Support Center\n\
            to learn more about payments.\n\n[calculatedfields]: https://support.docusign.com/en/guides/ndse-user-guide-calculated-fields\n\
            [paymentguide]:     https://support.docusign.com/en/guides/requesting-payments-along-with-signatures\n\
            [formulaTab]:\t    \thttps://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/formulaTab\n"
          items:
            $ref: '#/components/schemas/formulaTab'
        fullNameTabs:
          type: array
          description: "A list of \n[Full Name tabs][fullName].\n\nThis tab \ndisplays\
            \ the recipient's full name.\n\n\n[fullName]: https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/fullName\
            \ \n"
          items:
            $ref: '#/components/schemas/fullName'
        initialHereTabs:
          type: array
          description: "A list of \n[Initial Here tabs][initialHere].\n\nThis tab\
            \ allows the recipient to initial the document. May\nbe optional.\n\n\
            [initialHere]: https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/initialHere\
            \ \n"
          items:
            $ref: '#/components/schemas/initialHere'
        lastNameTabs:
          type: array
          description: "A list of \n[Last Name tabs][lastName].\n\nThis tab \ndisplays\
            \ the recipient's last name. It\ntakes the recipient's name as entered\
            \ in the recipient\ninformation, splits it into sections based on spaces\
            \ and\nuses the last section as the last name.\n\n\n[lastName]: https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/lastName\
            \ \n"
          items:
            $ref: '#/components/schemas/lastName'
        listTabs:
          type: array
          description: "A list of \n[list tabs][list].\n\nThis tab offers a list of\
            \ options to choose from. The\n`listItems` property is used to specify\
            \ the selectable\noptions.\n\n\n\n[list]: https://developers.docusign.com/esign-rest-api/reference/EnvelopeRecipientTabs/create/#/definitions/list\
            \ \n"
          items:
            $ref: '#/components/schemas/list'
        notarizeTabs:
          type: array
          description: "A list of \n[Notarize tabs][notarize].\n\nA notarize tab is\
            \ a tab that alerts notary recipients that\nthey must take action on the\
            \ page.\nOnly one notarize tab can appear on a page.\n\n[notarize]: https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/notarize\
            \ \n"
          items:
            $ref: '#/components/schemas/notarize'
        noteTabs:
          type: array
          description: "A list of \n[Note tabs][note].\n\nThis tab  displays additional\
            \ information, in the form of a\nnote, for the recipient.\n\n[note]: https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/note\
            \ \n"
          items:
            $ref: '#/components/schemas/note'
        numberTabs:
          type: array
          description: "A list of \n[Number tabs][number].\n\nThis tab allows the\
            \ recipient to enter numbers and decimal\n(.) points.\n\n\n\n[number]:\
            \ https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/number\
            \ \n"
          items:
            $ref: '#/components/schemas/number'
        radioGroupTabs:
          type: array
          description: "A list of \n[Radio Group tabs][radioGroup].\n\nThis tab \n\
            This group tab is used to place radio buttons on a document.\nThe `radios`\
            \ property is used to add and place the radio\nbuttons associated with\
            \ the group. Only one radio button can\nbe selected in a group.\n\n\n\
            [radioGroup]: https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/radioGroup\
            \ \n"
          items:
            $ref: '#/components/schemas/radioGroup'
        signerAttachmentTabs:
          type: array
          description: "A list of \n[Signer Attachment tabs][signerAttachment].\n\n\
            This tab \nallows the recipient to attach supporting\ndocuments to an\
            \ envelope.\n\n\n[signerAttachment]: https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/signerAttachment\
            \ \n"
          items:
            $ref: '#/components/schemas/signerAttachment'
        signHereTabs:
          type: array
          description: "A list of \n[Sign Here tabs][signHere].\n\nThis tab  allows\
            \ the recipient to sign a document. May be\noptional.\n\n[signHere]: https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/signHere\
            \ \n"
          items:
            $ref: '#/components/schemas/signHere'
        smartSectionTabs:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/smartSection'
        ssnTabs:
          type: array
          description: "A list of \n[SSN tabs][ssn].\n\nThis tab \nis a one-line field\
            \ that allows the recipient to enter a Social\nSecurity Number. The SSN\
            \ can be typed with or without\ndashes. It uses the same parameters as\
            \ a Text tab, with the\nvalidation message and pattern set for SSN information.\n\
            \n\n[ssn]: https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/ssn\
            \ \n"
          items:
            $ref: '#/components/schemas/ssn'
        textTabs:
          type: array
          description: "A list of \n[Text tabs][text].\n\nThis tab \nA tab that allows\
            \ the recipient to enter any type of text.\n\n[text]: https://developers.docusign.com/esign-rest-api/reference/EnvelopeRecipientTabs/create/#/definitions/text\
            \ \n"
          items:
            $ref: '#/components/schemas/text'
        titleTabs:
          type: array
          description: "A list of \n[Title tabs][title].\n\nThis tab  displays the\
            \ recipient's title.\n\n\n[title]: https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/title\
            \ \n"
          items:
            $ref: '#/components/schemas/title'
        viewTabs:
          type: array
          description: "A list of \n[View tabs][view].\n\nThis tab \nThis tab is used\
            \ with the Approve tab to handle\nsupplemental documents.\n\n[view]: https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/view\
            \ \n"
          items:
            $ref: '#/components/schemas/view'
        zipTabs:
          type: array
          description: "A list of \n[Zip tabs][zip].\n\nThis tab \nallows the recipient\
            \ to enter a ZIP code. The ZIP\ncode can be five digits or nine digits\
            \ in the ZIP+4 format.\nThe zip code can be typed with or without dashes.\
            \ It uses\nthe same parameters as a Text tab, with the validation\nmessage\
            \ and pattern set for ZIP code information.\n\n\n[zip]: https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/zip\n"
          items:
            $ref: '#/components/schemas/zip'
      description: |
        All of the tabs associated with a recipient. Each property is a list of a type of tab.
      x-ds-definition-name: tabs
      x-ds-category: Envelopes
      x-ds-order: "50"
      x-ms-summary: |
        All of the tabs associated with a recipient. Each property is a list of a type of tab.
    EnvelopeDocumentTabs:
      type: object
      properties:
        approveTabs:
          type: array
          description: "A list of\n[Approve tabs][approve].\n\n\nThis tab allows\n\
            the recipient to approve documents without\nplacing a signature or initials\
            \ on the document. If the\nrecipient clicks the tab during the signing\
            \ process, the\nrecipient is considered to have signed the document. No\n\
            information is shown on the document of the approval, but it\nis recorded\
            \ as a signature in the envelope history.\n\n[approve]:\t\t      https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/approve\n"
          items:
            $ref: '#/components/schemas/approve'
        checkboxTabs:
          type: array
          description: |
            A list of
            [Checkbox tabs][checkbox].


            This tab allows the recipient to select a yes/no (on/off) option.


            [checkbox]:  https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/checkbox
          items:
            $ref: '#/components/schemas/checkbox'
        companyTabs:
          type: array
          description: "A list of \n[Company tabs][company].\n\n\nThis tab displays\
            \ the recipient's company name.\n\n\n\n[company]: https://developers.docusign.com/esign-rest-api/reference/EnvelopeRecipientTabs/create/#/definitions/company\
            \ \n"
          items:
            $ref: '#/components/schemas/company'
        dateSignedTabs:
          type: array
          description: "A list of \n[Date Signed tabs][dateSigned]\n\n\nThis tab displays\
            \ the date that the recipient signed the\ndocument.\n\n[dateSigned]: https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/dateSigned\
            \ \n"
          items:
            $ref: '#/components/schemas/dateSigned'
        dateTabs:
          type: array
          description: "A list of \n[Date tabs][date].\n\n\nThis tab allows the recipient\
            \ to enter a date. Date tabs\nare one-line fields that allow date information\
            \ to be\nentered in any format. The tooltip for this tab recommends\n\
            entering the date as MM/DD/YYYY, but this is not enforced.\nThe format\
            \ entered by the signer is retained. If you need a\nparticular date format\
            \ enforced, DocuSign recommends using a\nText tab with a validation pattern\
            \ and a validation message\nto enforce the format.\n\n\n[date]: https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/date\
            \ \n"
          items:
            $ref: '#/components/schemas/date'
        declineTabs:
          type: array
          description: "A list of \n[Decline tabs][decline].\n\nThis tab allows the\
            \ recipient the option of declining an\nenvelope. If the recipient clicks\
            \ the tab during the signing\nprocess, the envelope is voided.\n\n\n[decline]:\
            \ https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/decline\
            \ \n"
          items:
            $ref: '#/components/schemas/decline'
        emailAddressTabs:
          type: array
          description: "A list of \n[Email Address tabs][emailAddress].\n\nThis tab\
            \ \ndisplays the recipient's email as entered in the\nrecipient information.\n\
            \n\n[emailAddress]: https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/emailAddress\
            \ \n"
          items:
            $ref: '#/components/schemas/emailAddress'
        emailTabs:
          type: array
          description: "A list of \n[Email tabs][email].\n\nThis tab \nallows the\
            \ recipient to enter an email address.\nThis is a one-line field that\
            \ checks that a valid email\naddress is entered. It uses the same parameters\
            \ as a Text\ntab, with the validation message and pattern set for email\n\
            information.\n\nWhen getting information that includes\nthis tab type,\
            \ the original value of the tab when the\nassociated envelope was sent\
            \ is included in the response.\n\n[email]: https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/email\
            \ \n"
          items:
            $ref: '#/components/schemas/email'
        envelopeIdTabs:
          type: array
          description: "A list of \n[Envelope ID tabs][envelopeId].\n\nThis tab \n\
            displays the envelope ID. Recipients cannot enter\nor change the information\
            \ in this tab.\n\n\n[envelopeId]: https://developers.docusign.com/esign-rest-api/reference/EnvelopeRecipientTabs/create/#/definitions/envelopeId\
            \ \n"
          items:
            $ref: '#/components/schemas/envelopeId'
        firstNameTabs:
          type: array
          description: "A list of \n[First Name tabs][firstName].\n\nThis tab \ndisplays\
            \ the recipient's first name. It\ntakes the recipient's name as entered\
            \ in the recipient\ninformation, splits it into sections based on spaces\
            \ and\nuses the first section as the first name.\n\n\n[firstName]: https://developers.docusign.com/esign-rest-api/reference/EnvelopeRecipientTabs/create/#/definitions/firstName\
            \ \n"
          items:
            $ref: '#/components/schemas/firstName'
        formulaTabs:
          type: array
          description: "A list of [Formula tabs][formulaTab].\n\nThe value of a formula\
            \ tab is calculated\nfrom the values of other\nnumber or date tabs in\
            \ the document.\nWhen the recipient completes the underlying fields,\n\
            the formula tab calculates and displays the result.\n\nThe `formula` property\
            \ of the tab\ncontains the references\nto the underlying tabs.\nSee [Calculated\
            \ Fields][calculatedfields]\nin the DocuSign Support Center\nto learn\
            \ more about formulas.\n\nIf a formula tab contains\na `paymentDetails`\
            \ property,\nthe tab is considered a payment item.\nSee [Requesting Payments\
            \ Along with Signatures][paymentguide]\nin the DocuSign Support Center\n\
            to learn more about payments.\n\n[calculatedfields]: https://support.docusign.com/en/guides/ndse-user-guide-calculated-fields\n\
            [paymentguide]:     https://support.docusign.com/en/guides/requesting-payments-along-with-signatures\n\
            [formulaTab]:\t    \thttps://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/formulaTab\n"
          items:
            $ref: '#/components/schemas/formulaTab'
        fullNameTabs:
          type: array
          description: "A list of \n[Full Name tabs][fullName].\n\nThis tab \ndisplays\
            \ the recipient's full name.\n\n\n[fullName]: https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/fullName\
            \ \n"
          items:
            $ref: '#/components/schemas/fullName'
        initialHereTabs:
          type: array
          description: "A list of \n[Initial Here tabs][initialHere].\n\nThis tab\
            \ allows the recipient to initial the document. May\nbe optional.\n\n\
            [initialHere]: https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/initialHere\
            \ \n"
          items:
            $ref: '#/components/schemas/initialHere'
        lastNameTabs:
          type: array
          description: "A list of \n[Last Name tabs][lastName].\n\nThis tab \ndisplays\
            \ the recipient's last name. It\ntakes the recipient's name as entered\
            \ in the recipient\ninformation, splits it into sections based on spaces\
            \ and\nuses the last section as the last name.\n\n\n[lastName]: https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/lastName\
            \ \n"
          items:
            $ref: '#/components/schemas/lastName'
        listTabs:
          type: array
          description: "A list of \n[list tabs][list].\n\nThis tab offers a list of\
            \ options to choose from. The\n`listItems` property is used to specify\
            \ the selectable\noptions.\n\n\n\n[list]: https://developers.docusign.com/esign-rest-api/reference/EnvelopeRecipientTabs/create/#/definitions/list\
            \ \n"
          items:
            $ref: '#/components/schemas/list'
        notarizeTabs:
          type: array
          description: "A list of \n[Notarize tabs][notarize].\n\nA notarize tab is\
            \ a tab that alerts notary recipients that\nthey must take action on the\
            \ page.\nOnly one notarize tab can appear on a page.\n\n[notarize]: https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/notarize\
            \ \n"
          items:
            $ref: '#/components/schemas/notarize'
        noteTabs:
          type: array
          description: "A list of \n[Note tabs][note].\n\nThis tab  displays additional\
            \ information, in the form of a\nnote, for the recipient.\n\n[note]: https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/note\
            \ \n"
          items:
            $ref: '#/components/schemas/note'
        numberTabs:
          type: array
          description: "A list of \n[Number tabs][number].\n\nThis tab allows the\
            \ recipient to enter numbers and decimal\n(.) points.\n\n\n\n[number]:\
            \ https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/number\
            \ \n"
          items:
            $ref: '#/components/schemas/number'
        radioGroupTabs:
          type: array
          description: "A list of \n[Radio Group tabs][radioGroup].\n\nThis tab \n\
            This group tab is used to place radio buttons on a document.\nThe `radios`\
            \ property is used to add and place the radio\nbuttons associated with\
            \ the group. Only one radio button can\nbe selected in a group.\n\n\n\
            [radioGroup]: https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/radioGroup\
            \ \n"
          items:
            $ref: '#/components/schemas/radioGroup'
        signerAttachmentTabs:
          type: array
          description: "A list of \n[Signer Attachment tabs][signerAttachment].\n\n\
            This tab \nallows the recipient to attach supporting\ndocuments to an\
            \ envelope.\n\n\n[signerAttachment]: https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/signerAttachment\
            \ \n"
          items:
            $ref: '#/components/schemas/signerAttachment'
        signHereTabs:
          type: array
          description: "A list of \n[Sign Here tabs][signHere].\n\nThis tab  allows\
            \ the recipient to sign a document. May be\noptional.\n\n[signHere]: https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/signHere\
            \ \n"
          items:
            $ref: '#/components/schemas/signHere'
        smartSectionTabs:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/smartSection'
        ssnTabs:
          type: array
          description: "A list of \n[SSN tabs][ssn].\n\nThis tab \nis a one-line field\
            \ that allows the recipient to enter a Social\nSecurity Number. The SSN\
            \ can be typed with or without\ndashes. It uses the same parameters as\
            \ a Text tab, with the\nvalidation message and pattern set for SSN information.\n\
            \n\n[ssn]: https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/ssn\
            \ \n"
          items:
            $ref: '#/components/schemas/ssn'
        textTabs:
          type: array
          description: "A list of \n[Text tabs][text].\n\nThis tab \nA tab that allows\
            \ the recipient to enter any type of text.\n\n[text]: https://developers.docusign.com/esign-rest-api/reference/EnvelopeRecipientTabs/create/#/definitions/text\
            \ \n"
          items:
            $ref: '#/components/schemas/text'
        titleTabs:
          type: array
          description: "A list of \n[Title tabs][title].\n\nThis tab  displays the\
            \ recipient's title.\n\n\n[title]: https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/title\
            \ \n"
          items:
            $ref: '#/components/schemas/title'
        viewTabs:
          type: array
          description: "A list of \n[View tabs][view].\n\nThis tab \nThis tab is used\
            \ with the Approve tab to handle\nsupplemental documents.\n\n[view]: https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/view\
            \ \n"
          items:
            $ref: '#/components/schemas/view'
        zipTabs:
          type: array
          description: "A list of \n[Zip tabs][zip].\n\nThis tab \nallows the recipient\
            \ to enter a ZIP code. The ZIP\ncode can be five digits or nine digits\
            \ in the ZIP+4 format.\nThe zip code can be typed with or without dashes.\
            \ It uses\nthe same parameters as a Text tab, with the validation\nmessage\
            \ and pattern set for ZIP code information.\n\n\n[zip]: https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/zip\n"
          items:
            $ref: '#/components/schemas/zip'
      description: 'Envelope Document Tabs resource '
      x-ds-definition-name: tabs
      x-ds-category: Envelopes
      x-ds-order: "50"
      x-ms-summary: 'Envelope Document Tabs resource '
    TemplateDocumentTabs:
      type: object
      properties:
        approveTabs:
          type: array
          description: "A list of\n[Approve tabs][approve].\n\n\nThis tab allows\n\
            the recipient to approve documents without\nplacing a signature or initials\
            \ on the document. If the\nrecipient clicks the tab during the signing\
            \ process, the\nrecipient is considered to have signed the document. No\n\
            information is shown on the document of the approval, but it\nis recorded\
            \ as a signature in the envelope history.\n\n[approve]:\t\t      https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/approve\n"
          items:
            $ref: '#/components/schemas/approve'
        checkboxTabs:
          type: array
          description: |
            A list of
            [Checkbox tabs][checkbox].


            This tab allows the recipient to select a yes/no (on/off) option.


            [checkbox]:  https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/checkbox
          items:
            $ref: '#/components/schemas/checkbox'
        companyTabs:
          type: array
          description: "A list of \n[Company tabs][company].\n\n\nThis tab displays\
            \ the recipient's company name.\n\n\n\n[company]: https://developers.docusign.com/esign-rest-api/reference/EnvelopeRecipientTabs/create/#/definitions/company\
            \ \n"
          items:
            $ref: '#/components/schemas/company'
        dateSignedTabs:
          type: array
          description: "A list of \n[Date Signed tabs][dateSigned]\n\n\nThis tab displays\
            \ the date that the recipient signed the\ndocument.\n\n[dateSigned]: https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/dateSigned\
            \ \n"
          items:
            $ref: '#/components/schemas/dateSigned'
        dateTabs:
          type: array
          description: "A list of \n[Date tabs][date].\n\n\nThis tab allows the recipient\
            \ to enter a date. Date tabs\nare one-line fields that allow date information\
            \ to be\nentered in any format. The tooltip for this tab recommends\n\
            entering the date as MM/DD/YYYY, but this is not enforced.\nThe format\
            \ entered by the signer is retained. If you need a\nparticular date format\
            \ enforced, DocuSign recommends using a\nText tab with a validation pattern\
            \ and a validation message\nto enforce the format.\n\n\n[date]: https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/date\
            \ \n"
          items:
            $ref: '#/components/schemas/date'
        declineTabs:
          type: array
          description: "A list of \n[Decline tabs][decline].\n\nThis tab allows the\
            \ recipient the option of declining an\nenvelope. If the recipient clicks\
            \ the tab during the signing\nprocess, the envelope is voided.\n\n\n[decline]:\
            \ https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/decline\
            \ \n"
          items:
            $ref: '#/components/schemas/decline'
        emailAddressTabs:
          type: array
          description: "A list of \n[Email Address tabs][emailAddress].\n\nThis tab\
            \ \ndisplays the recipient's email as entered in the\nrecipient information.\n\
            \n\n[emailAddress]: https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/emailAddress\
            \ \n"
          items:
            $ref: '#/components/schemas/emailAddress'
        emailTabs:
          type: array
          description: "A list of \n[Email tabs][email].\n\nThis tab \nallows the\
            \ recipient to enter an email address.\nThis is a one-line field that\
            \ checks that a valid email\naddress is entered. It uses the same parameters\
            \ as a Text\ntab, with the validation message and pattern set for email\n\
            information.\n\nWhen getting information that includes\nthis tab type,\
            \ the original value of the tab when the\nassociated envelope was sent\
            \ is included in the response.\n\n[email]: https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/email\
            \ \n"
          items:
            $ref: '#/components/schemas/email'
        envelopeIdTabs:
          type: array
          description: "A list of \n[Envelope ID tabs][envelopeId].\n\nThis tab \n\
            displays the envelope ID. Recipients cannot enter\nor change the information\
            \ in this tab.\n\n\n[envelopeId]: https://developers.docusign.com/esign-rest-api/reference/EnvelopeRecipientTabs/create/#/definitions/envelopeId\
            \ \n"
          items:
            $ref: '#/components/schemas/envelopeId'
        firstNameTabs:
          type: array
          description: "A list of \n[First Name tabs][firstName].\n\nThis tab \ndisplays\
            \ the recipient's first name. It\ntakes the recipient's name as entered\
            \ in the recipient\ninformation, splits it into sections based on spaces\
            \ and\nuses the first section as the first name.\n\n\n[firstName]: https://developers.docusign.com/esign-rest-api/reference/EnvelopeRecipientTabs/create/#/definitions/firstName\
            \ \n"
          items:
            $ref: '#/components/schemas/firstName'
        formulaTabs:
          type: array
          description: "A list of [Formula tabs][formulaTab].\n\nThe value of a formula\
            \ tab is calculated\nfrom the values of other\nnumber or date tabs in\
            \ the document.\nWhen the recipient completes the underlying fields,\n\
            the formula tab calculates and displays the result.\n\nThe `formula` property\
            \ of the tab\ncontains the references\nto the underlying tabs.\nSee [Calculated\
            \ Fields][calculatedfields]\nin the DocuSign Support Center\nto learn\
            \ more about formulas.\n\nIf a formula tab contains\na `paymentDetails`\
            \ property,\nthe tab is considered a payment item.\nSee [Requesting Payments\
            \ Along with Signatures][paymentguide]\nin the DocuSign Support Center\n\
            to learn more about payments.\n\n[calculatedfields]: https://support.docusign.com/en/guides/ndse-user-guide-calculated-fields\n\
            [paymentguide]:     https://support.docusign.com/en/guides/requesting-payments-along-with-signatures\n\
            [formulaTab]:\t    \thttps://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/formulaTab\n"
          items:
            $ref: '#/components/schemas/formulaTab'
        fullNameTabs:
          type: array
          description: "A list of \n[Full Name tabs][fullName].\n\nThis tab \ndisplays\
            \ the recipient's full name.\n\n\n[fullName]: https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/fullName\
            \ \n"
          items:
            $ref: '#/components/schemas/fullName'
        initialHereTabs:
          type: array
          description: "A list of \n[Initial Here tabs][initialHere].\n\nThis tab\
            \ allows the recipient to initial the document. May\nbe optional.\n\n\
            [initialHere]: https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/initialHere\
            \ \n"
          items:
            $ref: '#/components/schemas/initialHere'
        lastNameTabs:
          type: array
          description: "A list of \n[Last Name tabs][lastName].\n\nThis tab \ndisplays\
            \ the recipient's last name. It\ntakes the recipient's name as entered\
            \ in the recipient\ninformation, splits it into sections based on spaces\
            \ and\nuses the last section as the last name.\n\n\n[lastName]: https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/lastName\
            \ \n"
          items:
            $ref: '#/components/schemas/lastName'
        listTabs:
          type: array
          description: "A list of \n[list tabs][list].\n\nThis tab offers a list of\
            \ options to choose from. The\n`listItems` property is used to specify\
            \ the selectable\noptions.\n\n\n\n[list]: https://developers.docusign.com/esign-rest-api/reference/EnvelopeRecipientTabs/create/#/definitions/list\
            \ \n"
          items:
            $ref: '#/components/schemas/list'
        notarizeTabs:
          type: array
          description: "A list of \n[Notarize tabs][notarize].\n\nA notarize tab is\
            \ a tab that alerts notary recipients that\nthey must take action on the\
            \ page.\nOnly one notarize tab can appear on a page.\n\n[notarize]: https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/notarize\
            \ \n"
          items:
            $ref: '#/components/schemas/notarize'
        noteTabs:
          type: array
          description: "A list of \n[Note tabs][note].\n\nThis tab  displays additional\
            \ information, in the form of a\nnote, for the recipient.\n\n[note]: https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/note\
            \ \n"
          items:
            $ref: '#/components/schemas/note'
        numberTabs:
          type: array
          description: "A list of \n[Number tabs][number].\n\nThis tab allows the\
            \ recipient to enter numbers and decimal\n(.) points.\n\n\n\n[number]:\
            \ https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/number\
            \ \n"
          items:
            $ref: '#/components/schemas/number'
        radioGroupTabs:
          type: array
          description: "A list of \n[Radio Group tabs][radioGroup].\n\nThis tab \n\
            This group tab is used to place radio buttons on a document.\nThe `radios`\
            \ property is used to add and place the radio\nbuttons associated with\
            \ the group. Only one radio button can\nbe selected in a group.\n\n\n\
            [radioGroup]: https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/radioGroup\
            \ \n"
          items:
            $ref: '#/components/schemas/radioGroup'
        signerAttachmentTabs:
          type: array
          description: "A list of \n[Signer Attachment tabs][signerAttachment].\n\n\
            This tab \nallows the recipient to attach supporting\ndocuments to an\
            \ envelope.\n\n\n[signerAttachment]: https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/signerAttachment\
            \ \n"
          items:
            $ref: '#/components/schemas/signerAttachment'
        signHereTabs:
          type: array
          description: "A list of \n[Sign Here tabs][signHere].\n\nThis tab  allows\
            \ the recipient to sign a document. May be\noptional.\n\n[signHere]: https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/signHere\
            \ \n"
          items:
            $ref: '#/components/schemas/signHere'
        smartSectionTabs:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/smartSection'
        ssnTabs:
          type: array
          description: "A list of \n[SSN tabs][ssn].\n\nThis tab \nis a one-line field\
            \ that allows the recipient to enter a Social\nSecurity Number. The SSN\
            \ can be typed with or without\ndashes. It uses the same parameters as\
            \ a Text tab, with the\nvalidation message and pattern set for SSN information.\n\
            \n\n[ssn]: https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/ssn\
            \ \n"
          items:
            $ref: '#/components/schemas/ssn'
        textTabs:
          type: array
          description: "A list of \n[Text tabs][text].\n\nThis tab \nA tab that allows\
            \ the recipient to enter any type of text.\n\n[text]: https://developers.docusign.com/esign-rest-api/reference/EnvelopeRecipientTabs/create/#/definitions/text\
            \ \n"
          items:
            $ref: '#/components/schemas/text'
        titleTabs:
          type: array
          description: "A list of \n[Title tabs][title].\n\nThis tab  displays the\
            \ recipient's title.\n\n\n[title]: https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/title\
            \ \n"
          items:
            $ref: '#/components/schemas/title'
        viewTabs:
          type: array
          description: "A list of \n[View tabs][view].\n\nThis tab \nThis tab is used\
            \ with the Approve tab to handle\nsupplemental documents.\n\n[view]: https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/view\
            \ \n"
          items:
            $ref: '#/components/schemas/view'
        zipTabs:
          type: array
          description: "A list of \n[Zip tabs][zip].\n\nThis tab \nallows the recipient\
            \ to enter a ZIP code. The ZIP\ncode can be five digits or nine digits\
            \ in the ZIP+4 format.\nThe zip code can be typed with or without dashes.\
            \ It uses\nthe same parameters as a Text tab, with the validation\nmessage\
            \ and pattern set for ZIP code information.\n\n\n[zip]: https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/zip\n"
          items:
            $ref: '#/components/schemas/zip'
      description: ""
      x-ds-definition-name: tabs
      x-ds-category: Templates
      x-ds-order: "50"
      x-ms-summary: ""
    EnvelopeViews:
      type: object
      properties:
        url:
          type: string
          description: The view URL to be navigated to.
      description: Embedding Envelope views
      x-ds-definition-name: viewUrl
      x-ds-category: Envelopes
      x-ds-order: "1"
      x-ms-summary: Embedding Envelope views
    AccountSealProviders:
      type: object
      properties:
        seals:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/sealIdentifier'
      description: ""
      x-ds-definition-name: accountSeals
      x-ds-category: Accounts
      x-ds-order: "10"
      x-ms-summary: ""
    Accounts:
      type: object
      properties:
        accountIdGuid:
          type: string
          description: The GUID associated with the account ID.
        accountName:
          type: string
          description: The name of the current account.
        allowTransactionRooms:
          type: string
          description: "When set to **true**, the transaction rooms feature exposed\
            \ through the Workspaces API is enabled."
        billingPeriodDaysRemaining:
          type: string
          description: "Reserved: TBD"
        billingPeriodEndDate:
          type: string
          description: "Reserved: TBD"
        billingPeriodEnvelopesAllowed:
          type: string
          description: "Reserved: TBD"
        billingPeriodEnvelopesSent:
          type: string
          description: "Reserved: TBD"
        billingPeriodStartDate:
          type: string
          description: "Reserved: TBD"
        billingProfile:
          type: string
          description: "Reserved: TBD"
        canCancelRenewal:
          type: string
          description: "Reserved: TBD"
        canUpgrade:
          type: string
          description: "When set to **true**, specifies that you can upgrade the account\
            \ through the API."
        connectPermission:
          type: string
          description: ""
        createdDate:
          type: string
          description: ""
        currencyCode:
          type: string
          description: Specifies the ISO currency code for the account.
        currentPlanId:
          type: string
          description: Identifies the plan that was used create this account.
        distributorCode:
          type: string
          description: The code that identifies the billing plan groups and plans
            for the new account.
        docuSignLandingUrl:
          type: string
          description: ""
        envelopeSendingBlocked:
          type: string
          description: ""
        envelopeUnitPrice:
          type: string
          description: ""
        externalAccountId:
          type: string
          description: ""
        forgottenPasswordQuestionsCount:
          type: string
          description: ' A complex element that contains up to four Question/Answer
            pairs for forgotten password information for a user.'
        isDowngrade:
          type: string
          description: ""
        paymentMethod:
          type: string
          description: ""
        planClassification:
          type: string
          description: "Identifies the type of plan. Examples include Business, Corporate,\
            \ Enterprise, Free."
        planEndDate:
          type: string
          description: The date that the current plan will end.
        planName:
          type: string
          description: The name of the Billing Plan.
        planStartDate:
          type: string
          description: The date that the Account started using the current plan.
        seatsAllowed:
          type: string
          description: ""
        seatsInUse:
          type: string
          description: ""
        status21CFRPart11:
          type: string
          description: ""
        suspensionDate:
          type: string
          description: ""
        suspensionStatus:
          type: string
          description: ""
      description: Account management
      x-ds-definition-name: accountInformation
      x-ds-category: Accounts
      x-ds-order: "1"
      x-ms-summary: Account management
    AccountSignatureProviders:
      type: object
      properties:
        signatureProviders:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/accountSignatureProvider'
      description: Account SBS Signature Providers
      x-ds-definition-name: accountSignatureProviders
      x-ds-category: Accounts
      x-ds-order: "30"
      x-ms-summary: Account SBS Signature Providers
    Authentication:
      type: object
      properties:
        apiPassword:
          type: string
          description: Contains a token that can be used for authentication in API
            calls instead of using the user name and password. Only returned if the
            `api_password=true` query string is added to the URL.
        loginAccounts:
          type: array
          description: The list of accounts that authenticating user is a member of.
          items:
            $ref: '#/components/schemas/loginAccount'
      description: Authentication and login
      x-ds-definition-name: loginInformation
      x-ds-category: Authentication
      x-ds-order: "10"
      x-ms-summary: Authentication and login
    UserSocialAccountLogins:
      type: object
      properties:
        email:
          type: string
          description: The users email address.
        errorDetails:
          $ref: '#/components/schemas/errorDetails'
        provider:
          type: string
          description: "The social account provider (Facebook, Yahoo, etc.)"
        socialId:
          type: string
          description: The ID provided by the Socal Account.
        userName:
          type: string
          description: The full user name for the account.
      description: Users' social account logins
      x-ds-definition-name: socialAccountInformation
      x-ds-category: Authentication
      x-ds-order: "20"
      x-ms-summary: Users' social account logins
    BillingPlans:
      type: object
      properties:
        billingAddress:
          $ref: '#/components/schemas/accountAddress'
        billingAddressIsCreditCardAddress:
          type: string
          description: "When set to **true**, the credit card address information\
            \ is the same as that returned as the billing address. If false, then\
            \ the billing address is considered a billing contact address, and the\
            \ credit card address can be different."
        billingPlan:
          $ref: '#/components/schemas/accountBillingPlan'
        creditCardInformation:
          $ref: '#/components/schemas/creditCardInformation'
        paymentProcessorInformation:
          $ref: '#/components/schemas/paymentProcessorInformation'
        referralInformation:
          $ref: '#/components/schemas/referralInformation'
        successorPlans:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/billingPlan'
      description: Billing plans
      x-ds-definition-name: accountBillingPlanResponse
      x-ds-category: Billing
      x-ds-order: "10"
      x-ms-summary: Billing plans
    Invoices:
      type: object
      properties:
        amount:
          type: string
          description: "Reserved: TBD"
        balance:
          type: string
          description: "Reserved: TBD"
        dueDate:
          type: string
          description: "Reserved: TBD"
        invoiceId:
          type: string
          description: "Reserved: TBD"
        invoiceItems:
          type: array
          description: "Reserved: TBD"
          items:
            $ref: '#/components/schemas/billingInvoiceItem'
        invoiceNumber:
          type: string
          description: "Reserved: TBD"
        invoiceUri:
          type: string
          description: Contains a URI for an endpoint that you can use to retrieve
            invoice information.
        nonTaxableAmount:
          type: string
          description: ""
        pdfAvailable:
          type: string
          description: ""
        taxableAmount:
          type: string
          description: ""
      description: Invoices
      x-ds-definition-name: billingInvoice
      x-ds-category: Billing
      x-ds-order: "20"
      x-ms-summary: Invoices
    Payments:
      type: object
      properties:
        amount:
          type: string
          description: "Reserved: TBD"
        description:
          type: string
          description: |
            A sender-defined description of the line item.
        paymentDate:
          type: string
          description: ""
        paymentId:
          type: string
          description: ""
        paymentNumber:
          type: string
          description: "When set to **true**, a PDF version of the invoice is available.\
            \ \n\nTo get the PDF, make the call again and change \"Accept:\" in the\
            \ header to \"Accept: application/pdf\"."
      description: Payments
      x-ds-definition-name: billingPaymentItem
      x-ds-category: Billing
      x-ds-order: "30"
      x-ms-summary: Payments
    CloudStorage:
      type: object
      properties:
        endPosition:
          type: string
          description: 'The last position in the result set. '
        errorDetails:
          $ref: '#/components/schemas/externalDocServiceErrorDetails'
        id:
          type: string
          description: ""
        items:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/externalFile'
        name:
          type: string
          description: ""
        nextUri:
          type: string
          description: 'The URI for the next chunk of records based on the search
            request. It is `null` if this is the last set of results for the search. '
        previousUri:
          type: string
          description: 'The URI for the prior chunk of records based on the search
            request. It is `null` if this is the first set of results for the search. '
        resultSetSize:
          type: string
          description: 'The number of results returned in this response. '
        startPosition:
          type: string
          description: Starting position of the current result set.
        totalSetSize:
          type: string
          description: The total number of items in the search's result set. It will
            always be greater than or equal to the value of the `resultSetSize` field.
      description: Cloud storage
      x-ds-definition-name: externalFolder
      x-ds-category: CloudStorage
      x-ds-order: "10"
      x-ms-summary: Cloud storage
    CloudStorageProviders:
      type: object
      properties:
        storageProviders:
          type: array
          description: An Array containing the storage providers associated with the
            user.
          items:
            $ref: '#/components/schemas/cloudStorageProvider'
      description: Cloud storage providers
      x-ds-definition-name: cloudStorageProviders
      x-ds-category: CloudStorage
      x-ds-order: "20"
      x-ms-summary: Cloud storage providers
    ConnectConfigurations:
      type: object
      properties:
        allowEnvelopePublish:
          type: string
          description: "When set to **true**, data is sent to the urlToPublishTo web\
            \ address. This option can be set to false to stop sending data while\
            \ maintaining the Connect configuration information."
        allUsers:
          type: string
          description: "When set to **true**, the tracked envelope and recipient events\
            \ for all users, including users that are added a later time, are sent\
            \ through Connect."
        configurationType:
          type: string
          description: "If merge field's are being used, specifies the type of the\
            \ merge field. The only  supported value is **salesforce**."
        connectId:
          type: string
          description: " Read only: the DocuSign generated ID for the Connect configuration.\
            \  "
        enableLog:
          type: string
          description: "This turns Connect logging on or off. When set to **true**,\
            \ logging is turned on."
        envelopeEvents:
          type: string
          description: "A comma separated list of Envelope related events that are\
            \ tracked through Connect. The possible event values are: Sent, Delivered,\
            \ Completed, Declined, and Voided."
        includeCertificateOfCompletion:
          type: string
          description: "When set to **true**, the Connect Service includes the Certificate\
            \ of Completion with completed envelopes. "
        includeCertSoapHeader:
          type: string
          description: ""
        includeDocumentFields:
          type: string
          description: "When set to **true**, the Document Fields associated with\
            \ the envelope's documents are included in the notification messages.\
            \ Document Fields are optional custom name-value pairs added to documents\
            \ using the API. "
        includeDocuments:
          type: string
          description: "When set to **true**, Connect will send the PDF document along\
            \ with the update XML."
        includeEnvelopeVoidReason:
          type: string
          description: "When set to **true**, Connect will include the voidedReason\
            \ for voided envelopes."
        includeHMAC:
          type: string
          description: ""
        includeSenderAccountasCustomField:
          type: string
          description: "When set to **true**, Connect will include the sender account\
            \ as Custom Field in the data."
        includeTimeZoneInformation:
          type: string
          description: "When set to **true**, Connect will include the envelope time\
            \ zone information."
        name:
          type: string
          description: The name of the Connect configuration. The name helps identify
            the configuration in the list.
        recipientEvents:
          type: string
          description: "A comma separated list of *Recipient* related events that\
            \ will trigger a notification to your webhook Connect listener. The possible\
            \ event values are: Sent, Delivered, Completed, Declined, AuthenticationFailed,\
            \ and AutoResponded."
        requiresAcknowledgement:
          type: string
          description: "#### When set to **true**, and SIM mode is activated:\n\n\
            If the HTTP Status response to a notification message is not in the range\
            \ of 200-299 then the message delivery failed, and the configuration is\
            \ marked as *down.*\n\nThe message will be queued and retried once per\
            \ day. While a Connect configuration is marked down, subsequent notifications\
            \ will not be tried, they'll be immediately queued with reason \"Pending.\"\
            \ Once a message succeeds, all queued messages for the configuration will\
            \ be tried immediately, in order.\n\nThere is a maximum of ten retries\
            \ Alternately, you can use Republish Connect Information to manually republish\
            \ the notification.\n\n#### When set to **true**, and SIM mode is not\
            \ activated: \n\nIf the HTTP Status response to a notification message\
            \ is not in the range of 200-299 then the message delivery failed, and\
            \ the message is queued.\n\nThe message will be retried after at least\
            \ a day the next time a subsequent message is successfully sent to this\
            \ configuration (subscription).  Subsequent notifications will be tried\
            \ when they occur.\nThere is a maximum of ten retries Alternately, you\
            \ can use Republish Connect Information to manually republish the notification."
        signMessageWithX509Certificate:
          type: string
          description: "When set to **true**, Mutual TLS will be enabled for notifications.\
            \ Mutual TLS must be initiated by the listener (the customer's web server)\
            \ during the TLS handshake protocol. "
        soapNamespace:
          type: string
          description: |-
            The namespace of the SOAP interface.

            The namespace value must be set if useSoapInterface is set to true.
        urlToPublishTo:
          type: string
          description: The endpoint to which webhook notification messages are sent
            via an HTTPS POST request. The url must start with https. The customer's
            web server must use an SSL/TLS certificate whose CA is in the Microsoft
            list of trusted CAs. Self-signed certificates are not ok. Free certificates
            from Let's Encrypt can be used.
        userIds:
          type: string
          description: "A comma separated list of userIds. This sets the users associated\
            \ with the tracked envelope and recipient events. When a tracked event\
            \ occurs for a set user, the a notification message is sent to your Connect\
            \ listener. \n\n###### Note: If allUsers is set to `false` then you must\
            \ provide a list of user ids."
        useSoapInterface:
          type: string
          description: "When set to **true**, indicates that the `urlToPublishTo`\
            \ property contains a SOAP endpoint."
      description: Connect configurations
      x-ds-definition-name: connectCustomConfiguration
      x-ds-category: Connect
      x-ds-order: "10"
      x-ms-summary: Connect configurations
    ConnectEvents:
      type: object
      properties:
        failures:
          type: array
          description: An array of containing failure information from the Connect
            failure log.
          items:
            $ref: '#/components/schemas/connectLog'
        logs:
          type: array
          description: "A complex type containing Connect log information. It is divided\
            \ into two sections, one for regular logs and one for Connect failures. "
          items:
            $ref: '#/components/schemas/connectLog'
        totalRecords:
          type: string
          description: Record count.
        type:
          type: string
          description: "Type of the user. Valid values: type_owner, type_participant."
      description: Connect event logging
      x-ds-definition-name: connectLogs
      x-ds-category: Connect
      x-ds-order: "20"
      x-ms-summary: Connect event logging
    CustomTabs:
      type: object
      properties:
        anchor:
          type: string
          description: An optional string that is used to auto-match tabs to strings
            located in the documents of an envelope.
        anchorCaseSensitive:
          type: string
          description: |-
            Reserved for DocuSign.
            <!--
            When set to **true**, the anchor string does not consider case when matching strings in the document. The default value is **true**.
            -->
        anchorHorizontalAlignment:
          type: string
          description: |
            Reserved for DocuSign.
            <!--
            Specifies the alignment of anchor tabs with anchor strings. Possible values are **left** or **right**. The default value is **left**.
            -->
        anchorIgnoreIfNotPresent:
          type: string
          description: "When set to **true**, this tab is ignored if anchorString\
            \ is not found in the document."
        anchorMatchWholeWord:
          type: string
          description: |
            Reserved for DocuSign.
            <!--
            When set to **true**, the anchor string in this tab matches whole words only (strings embedded in other strings are ignored.) The default value is **true**.
            -->
        anchorUnits:
          type: string
          description: |
            Specifies units of the
            `anchorXOffset` and
            `anchorYOffset`.
            Valid units are:

            - `pixels`
            - `inches`
            - `mms`
            - `cms`
        anchorXOffset:
          type: string
          description: |
            Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.
        anchorYOffset:
          type: string
          description: |
            Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.
        bold:
          type: string
          description: "When set to **true**, the information in the tab is bold."
        collaborative:
          type: string
          description: ""
        concealValueOnDocument:
          type: string
          description: |-
            When set to **true**, the field appears normally while the recipient is adding or modifying the information in the field, but the data is not visible (the characters are hidden by asterisks) to any other signer or the sender.

            When an envelope is completed the information is available to the sender through the Form Data link in the DocuSign Console.

            This setting applies only to text boxes and does not affect list boxes, radio buttons, or check boxes.
        createdByDisplayName:
          type: string
          description: The user name of the DocuSign user who created this object.
        createdByUserId:
          type: string
          description: The userId of the DocuSign user who created this object.
        customTabId:
          type: string
          description: "The DocuSign generated custom tab ID for the custom tab to\
            \ be applied. This can only be used when adding new tabs for a recipient.\
            \ When used, the new tab inherits all the custom tab properties."
        disableAutoSize:
          type: string
          description: "When set to **true**, disables the auto sizing of single line\
            \ text boxes in the signing screen when the signer enters data. If disabled\
            \ users will only be able enter as much data as the text box can hold.\
            \ By default this is false. This property only affects single line text\
            \ boxes."
        editable:
          type: string
          description: "When set to **true**, the custom tab is editable. Otherwise\
            \ the custom tab cannot be modified."
        font:
          type: string
          description: |
            The font to be used for the tab value. Supported Fonts include:

            - Default
            - Arial
            - ArialNarrow
            - Calibri
            - CourierNew
            - Garamond
            - Georgia
            - Helvetica
            - LucidaConsole
            - MSGothic
            - MSMincho
            - OCR-A
            - Tahoma
            - TimesNewRoman
            - Trebuchet
            - Verdana
        fontColor:
          type: string
          description: "The font color used for the information in the tab. Possible\
            \ values are: \n\n- Black\n- BrightBlue\n- BrightRed\n- DarkGreen\n- DarkRed\n\
            - Gold\n- Green\n- NavyBlue\n- Purple\n- White\n"
        fontSize:
          type: string
          description: |-
            The font size used for the information in the tab. Possible values are:

            - Size7
            - Size8
            - Size9
            - Size10
            - Size11
            - Size12
            - Size14
            - Size16
            - Size18
            - Size20
            - Size22
            - Size24
            - Size26
            - Size28
            - Size36
            - Size48
            - Size72
        height:
          type: string
          description: Height of the tab in pixels.
        includedInEmail:
          type: string
          description: "When set to **true**, the tab is included in e-mails related\
            \ to the envelope on which it exists. This applies to only specific tabs."
        initialValue:
          type: string
          description: The original value of the tab.
        italic:
          type: string
          description: "When set to **true**, the information in the tab is italic."
        items:
          type: array
          description: "If the tab is a list, this represents the values that are\
            \ possible for the tab."
          items:
            type: string
        lastModified:
          type: string
          description: The UTC DateTime this object was last modified. This is in
            ISO8601 format.
        lastModifiedByDisplayName:
          type: string
          description: The User Name of the DocuSign user who last modified this object.
        lastModifiedByUserId:
          type: string
          description: The userId of the DocuSign user who last modified this object.
        locked:
          type: string
          description: "When set to **true**, the signer cannot change the data of\
            \ the custom tab."
        maximumLength:
          type: string
          description: The maximum number of entry characters supported by the custom
            tab.
        mergeField:
          $ref: '#/components/schemas/mergeField'
        name:
          type: string
          description: ""
        paymentItemCode:
          type: string
          description: ""
        paymentItemDescription:
          type: string
          description: ""
        paymentItemName:
          type: string
          description: ""
        requireAll:
          type: string
          description: "When set to **true** and shared is true, information must\
            \ be entered in this field to complete the envelope. "
        required:
          type: string
          description: "When set to **true**, the signer is required to fill out this\
            \ tab"
        requireInitialOnSharedChange:
          type: string
          description: "Optional element for field markup. When set to **true**, the\
            \ signer is required to initial when they modify a shared field."
        scaleValue:
          type: string
          description: ""
        selected:
          type: string
          description: "When set to **true**, the radio button is selected."
        shared:
          type: string
          description: "When set to **true**, this custom tab is shared."
        stampType:
          type: string
          description: ""
        stampTypeMetadata:
          $ref: '#/components/schemas/propertyMetadata'
        tabLabel:
          type: string
          description: |
            The label string associated with the tab.
            The string may be the empty string.
            If no value is provided, the tab type is used as the value.

            Maximum of 500 characters.
        type:
          type: string
          description: "The type of this tab. Values are:\n\n- Approve\n- CheckBox\n\
            - Company\n- Date\n- DateSigned,\tDecline\n- Email,\tEmailAddress\n- EnvelopeId\n\
            - FirstName\n- Formula\n- FullName,\tInitialHere\n- InitialHereOptional\n\
            - LastName\n- List\n- Note\n- Number\n- Radio\n- SignerAttachment\n- SignHere\n\
            - SignHereOptional\n- Ssn\n- Text\n- Title\n- Zip5\n- Zip5Dash4\n"
        underline:
          type: string
          description: "When set to **true**, the information in the tab is underlined."
        validationMessage:
          type: string
          description: The message displayed if the custom tab fails input validation
            (either custom of embedded).
        validationPattern:
          type: string
          description: A regular expressionn used to validate input for the tab.
        width:
          type: string
          description: Width of the tab in pixels.
      description: Custom tabs
      x-ds-definition-name: tabMetadata
      x-ds-category: CustomTabs
      x-ds-order: "10"
      x-ms-summary: Custom tabs
    RequestLogs:
      type: object
      properties:
        apiRequestLogging:
          type: string
          description: " When set to **true**, enables API request logging for the\
            \ user. "
        apiRequestLogMaxEntries:
          type: string
          description: Specifies the maximum number of API requests to log.
        apiRequestLogRemainingEntries:
          type: string
          description: Indicates the remaining number of API requests that can be
            logged.
      description: Request logs
      x-ds-definition-name: diagnosticsSettingsInformation
      x-ds-category: Diagnostics
      x-ds-order: "10"
      x-ms-summary: Request logs
    Resources:
      type: object
      properties:
        resources:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/nameValue'
      description: API resource information
      x-ds-definition-name: resourceInformation
      x-ds-category: Diagnostics
      x-ds-order: "20"
      x-ms-summary: API resource information
    Services:
      type: object
      properties:
        buildBranch:
          type: string
          description: "Reserved: TBD"
        buildBranchDeployedDateTime:
          type: string
          description: "Reserved: TBD"
        buildSHA:
          type: string
          description: "Reserved: TBD"
        buildVersion:
          type: string
          description: "Reserved: TBD"
        linkedSites:
          type: array
          description: ""
          items:
            type: string
        serviceVersions:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/serviceVersion'
      description: API service information
      x-ds-definition-name: serviceInformation
      x-ds-category: Diagnostics
      x-ds-order: "30"
      x-ms-summary: API service information
    EnvelopeConsumerDisclosures:
      type: object
      properties:
        accountEsignId:
          type: string
          description: A GUID identifying the account associated with the consumer
            disclosure
        allowCDWithdraw:
          type: string
          description: Indicates whether the customer can withdraw their acceptance
            of the consumer disclosure.
        allowCDWithdrawMetadata:
          $ref: '#/components/schemas/settingsMetadata'
        changeEmail:
          type: string
          description: ""
        changeEmailOther:
          type: string
          description: ""
        companyName:
          type: string
          description: The name of the company associated with the consumer disclosure.
        companyPhone:
          type: string
          description: The phone number of the company associated with the consumer
            disclosure.
        copyCostPerPage:
          type: string
          description: ""
        copyFeeCollectionMethod:
          type: string
          description: |-
            Specifies the fee collection method for cases in which the customer requires paper copies of the document.

            Maximum Length: 255 characters
        copyRequestEmail:
          type: string
          description: ""
        custom:
          type: string
          description: ""
        enableEsign:
          type: string
          description: ""
        esignAgreement:
          type: string
          description: The Electronic Record and Signature Disclosure text. The disclosure
            text includes the html formatting.
        esignText:
          type: string
          description: ""
        languageCode:
          type: string
          description: ""
        mustAgreeToEsign:
          type: string
          description: ""
        pdfId:
          type: string
          description: "**Deprecated**\n\nThe `\x80\x9cpdfId` property in the consumer_disclosure\
            \ PUT request is deprecated. For security reasons going forward, any value\
            \ provided in the request packet must be ignored. "
        useBrand:
          type: string
          description: ""
        useConsumerDisclosureWithinAccount:
          type: string
          description: ""
        useConsumerDisclosureWithinAccountMetadata:
          $ref: '#/components/schemas/settingsMetadata'
        withdrawAddressLine1:
          type: string
          description: "Contains the first address line of the postal address to which\
            \ a customer can send a consent withdrawal notification.\n\nMaximum length:\
            \ 100 characters. "
        withdrawAddressLine2:
          type: string
          description: "Contains the second address line of the postal address to\
            \ which a customer can send a consent withdrawal notification.\n\nMaximum\
            \ length: 100 characters. "
        withdrawByEmail:
          type: string
          description: Indicates whether the customer can withdraw consent by email.
        withdrawByMail:
          type: string
          description: Indicates whether the customer can withdraw consent by postal
            mail.
        withdrawByPhone:
          type: string
          description: Indicates whether the customer can withdraw consent by phone.
        withdrawCity:
          type: string
          description: "Contains the city of the postal address to which a customer\
            \ can send a consent withdrawal notification.\n\nMaximum length: 50 characters. "
        withdrawConsequences:
          type: string
          description: Indicates the consequences of withdrawing consent.
        withdrawEmail:
          type: string
          description: "Contains the email address to which a customer can send a\
            \ consent withdrawal notification.\n\nMaximum length: 100 characters. "
        withdrawOther:
          type: string
          description: |-
            Indicates other information need to withdraw consent.

            Maximum length: 255 characters.
        withdrawPhone:
          type: string
          description: "Contains the phone number which a customer can call to register\
            \ consent withdrawal notification.\n\nMaximum length: 20 characters. "
        withdrawPostalCode:
          type: string
          description: "Contains the postal code of the postal address to which a\
            \ customer can send a consent withdrawal notification.\n\nMaximum length:\
            \ 20 characters. "
        withdrawState:
          type: string
          description: Contains the state of the postal address to which a customer
            can send a consent withdrawal notification.
      description: Envelope consumer disclosures
      x-ds-definition-name: consumerDisclosure
      x-ds-category: Envelopes
      x-ds-order: "90"
      x-ms-summary: Envelope consumer disclosures
    EnvelopeDocuments:
      type: object
      properties:
        envelopeDocuments:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/envelopeDocument'
        envelopeId:
          type: string
          description: The envelope ID of the envelope status that failed to post.
      description: Envelope documents
      x-ds-definition-name: envelopeDocumentsResult
      x-ds-category: Envelopes
      x-ds-order: "40"
      x-ms-summary: Envelope documents
    EnvelopeEmailSettings:
      type: object
      properties:
        bccEmailAddresses:
          type: array
          description: |-
            An array containing the email address that should receive a copy of all email communications related to an envelope for archiving purposes. Maximum Length: 100 characters.

            **Note**: While this property is an array, it takes only a single email address.
          items:
            $ref: '#/components/schemas/bccEmailAddress'
        replyEmailAddressOverride:
          type: string
          description: ""
        replyEmailNameOverride:
          type: string
          description: ""
      description: Envelope email settings
      x-ds-definition-name: emailSettings
      x-ds-category: Envelopes
      x-ds-order: "30"
      x-ms-summary: Envelope email settings
    Envelopes:
      type: object
      properties:
        allowMarkup:
          type: string
          description: "When set to **true**, Document Markup is enabled for envelope.\
            \ Account must have Document Markup enabled to use this"
        allowReassign:
          type: string
          description: "When set to **true**, the recipient can redirect an envelope\
            \ to a more appropriate recipient."
        allowViewHistory:
          type: string
          description: ""
        asynchronous:
          type: string
          description: "When set to **true**, the envelope is queued for processing\
            \ and the value of the `status` property is set to 'Processing'. Additionally,\
            \ get status calls return 'Processing' until completed. \n\n\n**Note**:\
            \ A `transactionId` is required for this call to work correctly. When\
            \ the envelope is created, the status is 'Processing' and an `envelopeId`\
            \ is not returned in the response. To get the `envelopeId`, use a GET\
            \ envelope query using the [transactionId](https://developers.docusign.com/esign-rest-api/reference/Envelopes/Envelopes/create/#envelopeDefinition)\
            \ or by checking the Connect notification."
        attachmentsUri:
          type: string
          description: ""
        authoritativeCopy:
          type: string
          description: "Specifies whether all documents in this envelope are authoritative\
            \ copies.\nA document can set its own `authoritativeCopy` property to\
            \ override this value. For example you can set the `authoritativeCopy`\
            \ on an envelope level to true but can turn it off for a specific document. "
        authoritativeCopyDefault:
          type: string
          description: |-
            The default `authoritativeCopy` setting for documents in this envelope that do not have `authoritativeCopy` set.
            If this property is not set, each document defaults to the envelope's `authoritativeCopy`.
        autoNavigation:
          type: string
          description: "When set to **true**, autonavigation is set for the recipient."
        brandId:
          type: string
          description: The unique identifier of a brand.
        brandLock:
          type: string
          description: ""
        certificateUri:
          type: string
          description: Retrieves a URI for an endpoint allowing you to easily retrieve
            certificate information.
        completedDateTime:
          type: string
          description: Specifies the date and time this item was completed.
        copyRecipientData:
          type: string
          description: ""
        createdDateTime:
          type: string
          description: Indicates the date and time the item was created.
        customFields:
          $ref: '#/components/schemas/AccountCustomFields'
        customFieldsUri:
          type: string
          description: Contains a URI for an endpoint to retrieve the custom fields.
        declinedDateTime:
          type: string
          description: The date and time the recipient declined the document. Read
            only.
        deletedDateTime:
          type: string
          description: Specifies the data and time the item was deleted.
        deliveredDateTime:
          type: string
          description: "Reserved: For DocuSign use only."
        disableResponsiveDocument:
          type: string
          description: ""
        documentsCombinedUri:
          type: string
          description: ""
        documentsUri:
          type: string
          description: Contains a URI for an endpoint that you can use to retrieve
            the documents.
        emailBlurb:
          type: string
          description: This is the same as the email body. If specified it is included
            in email body for all envelope recipients.
        emailSettings:
          $ref: '#/components/schemas/emailSettings'
        emailSubject:
          type: string
          description: |-
            Specifies the subject of the email that is sent to all recipients.

            See [ML:Template Email Subject Merge Fields] for information about adding merge field information to the email subject.
        enableWetSign:
          type: string
          description: "When set to **true**, the signer is allowed to print the document\
            \ and sign it on paper."
        enforceSignerVisibility:
          type: string
          description: |-
            When set to **true**, documents with tabs can only be viewed by signers that have a tab on that document. Recipients that have an administrative role (Agent, Editor, or Intermediaries) or informational role (Certified Deliveries or Carbon Copies) can always see all the documents in an envelope, unless they are specifically excluded using this setting when an envelope is sent. Documents that do not have tabs are always visible to all recipients, unless they are specifically excluded using this setting when an envelope is sent.

            ###### Note: Your account must have Document Visibility enabled to use this.
        envelopeId:
          type: string
          description: The envelope ID of the envelope status that failed to post.
        envelopeIdStamping:
          type: string
          description: "When set to **true**, Envelope ID Stamping is enabled."
        envelopeUri:
          type: string
          description: Contains a URI for an endpoint that you can use to retrieve
            the envelope or envelopes.
        initialSentDateTime:
          type: string
          description: ""
        is21CFRPart11:
          type: string
          description: "When set to **true**, indicates that this module is enabled\
            \ on the account."
        isSignatureProviderEnvelope:
          type: string
          description: ""
        lastModifiedDateTime:
          type: string
          description: The date and time the item was last modified.
        lockInformation:
          $ref: '#/components/schemas/EnvelopeLocks'
        messageLock:
          type: string
          description: "When set to **true**, prevents senders from changing the contents\
            \ of `emailBlurb` and `emailSubject` properties for the envelope. \n\n\
            Additionally, this prevents users from making changes to the contents\
            \ of `emailBlurb` and `emailSubject` properties when correcting envelopes.\
            \ \n\nHowever, if the `messageLock` node is set to **true** and the `emailSubject`\
            \ property is empty, senders and correctors are able to add a subject\
            \ to the envelope."
        notification:
          $ref: '#/components/schemas/notification'
        notificationUri:
          type: string
          description: Contains a URI for an endpoint that you can use to retrieve
            the notifications.
        purgeState:
          type: string
          description: |+
            Shows the current purge state for the envelope. The possible values are:

            * `unpurged`: There has been no successful request to purge documents.
            * `documents_queued`: The envelope documents have been added to the purge queue, but have not been purged.
            * `documents_dequeued`: The envelope documents have been taken out of the purge queue.
            * `documents_and_metadata_queued`: The envelope documents and metadata have been added to the purge queue, but have not yet been purged.
            * `documents_purged`: The envelope documents have been successfully purged.
            * `documents_and_metadata_purged`: The envelope documents and metadata have been successfully purged.

        recipients:
          $ref: '#/components/schemas/EnvelopeRecipients'
        recipientsLock:
          type: string
          description: "When set to **true**, prevents senders from changing, correcting,\
            \ or deleting the recipient information for the envelope."
        recipientsUri:
          type: string
          description: Contains a URI for an endpoint that you can use to retrieve
            the recipients.
        sentDateTime:
          type: string
          description: The UTC DateTime when the envelope was sent. Read only.
        signerCanSignOnMobile:
          type: string
          description: ""
        signingLocation:
          type: string
          description: Specifies the physical location where the signing takes place.
            It can have two enumeration values; InPerson and Online. The default value
            is Online.
        status:
          type: string
          description: "Indicates the envelope status. Valid values are: \n\n* completed\
            \ - The envelope has been completed and all tags have been signed.\n*\
            \ created - The envelope is created as a draft. It can be modified and\
            \ sent later.\n* declined - The envelope has been declined by the recipients.\n\
            * delivered - The envelope has been delivered to the recipients.\n* sent\
            \ - The envelope is sent to the recipients.\n* signed - The envelope has\
            \ been signed by the recipients.\n* voided - The envelope is no longer\
            \ valid and recipients cannot access or sign the envelope.\n"
        statusChangedDateTime:
          type: string
          description: The data and time the status changed.
        templatesUri:
          type: string
          description: Contains a URI for an endpoint which you can use to retrieve
            the templates.
        transactionId:
          type: string
          description: ' Used to identify an envelope. The id is a sender-generated
            value and is valid in the DocuSign system for 7 days. It is recommended
            that a transaction ID is used for offline signing to ensure that an envelope
            is not sent multiple times. The `transactionId` property can be used determine
            an envelope''s status (i.e. was it created or not) in cases where the
            internet connection was lost before the envelope status was returned.'
        useDisclosure:
          type: string
          description: "When set to **true**, the disclosure is shown to recipients\
            \ in accordance with the account's Electronic Record and Signature Disclosure\
            \ frequency setting. When set to **false**, the Electronic Record and\
            \ Signature Disclosure is not shown to any envelope recipients. \n\nIf\
            \ the `useDisclosure` property is not set, then the account's normal disclosure\
            \ setting is used and the value of the `useDisclosure` property is not\
            \ returned in responses when getting envelope information."
        voidedDateTime:
          type: string
          description: The date and time the envelope or template was voided.
        voidedReason:
          type: string
          description: The reason the envelope or template was voided.
      description: "Envelope creation, management"
      x-ds-definition-name: envelope
      x-ds-category: Envelopes
      x-ds-order: "10"
      x-ms-summary: "Envelope creation, management"
    EnvelopeTemplates:
      type: object
      properties:
        templates:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/templateSummary'
      description: Envelope templates
      x-ds-definition-name: templateInformation
      x-ds-category: Envelopes
      x-ds-order: "85"
      x-ms-summary: Envelope templates
    Folders:
      type: object
      properties:
        folders:
          type: array
          description: A collection of folder objects returned in a response.
          items:
            $ref: '#/components/schemas/folder'
      description: Folder management
      x-ds-definition-name: foldersResponse
      x-ds-category: Folders
      x-ds-order: "10"
      x-ms-summary: Folder management
    GroupBrands:
      type: object
      properties:
        recipientBrandIdDefault:
          type: string
          description: The brand seen by envelope recipients when a brand is not explicitly
            set.
        senderBrandIdDefault:
          type: string
          description: The brand seen by envelope senders when a brand is not explicitly
            set.
        brandOptions:
          type: array
          description: The list of brands.
          items:
            $ref: '#/components/schemas/brand'
      description: Brand management for groups
      x-ds-definition-name: brandsResponse
      x-ds-category: UserGroups
      x-ds-order: "30"
      x-ms-summary: Brand management for groups
    Groups:
      type: object
      properties:
        endPosition:
          type: string
          description: 'The last position in the result set. '
        groups:
          type: array
          description: A collection group objects containing information about the
            groups returned.
          items:
            $ref: '#/components/schemas/group'
        nextUri:
          type: string
          description: 'The URI for the next chunk of records based on the search
            request. It is `null` if this is the last set of results for the search. '
        previousUri:
          type: string
          description: 'The URI for the prior chunk of records based on the search
            request. It is `null` if this is the first set of results for the search. '
        resultSetSize:
          type: string
          description: 'The number of results returned in this response. '
        startPosition:
          type: string
          description: Starting position of the current result set.
        totalSetSize:
          type: string
          description: The total number of items in the search's result set. It will
            always be greater than or equal to the value of the `resultSetSize` field.
      description: Group information
      x-ds-definition-name: groupInformation
      x-ds-category: UserGroups
      x-ds-order: "10"
      x-ms-summary: Group information
    GroupUsers:
      type: object
      properties:
        endPosition:
          type: string
          description: 'The last position in the result set. '
        nextUri:
          type: string
          description: 'The URI for the next chunk of records based on the search
            request. It is `null` if this is the last set of results for the search. '
        previousUri:
          type: string
          description: 'The URI for the prior chunk of records based on the search
            request. It is `null` if this is the first set of results for the search. '
        resultSetSize:
          type: string
          description: 'The number of results returned in this response. '
        startPosition:
          type: string
          description: Starting position of the current result set.
        totalSetSize:
          type: string
          description: The total number of items in the search's result set. It will
            always be greater than or equal to the value of the `resultSetSize` field.
        users:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/userInfo'
      description: Groups' users
      x-ds-definition-name: usersResponse
      x-ds-category: UserGroups
      x-ds-order: "20"
      x-ms-summary: Groups' users
    SigningGroups:
      type: object
      properties:
        created:
          type: string
          description: The UTC DateTime when the workspace user authorization was
            created.
        createdBy:
          type: string
          description: ""
        errorDetails:
          $ref: '#/components/schemas/errorDetails'
        groupEmail:
          type: string
          description: ""
        groupName:
          type: string
          description: The name of the group. The search_text provided in the call
            automatically performs a wild card search on group_name.
        groupType:
          type: string
          description: The group type.
        modified:
          type: string
          description: ""
        modifiedBy:
          type: string
          description: ""
        signingGroupId:
          type: string
          description: "When set to **true** and the feature is enabled in the sender's\
            \ account, the signing recipient is required to draw signatures and initials\
            \ at each signature/initial tab ( instead of adopting a signature/initial\
            \ style or only drawing a signature/initial once)."
        users:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/signingGroupUser'
      description: Signing groups
      x-ds-definition-name: signingGroup
      x-ds-category: SigningGroups
      x-ds-order: "10"
      x-ms-summary: Signing groups
    SigningGroupUsers:
      type: object
      properties:
        users:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/signingGroupUser'
      description: Signing groups' users
      x-ds-definition-name: signingGroupUsers
      x-ds-category: SigningGroups
      x-ds-order: "20"
      x-ms-summary: Signing groups' users
    TemplateRecipients:
      type: object
      properties:
        agents:
          type: array
          description: A complex type defining the management and access rights of
            a recipient assigned assigned as an agent on the document.
          items:
            $ref: '#/components/schemas/agent'
        carbonCopies:
          type: array
          description: "A complex type containing information about recipients who\
            \ should receive a copy of the envelope, but does not need to sign it."
          items:
            $ref: '#/components/schemas/carbonCopy'
        certifiedDeliveries:
          type: array
          description: "A complex type containing information on a recipient the must\
            \ receive the completed documents for the envelope to be completed, but\
            \ the recipient does not need to sign, initial, date, or add information\
            \ to any of the documents."
          items:
            $ref: '#/components/schemas/certifiedDelivery'
        currentRoutingOrder:
          type: string
          description: ""
        editors:
          type: array
          description: A complex type defining the management and access rights of
            a recipient assigned assigned as an editor on the document.
          items:
            $ref: '#/components/schemas/editor'
        errorDetails:
          $ref: '#/components/schemas/errorDetails'
        inPersonSigners:
          type: array
          description: Specifies a signer that is in the same physical location as
            a DocuSign user who will act as a Signing Host for the transaction. The
            recipient added is the Signing Host and new separate Signer Name field
            appears after Sign in person is selected.
          items:
            $ref: '#/components/schemas/inPersonSigner'
        intermediaries:
          type: array
          description: "Identifies a recipient that can, but is not required to, add\
            \ name and email information for recipients at the same or subsequent\
            \ level in the routing order (until subsequent Agents, Editors or Intermediaries\
            \ recipient types are added)."
          items:
            $ref: '#/components/schemas/intermediary'
        recipientCount:
          type: string
          description: |-
            The list of recipient event statuses that will trigger Connect to send updates to the url. It can be a two-part list with:

            * recipientEventStatusCode - The recipient status, this can be Sent, Delivered, Completed, Declined, AuthenticationFailed, and AutoResponded.
            * includeDocuments - When set to **true**, the envelope time zone information is included in the message.
        seals:
          type: array
          description: "Specifies one or more electronic seals to apply on documents.\
            \ For more information on Electronic Seals , see https://support.docusign.com/en/guides/ndse-user-guide-apply-electronic-seals"
          items:
            $ref: '#/components/schemas/sealSign'
        signers:
          type: array
          description: A complex type containing information about the Signer recipient.
          items:
            $ref: '#/components/schemas/signer'
        witnesses:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/witness'
      description: Template recipients
      x-ds-definition-name: recipients
      x-ds-category: Templates
      x-ds-order: "20"
      x-ms-summary: Template recipients
    TemplateBulkRecipients:
      type: object
      properties:
        bulkRecipients:
          type: array
          description: A complex type containing information about the bulk recipients
            in the response.
          items:
            $ref: '#/components/schemas/bulkRecipient'
        endPosition:
          type: string
          description: 'The last position in the result set. '
        nextUri:
          type: string
          description: 'The URI for the next chunk of records based on the search
            request. It is `null` if this is the last set of results for the search. '
        previousUri:
          type: string
          description: 'The URI for the prior chunk of records based on the search
            request. It is `null` if this is the first set of results for the search. '
        resultSetSize:
          type: string
          description: 'The number of results returned in this response. '
        startPosition:
          type: string
          description: Starting position of the current result set.
        totalSetSize:
          type: string
          description: The total number of items in the search's result set. It will
            always be greater than or equal to the value of the `resultSetSize` field.
      description: Template bulk recipients
      x-ds-definition-name: bulkRecipientsResponse
      x-ds-category: Templates
      x-ds-order: "30"
      x-ms-summary: Template bulk recipients
    TemplateCustomFields:
      type: object
      properties:
        listCustomFields:
          type: array
          description: An array of list custom fields.
          items:
            $ref: '#/components/schemas/listCustomField'
        textCustomFields:
          type: array
          description: An array of text custom fields.
          items:
            $ref: '#/components/schemas/textCustomField'
      description: Template custom fields
      x-ds-definition-name: customFields
      x-ds-category: Templates
      x-ds-order: "70"
      x-ms-summary: Template custom fields
    TemplateDocumentFields:
      type: object
      properties:
        documentFields:
          type: array
          description: "The array of name/value custom data strings to be added to\
            \ a document. Custom document field information is returned in the status,\
            \ but otherwise is not used by DocuSign. The array contains the elements:\
            \ \n\n* name - A string that can be a maximum of 50 characters. \n* value\
            \ - A string that can be a maximum of 200 characters.\n\n*IMPORTANT*:\
            \ If you are using xml, the name/value pair is contained in a nameValue\
            \ element. \n"
          items:
            $ref: '#/components/schemas/nameValue'
      description: Template document fields
      x-ds-definition-name: documentFieldsInformation
      x-ds-category: Templates
      x-ds-order: "60"
      x-ms-summary: Template document fields
    TemplateDocuments:
      type: object
      properties:
        templateDocuments:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/envelopeDocument'
        templateId:
          type: string
          description: "The unique identifier of the template. If this is not provided,\
            \ DocuSign will generate a value. "
      description: Template documents
      x-ds-definition-name: templateDocumentsResult
      x-ds-category: Templates
      x-ds-order: "40"
      x-ms-summary: Template documents
    TemplateLocks:
      type: object
      properties:
        errorDetails:
          $ref: '#/components/schemas/errorDetails'
        lockDurationInSeconds:
          type: string
          description: |
            Sets the time, in seconds, until the lock expires when there is no activity on the envelope.

            If no value is entered, then the default value of 300 seconds is used. The maximum value is 1,800 seconds.

            The lock duration can be extended.
        lockedByApp:
          type: string
          description: Specifies the friendly name of  the application that is locking
            the envelope.
        lockedByUser:
          $ref: '#/components/schemas/userInfo'
        lockedUntilDateTime:
          type: string
          description: The datetime until the envelope lock expires.
        lockToken:
          type: string
          description: A unique identifier provided to the owner of the envelope lock.   Used
            to prove ownership of the lock.
        lockType:
          type: string
          description: The type of envelope lock.  Currently "edit" is the only supported
            type.
        useScratchPad:
          type: string
          description: "Reserved for future use.\n\nIndicates whether a scratchpad\
            \ is used for editing information.\n "
      description: Template locks
      x-ds-definition-name: lockInformation
      x-ds-category: Templates
      x-ds-order: "80"
      x-ms-summary: Template locks
    Templates:
      type: object
      properties:
        allowMarkup:
          type: string
          description: "When set to **true**, Document Markup is enabled for envelope.\
            \ Account must have Document Markup enabled to use this"
        allowReassign:
          type: string
          description: "When set to **true**, the recipient can redirect an envelope\
            \ to a more appropriate recipient."
        allowViewHistory:
          type: string
          description: ""
        asynchronous:
          type: string
          description: "When set to **true**, the envelope is queued for processing\
            \ and the value of the `status` property is set to 'Processing'. Additionally,\
            \ get status calls return 'Processing' until completed. \n\n\n**Note**:\
            \ A `transactionId` is required for this call to work correctly. When\
            \ the envelope is created, the status is 'Processing' and an `envelopeId`\
            \ is not returned in the response. To get the `envelopeId`, use a GET\
            \ envelope query using the [transactionId](https://developers.docusign.com/esign-rest-api/reference/Envelopes/Envelopes/create/#envelopeDefinition)\
            \ or by checking the Connect notification."
        attachmentsUri:
          type: string
          description: ""
        authoritativeCopy:
          type: string
          description: "Specifies whether all documents in this envelope are authoritative\
            \ copies.\nA document can set its own `authoritativeCopy` property to\
            \ override this value. For example you can set the `authoritativeCopy`\
            \ on an envelope level to true but can turn it off for a specific document. "
        authoritativeCopyDefault:
          type: string
          description: |-
            The default `authoritativeCopy` setting for documents in this envelope that do not have `authoritativeCopy` set.
            If this property is not set, each document defaults to the envelope's `authoritativeCopy`.
        autoNavigation:
          type: string
          description: "When set to **true**, autonavigation is set for the recipient."
        brandId:
          type: string
          description: The unique identifier of a brand.
        brandLock:
          type: string
          description: ""
        certificateUri:
          type: string
          description: Retrieves a URI for an endpoint allowing you to easily retrieve
            certificate information.
        completedDateTime:
          type: string
          description: Specifies the date and time this item was completed.
        copyRecipientData:
          type: string
          description: ""
        createdDateTime:
          type: string
          description: Indicates the date and time the item was created.
        customFields:
          $ref: '#/components/schemas/AccountCustomFields'
        customFieldsUri:
          type: string
          description: Contains a URI for an endpoint to retrieve the custom fields.
        declinedDateTime:
          type: string
          description: The date and time the recipient declined the document. Read
            only.
        deletedDateTime:
          type: string
          description: Specifies the data and time the item was deleted.
        deliveredDateTime:
          type: string
          description: "Reserved: For DocuSign use only."
        disableResponsiveDocument:
          type: string
          description: ""
        documents:
          type: array
          description: Complex element contains the details on the documents in the
            envelope.
          items:
            $ref: '#/components/schemas/document'
        documentsCombinedUri:
          type: string
          description: ""
        documentsUri:
          type: string
          description: Contains a URI for an endpoint that you can use to retrieve
            the documents.
        emailBlurb:
          type: string
          description: ""
        emailSettings:
          $ref: '#/components/schemas/emailSettings'
        emailSubject:
          type: string
          description: |-
            Specifies the subject of the email that is sent to all recipients.

            See [ML:Template Email Subject Merge Fields] for information about adding merge field information to the email subject.
        enableWetSign:
          type: string
          description: "When set to **true**, the signer is allowed to print the document\
            \ and sign it on paper."
        enforceSignerVisibility:
          type: string
          description: |-
            When set to **true**, documents with tabs can only be viewed by signers that have a tab on that document. Recipients that have an administrative role (Agent, Editor, or Intermediaries) or informational role (Certified Deliveries or Carbon Copies) can always see all the documents in an envelope, unless they are specifically excluded using this setting when an envelope is sent. Documents that do not have tabs are always visible to all recipients, unless they are specifically excluded using this setting when an envelope is sent.

            ###### Note: Your account must have Document Visibility enabled to use this.
        envelopeId:
          type: string
          description: The envelope ID of the envelope status that failed to post.
        envelopeIdStamping:
          type: string
          description: "When set to **true**, Envelope ID Stamping is enabled."
        envelopeTemplateDefinition:
          $ref: '#/components/schemas/envelopeTemplateDefinition'
        envelopeUri:
          type: string
          description: Contains a URI for an endpoint that you can use to retrieve
            the envelope or envelopes.
        initialSentDateTime:
          type: string
          description: ""
        is21CFRPart11:
          type: string
          description: "When set to **true**, indicates that this module is enabled\
            \ on the account."
        isSignatureProviderEnvelope:
          type: string
          description: ""
        lastModifiedDateTime:
          type: string
          description: The date and time the item was last modified.
        lockInformation:
          $ref: '#/components/schemas/EnvelopeLocks'
        messageLock:
          type: string
          description: "When set to **true**, prevents senders from changing the contents\
            \ of `emailBlurb` and `emailSubject` properties for the envelope. \n\n\
            Additionally, this prevents users from making changes to the contents\
            \ of `emailBlurb` and `emailSubject` properties when correcting envelopes.\
            \ \n\nHowever, if the `messageLock` node is set to **true** and the `emailSubject`\
            \ property is empty, senders and correctors are able to add a subject\
            \ to the envelope."
        notification:
          $ref: '#/components/schemas/notification'
        notificationUri:
          type: string
          description: Contains a URI for an endpoint that you can use to retrieve
            the notifications.
        purgeState:
          type: string
          description: |+
            Shows the current purge state for the envelope. The possible values are:

            * `unpurged`: There has been no successful request to purge documents.
            * `documents_queued`: The envelope documents have been added to the purge queue, but have not been purged.
            * `documents_dequeued`: The envelope documents have been taken out of the purge queue.
            * `documents_and_metadata_queued`: The envelope documents and metadata have been added to the purge queue, but have not yet been purged.
            * `documents_purged`: The envelope documents have been successfully purged.
            * `documents_and_metadata_purged`: The envelope documents and metadata have been successfully purged.

        recipients:
          $ref: '#/components/schemas/EnvelopeRecipients'
        recipientsLock:
          type: string
          description: "When set to **true**, prevents senders from changing, correcting,\
            \ or deleting the recipient information for the envelope."
        recipientsUri:
          type: string
          description: Contains a URI for an endpoint that you can use to retrieve
            the recipients.
        sentDateTime:
          type: string
          description: The UTC DateTime when the envelope was sent. Read only.
        signerCanSignOnMobile:
          type: string
          description: ""
        signingLocation:
          type: string
          description: Specifies the physical location where the signing takes place.
            It can have two enumeration values; InPerson and Online. The default value
            is Online.
        status:
          type: string
          description: "Indicates the envelope status. Valid values are:\n\n* sent\
            \ - The envelope is sent to the recipients. \n* created - The envelope\
            \ is saved as a draft and can be modified and sent later."
        statusChangedDateTime:
          type: string
          description: The data and time the status changed.
        templatesUri:
          type: string
          description: Contains a URI for an endpoint which you can use to retrieve
            the templates.
        transactionId:
          type: string
          description: ' Used to identify an envelope. The id is a sender-generated
            value and is valid in the DocuSign system for 7 days. It is recommended
            that a transaction ID is used for offline signing to ensure that an envelope
            is not sent multiple times. The `transactionId` property can be used determine
            an envelope''s status (i.e. was it created or not) in cases where the
            internet connection was lost before the envelope status was returned.'
        useDisclosure:
          type: string
          description: "When set to **true**, the disclosure is shown to recipients\
            \ in accordance with the account's Electronic Record and Signature Disclosure\
            \ frequency setting. When set to **false**, the Electronic Record and\
            \ Signature Disclosure is not shown to any envelope recipients. \n\nIf\
            \ the `useDisclosure` property is not set, then the account's normal disclosure\
            \ setting is used and the value of the `useDisclosure` property is not\
            \ returned in responses when getting envelope information."
        voidedDateTime:
          type: string
          description: The date and time the envelope or template was voided.
        voidedReason:
          type: string
          description: The reason the envelope or template was voided.
      description: Template management
      x-ds-definition-name: envelopeTemplate
      x-ds-category: Templates
      x-ds-order: "10"
      x-ms-summary: Template management
    TemplateRecipientTabs:
      type: object
      properties:
        approveTabs:
          type: array
          description: "A list of\n[Approve tabs][approve].\n\n\nThis tab allows\n\
            the recipient to approve documents without\nplacing a signature or initials\
            \ on the document. If the\nrecipient clicks the tab during the signing\
            \ process, the\nrecipient is considered to have signed the document. No\n\
            information is shown on the document of the approval, but it\nis recorded\
            \ as a signature in the envelope history.\n\n[approve]:\t\t      https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/approve\n"
          items:
            $ref: '#/components/schemas/approve'
        checkboxTabs:
          type: array
          description: |
            A list of
            [Checkbox tabs][checkbox].


            This tab allows the recipient to select a yes/no (on/off) option.


            [checkbox]:  https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/checkbox
          items:
            $ref: '#/components/schemas/checkbox'
        companyTabs:
          type: array
          description: "A list of \n[Company tabs][company].\n\n\nThis tab displays\
            \ the recipient's company name.\n\n\n\n[company]: https://developers.docusign.com/esign-rest-api/reference/EnvelopeRecipientTabs/create/#/definitions/company\
            \ \n"
          items:
            $ref: '#/components/schemas/company'
        dateSignedTabs:
          type: array
          description: "A list of \n[Date Signed tabs][dateSigned]\n\n\nThis tab displays\
            \ the date that the recipient signed the\ndocument.\n\n[dateSigned]: https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/dateSigned\
            \ \n"
          items:
            $ref: '#/components/schemas/dateSigned'
        dateTabs:
          type: array
          description: "A list of \n[Date tabs][date].\n\n\nThis tab allows the recipient\
            \ to enter a date. Date tabs\nare one-line fields that allow date information\
            \ to be\nentered in any format. The tooltip for this tab recommends\n\
            entering the date as MM/DD/YYYY, but this is not enforced.\nThe format\
            \ entered by the signer is retained. If you need a\nparticular date format\
            \ enforced, DocuSign recommends using a\nText tab with a validation pattern\
            \ and a validation message\nto enforce the format.\n\n\n[date]: https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/date\
            \ \n"
          items:
            $ref: '#/components/schemas/date'
        declineTabs:
          type: array
          description: "A list of \n[Decline tabs][decline].\n\nThis tab allows the\
            \ recipient the option of declining an\nenvelope. If the recipient clicks\
            \ the tab during the signing\nprocess, the envelope is voided.\n\n\n[decline]:\
            \ https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/decline\
            \ \n"
          items:
            $ref: '#/components/schemas/decline'
        emailAddressTabs:
          type: array
          description: "A list of \n[Email Address tabs][emailAddress].\n\nThis tab\
            \ \ndisplays the recipient's email as entered in the\nrecipient information.\n\
            \n\n[emailAddress]: https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/emailAddress\
            \ \n"
          items:
            $ref: '#/components/schemas/emailAddress'
        emailTabs:
          type: array
          description: "A list of \n[Email tabs][email].\n\nThis tab \nallows the\
            \ recipient to enter an email address.\nThis is a one-line field that\
            \ checks that a valid email\naddress is entered. It uses the same parameters\
            \ as a Text\ntab, with the validation message and pattern set for email\n\
            information.\n\nWhen getting information that includes\nthis tab type,\
            \ the original value of the tab when the\nassociated envelope was sent\
            \ is included in the response.\n\n[email]: https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/email\
            \ \n"
          items:
            $ref: '#/components/schemas/email'
        envelopeIdTabs:
          type: array
          description: "A list of \n[Envelope ID tabs][envelopeId].\n\nThis tab \n\
            displays the envelope ID. Recipients cannot enter\nor change the information\
            \ in this tab.\n\n\n[envelopeId]: https://developers.docusign.com/esign-rest-api/reference/EnvelopeRecipientTabs/create/#/definitions/envelopeId\
            \ \n"
          items:
            $ref: '#/components/schemas/envelopeId'
        firstNameTabs:
          type: array
          description: "A list of \n[First Name tabs][firstName].\n\nThis tab \ndisplays\
            \ the recipient's first name. It\ntakes the recipient's name as entered\
            \ in the recipient\ninformation, splits it into sections based on spaces\
            \ and\nuses the first section as the first name.\n\n\n[firstName]: https://developers.docusign.com/esign-rest-api/reference/EnvelopeRecipientTabs/create/#/definitions/firstName\
            \ \n"
          items:
            $ref: '#/components/schemas/firstName'
        formulaTabs:
          type: array
          description: "A list of [Formula tabs][formulaTab].\n\nThe value of a formula\
            \ tab is calculated\nfrom the values of other\nnumber or date tabs in\
            \ the document.\nWhen the recipient completes the underlying fields,\n\
            the formula tab calculates and displays the result.\n\nThe `formula` property\
            \ of the tab\ncontains the references\nto the underlying tabs.\nSee [Calculated\
            \ Fields][calculatedfields]\nin the DocuSign Support Center\nto learn\
            \ more about formulas.\n\nIf a formula tab contains\na `paymentDetails`\
            \ property,\nthe tab is considered a payment item.\nSee [Requesting Payments\
            \ Along with Signatures][paymentguide]\nin the DocuSign Support Center\n\
            to learn more about payments.\n\n[calculatedfields]: https://support.docusign.com/en/guides/ndse-user-guide-calculated-fields\n\
            [paymentguide]:     https://support.docusign.com/en/guides/requesting-payments-along-with-signatures\n\
            [formulaTab]:\t    \thttps://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/formulaTab\n"
          items:
            $ref: '#/components/schemas/formulaTab'
        fullNameTabs:
          type: array
          description: "A list of \n[Full Name tabs][fullName].\n\nThis tab \ndisplays\
            \ the recipient's full name.\n\n\n[fullName]: https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/fullName\
            \ \n"
          items:
            $ref: '#/components/schemas/fullName'
        initialHereTabs:
          type: array
          description: "A list of \n[Initial Here tabs][initialHere].\n\nThis tab\
            \ allows the recipient to initial the document. May\nbe optional.\n\n\
            [initialHere]: https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/initialHere\
            \ \n"
          items:
            $ref: '#/components/schemas/initialHere'
        lastNameTabs:
          type: array
          description: "A list of \n[Last Name tabs][lastName].\n\nThis tab \ndisplays\
            \ the recipient's last name. It\ntakes the recipient's name as entered\
            \ in the recipient\ninformation, splits it into sections based on spaces\
            \ and\nuses the last section as the last name.\n\n\n[lastName]: https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/lastName\
            \ \n"
          items:
            $ref: '#/components/schemas/lastName'
        listTabs:
          type: array
          description: "A list of \n[list tabs][list].\n\nThis tab offers a list of\
            \ options to choose from. The\n`listItems` property is used to specify\
            \ the selectable\noptions.\n\n\n\n[list]: https://developers.docusign.com/esign-rest-api/reference/EnvelopeRecipientTabs/create/#/definitions/list\
            \ \n"
          items:
            $ref: '#/components/schemas/list'
        notarizeTabs:
          type: array
          description: "A list of \n[Notarize tabs][notarize].\n\nA notarize tab is\
            \ a tab that alerts notary recipients that\nthey must take action on the\
            \ page.\nOnly one notarize tab can appear on a page.\n\n[notarize]: https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/notarize\
            \ \n"
          items:
            $ref: '#/components/schemas/notarize'
        noteTabs:
          type: array
          description: "A list of \n[Note tabs][note].\n\nThis tab  displays additional\
            \ information, in the form of a\nnote, for the recipient.\n\n[note]: https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/note\
            \ \n"
          items:
            $ref: '#/components/schemas/note'
        numberTabs:
          type: array
          description: "A list of \n[Number tabs][number].\n\nThis tab allows the\
            \ recipient to enter numbers and decimal\n(.) points.\n\n\n\n[number]:\
            \ https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/number\
            \ \n"
          items:
            $ref: '#/components/schemas/number'
        radioGroupTabs:
          type: array
          description: "A list of \n[Radio Group tabs][radioGroup].\n\nThis tab \n\
            This group tab is used to place radio buttons on a document.\nThe `radios`\
            \ property is used to add and place the radio\nbuttons associated with\
            \ the group. Only one radio button can\nbe selected in a group.\n\n\n\
            [radioGroup]: https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/radioGroup\
            \ \n"
          items:
            $ref: '#/components/schemas/radioGroup'
        signerAttachmentTabs:
          type: array
          description: "A list of \n[Signer Attachment tabs][signerAttachment].\n\n\
            This tab \nallows the recipient to attach supporting\ndocuments to an\
            \ envelope.\n\n\n[signerAttachment]: https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/signerAttachment\
            \ \n"
          items:
            $ref: '#/components/schemas/signerAttachment'
        signHereTabs:
          type: array
          description: "A list of \n[Sign Here tabs][signHere].\n\nThis tab  allows\
            \ the recipient to sign a document. May be\noptional.\n\n[signHere]: https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/signHere\
            \ \n"
          items:
            $ref: '#/components/schemas/signHere'
        smartSectionTabs:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/smartSection'
        ssnTabs:
          type: array
          description: "A list of \n[SSN tabs][ssn].\n\nThis tab \nis a one-line field\
            \ that allows the recipient to enter a Social\nSecurity Number. The SSN\
            \ can be typed with or without\ndashes. It uses the same parameters as\
            \ a Text tab, with the\nvalidation message and pattern set for SSN information.\n\
            \n\n[ssn]: https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/ssn\
            \ \n"
          items:
            $ref: '#/components/schemas/ssn'
        textTabs:
          type: array
          description: "A list of \n[Text tabs][text].\n\nThis tab \nA tab that allows\
            \ the recipient to enter any type of text.\n\n[text]: https://developers.docusign.com/esign-rest-api/reference/EnvelopeRecipientTabs/create/#/definitions/text\
            \ \n"
          items:
            $ref: '#/components/schemas/text'
        titleTabs:
          type: array
          description: "A list of \n[Title tabs][title].\n\nThis tab  displays the\
            \ recipient's title.\n\n\n[title]: https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/title\
            \ \n"
          items:
            $ref: '#/components/schemas/title'
        viewTabs:
          type: array
          description: "A list of \n[View tabs][view].\n\nThis tab \nThis tab is used\
            \ with the Approve tab to handle\nsupplemental documents.\n\n[view]: https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/view\
            \ \n"
          items:
            $ref: '#/components/schemas/view'
        zipTabs:
          type: array
          description: "A list of \n[Zip tabs][zip].\n\nThis tab \nallows the recipient\
            \ to enter a ZIP code. The ZIP\ncode can be five digits or nine digits\
            \ in the ZIP+4 format.\nThe zip code can be typed with or without dashes.\
            \ It uses\nthe same parameters as a Text tab, with the validation\nmessage\
            \ and pattern set for ZIP code information.\n\n\n[zip]: https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/zip\n"
          items:
            $ref: '#/components/schemas/zip'
      description: Template tabs
      x-ds-definition-name: tabs
      x-ds-category: Templates
      x-ds-order: "50"
      x-ms-summary: Template tabs
    TemplateViews:
      type: object
      properties:
        url:
          type: string
          description: The view URL to be navigated to.
      description: Embedding template views
      x-ds-definition-name: viewUrl
      x-ds-category: Templates
      x-ds-order: "55"
      x-ms-summary: Embedding template views
    UserCustomSettings:
      type: object
      properties:
        customSettings:
          type: array
          description: The name/value pair information for the user custom setting.
          items:
            $ref: '#/components/schemas/nameValue'
      description: Users' custom settings
      x-ds-definition-name: customSettingsInformation
      x-ds-category: Users
      x-ds-order: "30"
      x-ms-summary: Users' custom settings
    UserProfiles:
      type: object
      properties:
        address:
          $ref: '#/components/schemas/addressInformation_v2'
        authenticationMethods:
          type: array
          description: "These properties cannot be modified in the PUT. \n\nIndicates\
            \ the authentication methods used by the user."
          items:
            $ref: '#/components/schemas/authenticationMethod'
        companyName:
          type: string
          description: The name of the user's Company.
        displayOrganizationInfo:
          type: string
          description: " When set to **true**, the user's company and title information\
            \ are shown on the ID card. "
        displayPersonalInfo:
          type: string
          description: "When set to **true**, the user's Address and Phone number\
            \ are shown on the ID card."
        displayProfile:
          type: string
          description: "When set to **true**, the user's ID card can be viewed from\
            \ signed documents and envelope history."
        displayUsageHistory:
          type: string
          description: "When set to **true**, the user's usage information is shown\
            \ on the ID card."
        profileImageUri:
          type: string
          description: ""
        title:
          type: string
          description: |-
            The user's job title.

            Limit 100 characters.
        usageHistory:
          $ref: '#/components/schemas/usageHistory'
        userDetails:
          $ref: '#/components/schemas/userInformation'
        userProfileLastModifiedDate:
          type: string
          description: The date-time when the user's profile was last modified.
      description: Users' profiles
      x-ds-definition-name: userProfile
      x-ds-category: Users
      x-ds-order: "20"
      x-ms-summary: Users' profiles
    Users:
      type: object
      properties:
        accountManagementGranular:
          $ref: '#/components/schemas/userAccountManagementGranularInformation'
        activationAccessCode:
          type: string
          description: The activation code the new user must enter when activating
            their account.
        countryCode:
          type: string
          description: ""
        createdDateTime:
          type: string
          description: Indicates the date and time the item was created.
        customSettings:
          type: array
          description: The name/value pair information for the user custom setting.
          items:
            $ref: '#/components/schemas/nameValue'
        email:
          type: string
          description: The user's email address.
        enableConnectForUser:
          type: string
          description: "Specifies whether the user is enabled for updates from DocuSign\
            \ Connect. Valid values: true or false."
        errorDetails:
          $ref: '#/components/schemas/errorDetails'
        firstName:
          type: string
          description: "The user's first name. \nMaximum Length: 50 characters."
        forgottenPasswordInfo:
          $ref: '#/components/schemas/forgottenPasswordInformation'
        groupList:
          type: array
          description: "A list of the group information for groups to add the user\
            \ to. Group information can be found by calling [ML:GET group information].\
            \ The only required parameter is groupId. \n\nThe parameters are:\n\n\
            * groupId - The DocuSign group ID for the group.\n* groupName - The name\
            \ of the group\n* permissionProfileId - The ID of the permission profile\
            \ associated with the group.\n* groupType - The group type.\n"
          items:
            $ref: '#/components/schemas/group'
        homeAddress:
          $ref: '#/components/schemas/addressInformation_v2'
        initialsImageUri:
          type: string
          description: Contains the URI for an endpoint that you can use to retrieve
            the initials image.
        isAdmin:
          type: string
          description: Determines if the feature set is actively set as part of the
            plan.
        lastLogin:
          type: string
          description: The date-time when the user last logged on to the system.
        lastName:
          type: string
          description: "The user's last name. \nMaximum Length: 50 characters."
        loginStatus:
          type: string
          description: "Shows the current status of the user's password. Possible\
            \ values are: \n\n* password_reset\n* password_active\n* password_expired\n\
            * password_locked\n* password_reset_failed \n"
        middleName:
          type: string
          description: "The user's middle name. \nLimit: 50 characters."
        password:
          type: string
          description: ""
        passwordExpiration:
          type: string
          description: "If password expiration is enabled, the date-time when the\
            \ user's password expires."
        permissionProfileId:
          type: string
          description: ""
        permissionProfileName:
          type: string
          description: ""
        profileImageUri:
          type: string
          description: ""
        sendActivationEmail:
          type: string
          description: ""
        sendActivationOnInvalidLogin:
          type: string
          description: "When set to **true**, specifies that an additional activation\
            \ email is sent to the user if they fail a log on before activating their\
            \ account. "
        signatureImageUri:
          type: string
          description: Contains the URI for an endpoint that you can use to retrieve
            the signature image.
        subscribe:
          type: string
          description: ""
        suffixName:
          type: string
          description: "The suffix for the user's name, such as Jr, IV, PhD, etc.\n\
            \nLimit: 50 characters. "
        title:
          type: string
          description: |-
            Salutation for the user, such as Ms, Dr, Capt., etc.

            Limit: 10 characters.
        uri:
          type: string
          description: ""
        userId:
          type: string
          description: "The user ID of the user being accessed. Generally this is\
            \ the user ID of the authenticated user, but if the authenticated user\
            \ is an Admin on the account, this may be another user the Admin user\
            \ is accessing. **Note**: For the [GET /v2/accounts/{accountId}/envelopes](https://developers.docusign.com/esign-rest-api/reference/Envelopes/Envelopes/listStatusChanges/#envelopesInformation)\
            \ method, the `user_id` query parameter is not implemented and should\
            \ not be used."
        userName:
          type: string
          description: |-
            The user's full name.
            <!--
            `title` + `firstName` + `middleName` + `lastName` + `suffixName`
            -->
        userProfileLastModifiedDate:
          type: string
          description: The date-time when the user's profile was last modified.
        userSettings:
          type: array
          description: "The collection of settings that \ndescribes the actions\n\
            a user can perform.\nSee [User Settings][] for\na list of available settings.\n\
            \ \n[user settings]: https://developers.docusign.com/esign-rest-api/reference/Users/Users/create/#user-settings"
          items:
            $ref: '#/components/schemas/nameValue'
        userStatus:
          type: string
          description: |
            Status of the user's account. One of:

            * ActivationRequired
            * ActivationSent
            * Active
            * Closed
            * Disabled
        userType:
          type: string
          description: ""
        workAddress:
          $ref: '#/components/schemas/addressInformation_v2'
      description: User management
      x-ds-definition-name: userInformation
      x-ds-category: Users
      x-ds-order: "10"
      x-ms-summary: User management
    UserSignatures:
      type: object
      properties:
        adoptedDateTime:
          type: string
          description: The date and time the user adopted their signature.
        createdDateTime:
          type: string
          description: Indicates the date and time the item was created.
        dateStampProperties:
          $ref: '#/components/schemas/dateStampProperties'
        errorDetails:
          $ref: '#/components/schemas/errorDetails'
        externalID:
          type: string
          description: ""
        imageType:
          type: string
          description: One of **signature_image** or **initials_image**.
        initials150ImageId:
          type: string
          description: ""
        initialsImageUri:
          type: string
          description: Contains the URI for an endpoint that you can use to retrieve
            the initials image.
        isDefault:
          type: string
          description: ""
        phoneticName:
          type: string
          description: ""
        signature150ImageId:
          type: string
          description: ""
        signatureFont:
          type: string
          description: |
            The font type for the signature, if the signature is not drawn. The supported font types are:

            "7_DocuSign", "1_DocuSign", "6_DocuSign", "8_DocuSign", "3_DocuSign", "Mistral", "4_DocuSign", "2_DocuSign", "5_DocuSign", "Rage Italic"
        signatureId:
          type: string
          description: "Specifies the signature ID associated with the signature name.\
            \ You can use the signature ID in the URI in place of the signature name,\
            \ and the value stored in the `signatureName` property in the body is\
            \ used. This allows the use of special characters (such as \"&\", \"<\"\
            , \">\") in a the signature name. Note that with each update to signatures,\
            \ the returned signature ID might change, so the caller will need to trigger\
            \ off the signature name to get the new signature ID."
        signatureImageUri:
          type: string
          description: Contains the URI for an endpoint that you can use to retrieve
            the signature image.
        signatureInitials:
          type: string
          description: ' The initials associated with the signature.'
        signatureName:
          type: string
          description: Specifies the user signature name.
        signatureType:
          type: string
          description: ""
        stampFormat:
          type: string
          description: ""
        stampImageUri:
          type: string
          description: ""
        stampSizeMM:
          type: string
          description: ""
        stampType:
          type: string
          description: ""
      description: Users' signatures
      x-ds-definition-name: userSignature
      x-ds-category: Users
      x-ds-order: "40"
      x-ms-summary: Users' signatures
    Contacts:
      type: object
      properties:
        contactId:
          type: string
          description: The unique identifier of a person in the contacts address book.
        contactPhoneNumbers:
          type: array
          description: |-
            A list of the contact's phone numbers.

            **Note**: The phone numbers associated with shared contacts do not display to users other than the user who added the contact. Additionally, in the following scenarios, the phone number of a shared contact does not populate automatically for anyone other than the user who added the contact:

            - Sending an envelope by using SMS
            - Using phone authentication

            You must ask the user who added the contact for the phone number and then manually enter it into the authentication box.
          items:
            $ref: '#/components/schemas/contactPhoneNumber'
        contactUri:
          type: string
          description: The URI for retrieving information about the contact.
        emails:
          type: array
          description: The email address or addresses associated with the contact.
          items:
            type: string
        errorDetails:
          $ref: '#/components/schemas/errorDetails'
        name:
          type: string
          description: The name of the contact.
        organization:
          type: string
          description: The name of the contact's organization.
        shared:
          type: string
          description: |-
            When set to **true**, the contact is shared. For more information, see [Shared Contacts](https://support.docusign.com/guides/ndse-user-guide-manage-contacts).

            **Note**: The phone numbers associated with shared contacts do not display to users other than the user who added the contact. Additionally, in the following scenarios, the phone number of a shared contact does not populate automatically for anyone other than the user who added the contact:

            - Sending an envelope by using SMS
            - Using phone authentication

            You must ask the user who added the contact for the phone number and then manually enter it into the authentication box.
        signingGroup:
          type: string
          description: "If the contact belongs to a signing group, this property contains\
            \ the `signingGroupId`."
        signingGroupName:
          type: string
          description: "The display name for the signing group. \n\nMaximum Length:\
            \ 100 characters. "
      description: Information about a contact in an account's address book.
      x-ds-definition-name: contact
      x-ds-category: Users
      x-ds-order: "50"
      x-ms-summary: Information about a contact in an account's address book.
    EnvelopeAttachments:
      type: object
      properties:
        accessControl:
          type: string
          description: ""
        attachmentId:
          type: string
          description: ""
        attachmentType:
          type: string
          description: ""
        errorDetails:
          $ref: '#/components/schemas/errorDetails'
        label:
          type: string
          description: ""
        name:
          type: string
          description: ""
      description: ""
      x-ds-definition-name: envelopeAttachment
      x-ds-category: Envelopes
      x-ds-order: "60"
      x-ms-summary: ""
    AccountPermissionProfiles:
      type: object
      properties:
        modifiedByUsername:
          type: string
          description: ""
        modifiedDateTime:
          type: string
          description: ""
        permissionProfileId:
          type: string
          description: ""
        permissionProfileName:
          type: string
          description: ""
        settings:
          $ref: '#/components/schemas/accountRoleSettings'
        userCount:
          type: string
          description: ""
        users:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/userInformation'
      description: ""
      x-ds-definition-name: permissionProfile
      x-ds-category: Accounts
      x-ds-order: "70"
      x-ms-summary: ""
    PowerForms:
      type: object
      properties:
        createdBy:
          type: string
          description: ""
        createdDateTime:
          type: string
          description: Indicates the date and time the item was created.
        emailBody:
          type: string
          description: "Specifies the email body of the message sent to the recipient.\
            \ \n\nMaximum length: 10000 characters. "
        emailSubject:
          type: string
          description: |-
            Specifies the subject of the email that is sent to all recipients.

            See [ML:Template Email Subject Merge Fields] for information about adding merge field information to the email subject.
        envelopes:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/envelope'
        errorDetails:
          $ref: '#/components/schemas/errorDetails'
        instructions:
          type: string
          description: ""
        isActive:
          type: string
          description: ""
        lastUsed:
          type: string
          description: ""
        limitUseInterval:
          type: string
          description: ""
        limitUseIntervalEnabled:
          type: string
          description: ""
        limitUseIntervalUnits:
          type: string
          description: ""
        maxUseEnabled:
          type: string
          description: ""
        name:
          type: string
          description: ""
        powerFormId:
          type: string
          description: ""
        powerFormUrl:
          type: string
          description: ""
        recipients:
          type: array
          description: An array of powerform recipients.
          items:
            $ref: '#/components/schemas/powerFormRecipient'
        senderName:
          type: string
          description: ""
        senderUserId:
          type: string
          description: ""
        signingMode:
          type: string
          description: ""
        templateId:
          type: string
          description: "The unique identifier of the template. If this is not provided,\
            \ DocuSign will generate a value. "
        templateName:
          type: string
          description: ""
        timesUsed:
          type: string
          description: ""
        uri:
          type: string
          description: ""
        usesRemaining:
          type: string
          description: ""
      description: ""
      x-ds-definition-name: powerForm
      x-ds-category: PowerForms
      x-ds-order: "80"
      x-ms-summary: ""
    PowerFormData:
      type: object
      properties:
        envelopeId:
          type: string
          description: The envelope ID of the envelope status that failed to post.
        recipients:
          type: array
          description: An array of powerform recipients.
          items:
            $ref: '#/components/schemas/powerFormFormDataRecipient'
      description: ""
      x-ds-definition-name: powerFormFormDataEnvelope
      x-ds-category: PowerForms
      x-ds-order: "90"
      x-ms-summary: ""
    AccountTabSettings:
      type: object
      properties:
        allowTabOrder:
          type: string
          description: ""
        allowTabOrderMetadata:
          $ref: '#/components/schemas/settingsMetadata'
        approveDeclineTabsEnabled:
          type: string
          description: ""
        approveDeclineTabsMetadata:
          $ref: '#/components/schemas/settingsMetadata'
        calculatedFieldsEnabled:
          type: string
          description: ""
        calculatedFieldsMetadata:
          $ref: '#/components/schemas/settingsMetadata'
        checkboxTabsEnabled:
          type: string
          description: ""
        checkboxTabsMetadata:
          $ref: '#/components/schemas/settingsMetadata'
        dataFieldRegexEnabled:
          type: string
          description: ""
        dataFieldRegexMetadata:
          $ref: '#/components/schemas/settingsMetadata'
        dataFieldSizeEnabled:
          type: string
          description: ""
        dataFieldSizeMetadata:
          $ref: '#/components/schemas/settingsMetadata'
        firstLastEmailTabsEnabled:
          type: string
          description: ""
        firstLastEmailTabsMetadata:
          $ref: '#/components/schemas/settingsMetadata'
        listTabsEnabled:
          type: string
          description: ""
        listTabsMetadata:
          $ref: '#/components/schemas/settingsMetadata'
        noteTabsEnabled:
          type: string
          description: ""
        noteTabsMetadata:
          $ref: '#/components/schemas/settingsMetadata'
        radioTabsEnabled:
          type: string
          description: ""
        radioTabsMetadata:
          $ref: '#/components/schemas/settingsMetadata'
        savingCustomTabsEnabled:
          type: string
          description: ""
        savingCustomTabsMetadata:
          $ref: '#/components/schemas/settingsMetadata'
        senderToChangeTabAssignmentsEnabled:
          type: string
          description: ""
        senderToChangeTabAssignmentsMetadata:
          $ref: '#/components/schemas/settingsMetadata'
        sharedCustomTabsEnabled:
          type: string
          description: ""
        sharedCustomTabsMetadata:
          $ref: '#/components/schemas/settingsMetadata'
        tabDataLabelEnabled:
          type: string
          description: ""
        tabDataLabelMetadata:
          $ref: '#/components/schemas/settingsMetadata'
        tabLocationEnabled:
          type: string
          description: ""
        tabLocationMetadata:
          $ref: '#/components/schemas/settingsMetadata'
        tabLockingEnabled:
          type: string
          description: ""
        tabLockingMetadata:
          $ref: '#/components/schemas/settingsMetadata'
        tabScaleEnabled:
          type: string
          description: ""
        tabScaleMetadata:
          $ref: '#/components/schemas/settingsMetadata'
        tabTextFormattingEnabled:
          type: string
          description: ""
        tabTextFormattingMetadata:
          $ref: '#/components/schemas/settingsMetadata'
        textTabsEnabled:
          type: string
          description: ""
        textTabsMetadata:
          $ref: '#/components/schemas/settingsMetadata'
      description: ""
      x-ds-definition-name: tabAccountSettings
      x-ds-category: Accounts
      x-ds-order: "100"
      x-ms-summary: ""
    ENoteConfigurations:
      type: object
      properties:
        connectConfigured:
          type: string
          description: ""
        eNoteConfigured:
          type: string
          description: ""
        organization:
          type: string
          description: ""
        password:
          type: string
          description: ""
        userName:
          type: string
          description: ""
      description: ""
      x-ds-definition-name: eNoteConfiguration
      x-ds-category: Accounts
      x-ds-order: "110"
      x-ms-summary: ""
    WorkspaceItems:
      type: object
      properties:
        callerAuthorization:
          $ref: '#/components/schemas/workspaceUserAuthorization'
        contentType:
          type: string
          description: ""
        created:
          type: string
          description: The UTC DateTime when the workspace item was created.
        createdById:
          type: string
          description: ""
        createdByInformation:
          $ref: '#/components/schemas/workspaceUser'
        extension:
          type: string
          description: ""
        fileSize:
          type: string
          description: ""
        fileUri:
          type: string
          description: ""
        id:
          type: string
          description: ""
        isPublic:
          type: string
          description: " If true, this supersedes need for bit mask permission with\
            \ workspaceUserAuthorization"
        lastModified:
          type: string
          description: Utc date and time the comment was last updated (can only be
            done by creator.)
        lastModifiedById:
          type: string
          description: Utc date and time the comment was last updated (can only be
            done by creator)
        lastModifiedByInformation:
          $ref: '#/components/schemas/workspaceUser'
        name:
          type: string
          description: "A simple string description of the item, such as a file name\
            \ or a folder name."
        pageCount:
          type: string
          description: ""
        parentFolderId:
          type: string
          description: "The ID of the parent folder. This is the GUID of the parent\
            \ folder, or the special value 'root' for the root folder."
        parentFolderUri:
          type: string
          description: ""
        type:
          type: string
          description: "The type of the workspace item. Valid values are file, folder."
        uri:
          type: string
          description: ""
      description: ""
      x-ds-definition-name: workspaceItem
      x-ds-category: Workspaces
      x-ds-order: "130"
      x-ms-summary: ""
    Workspaces:
      type: object
      properties:
        billableAccountId:
          type: string
          description: ""
        created:
          type: string
          description: The UTC DateTime when the workspace user authorization was
            created.
        createdByInformation:
          $ref: '#/components/schemas/workspaceUser'
        lastModified:
          type: string
          description: Utc date and time the comment was last updated (can only be
            done by creator.)
        lastModifiedByInformation:
          $ref: '#/components/schemas/workspaceUser'
        status:
          type: string
          description: Item status. <!-- TODO -->
        workspaceBaseUrl:
          type: string
          description: The relative URL that may be used to access the workspace.
        workspaceDescription:
          type: string
          description: Text describing the purpose of the workspace.
        workspaceId:
          type: string
          description: "The id of the workspace, always populated."
        workspaceName:
          type: string
          description: The name of the workspace.
        workspaceUri:
          type: string
          description: The relative URI that may be used to access the workspace.
      description: ""
      x-ds-definition-name: workspace
      x-ds-category: Workspaces
      x-ds-order: "140"
      x-ms-summary: ""
    ChunkedUploads:
      type: object
      properties:
        checksum:
          type: string
          description: ""
        chunkedUploadId:
          type: string
          description: ""
        chunkedUploadParts:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/chunkedUploadPart'
        chunkedUploadUri:
          type: string
          description: ""
        committed:
          type: string
          description: ""
        expirationDateTime:
          type: string
          description: ""
        maxChunkedUploadParts:
          type: string
          description: ""
        maxTotalSize:
          type: string
          description: ""
        totalSize:
          type: string
          description: ""
      description: 'Chunked Uploads resource '
      x-ds-definition-name: chunkedUploadResponse
      x-ds-category: Envelopes
      x-ds-order: "150"
      x-ms-summary: 'Chunked Uploads resource '
    EnvelopeFormData:
      type: object
      properties:
        emailSubject:
          type: string
          description: |-
            Specifies the subject of the email that is sent to all recipients.

            See [ML:Template Email Subject Merge Fields] for information about adding merge field information to the email subject.
        envelopeId:
          type: string
          description: The envelope ID of the envelope status that failed to post.
        formData:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/nameValue'
        prefillFormData:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/nameValue'
        recipientFormData:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/recipientFormData'
        sentDateTime:
          type: string
          description: The UTC DateTime when the envelope was sent. Read only.
        status:
          type: string
          description: "Indicates the envelope status. Valid values are:\n\n* sent\
            \ - The envelope is sent to the recipients. \n* created - The envelope\
            \ is saved as a draft and can be modified and sent later."
      description: ""
      x-ds-definition-name: envelopeFormData
      x-ds-category: Envelopes
      x-ds-order: "160"
      x-ms-summary: ""
    EnvelopeDocumentVisibility:
      type: object
      properties:
        documentVisibility:
          type: array
          description: "A list of `documentVisibility` objects. Each object in the\
            \ list specifies whether a document in the envelope is visible to this\
            \ recipient. For the envelope to use this functionality, Document Visibility\
            \ must be enabled for the account and the `enforceSignerVisibility` property\
            \ must be set to **true**."
          items:
            $ref: '#/components/schemas/documentVisibility'
      description: ""
      x-ds-definition-name: documentVisibilityList
      x-ds-category: Envelopes
      x-ds-order: "170"
      x-ms-summary: ""
    TemplateDocumentVisibility:
      type: object
      properties:
        documentVisibility:
          type: array
          description: "A list of `documentVisibility` objects. Each object in the\
            \ list specifies whether a document in the envelope is visible to this\
            \ recipient. For the envelope to use this functionality, Document Visibility\
            \ must be enabled for the account and the `enforceSignerVisibility` property\
            \ must be set to **true**."
          items:
            $ref: '#/components/schemas/documentVisibility'
      description: ""
      x-ds-definition-name: templateDocumentVisibilityList
      x-ds-category: Templates
      x-ds-order: "180"
      x-ms-summary: ""
    AccountPasswordRules:
      type: object
      properties:
        expirePassword:
          type: string
          description: ""
        expirePasswordDays:
          type: string
          description: ""
        expirePasswordDaysMetadata:
          $ref: '#/components/schemas/accountPasswordExpirePasswordDays'
        lockoutDurationMinutes:
          type: string
          description: ""
        lockoutDurationMinutesMetadata:
          $ref: '#/components/schemas/accountPasswordLockoutDurationMinutes'
        lockoutDurationType:
          type: string
          description: ""
        lockoutDurationTypeMetadata:
          $ref: '#/components/schemas/accountPasswordLockoutDurationType'
        minimumPasswordAgeDays:
          type: string
          description: ""
        minimumPasswordAgeDaysMetadata:
          $ref: '#/components/schemas/accountPasswordMinimumPasswordAgeDays'
        minimumPasswordLength:
          type: string
          description: ""
        minimumPasswordLengthMetadata:
          $ref: '#/components/schemas/accountMinimumPasswordLength'
        passwordIncludeDigit:
          type: string
          description: ""
        passwordIncludeDigitOrSpecialCharacter:
          type: string
          description: ""
        passwordIncludeLowerCase:
          type: string
          description: ""
        passwordIncludeSpecialCharacter:
          type: string
          description: ""
        passwordIncludeUpperCase:
          type: string
          description: ""
        passwordStrengthType:
          type: string
          description: ""
        passwordStrengthTypeMetadata:
          $ref: '#/components/schemas/accountPasswordStrengthType'
        questionsRequired:
          type: string
          description: ""
        questionsRequiredMetadata:
          $ref: '#/components/schemas/accountPasswordQuestionsRequired'
      description: ""
      x-ds-definition-name: accountPasswordRules
      x-ds-category: Accounts
      x-ds-order: "190"
      x-ms-summary: ""
    AccountWatermarks:
      type: object
      properties:
        displayAngle:
          type: string
          description: ""
        enabled:
          type: string
          description: ""
        font:
          type: string
          description: |
            The font to be used for the tab value. Supported Fonts include:

            - Default
            - Arial
            - ArialNarrow
            - Calibri
            - CourierNew
            - Garamond
            - Georgia
            - Helvetica
            - LucidaConsole
            - MSGothic
            - MSMincho
            - OCR-A
            - Tahoma
            - TimesNewRoman
            - Trebuchet
            - Verdana
        fontColor:
          type: string
          description: "The font color used for the information in the tab. Possible\
            \ values are: \n\n- Black\n- BrightBlue\n- BrightRed\n- DarkGreen\n- DarkRed\n\
            - Gold\n- Green\n- NavyBlue\n- Purple\n- White\n"
        fontSize:
          type: string
          description: |-
            The font size used for the information in the tab. Possible values are:

            - Size7
            - Size8
            - Size9
            - Size10
            - Size11
            - Size12
            - Size14
            - Size16
            - Size18
            - Size20
            - Size22
            - Size24
            - Size26
            - Size28
            - Size36
            - Size48
            - Size72
        id:
          type: string
          description: ""
        imageBase64:
          type: string
          description: ""
        transparency:
          type: string
          description: ""
        watermarkText:
          type: string
          description: ""
      description: ""
      x-ds-definition-name: watermark
      x-ds-category: Accounts
      x-ds-order: "200"
      x-ms-summary: ""
    PaymentGatewayAccounts:
      type: object
      properties:
        displayName:
          type: string
          description: |-
            A user-defined name for a connected gateway account.

            This name is used in the Admin panel in the list of connected accounts and in Tagger in the payment gateway selector.

            The human-readable version of `paymentGatewayAccountId`.
        paymentGateway:
          type: string
          description: |-
            Payment gateway used by the connected gateway account.
            This is the name used by the API.
            For a human-readable version use `paymentGatewayDisplayName`.

            Possible values are:

            * `Stripe`
            * `Braintree`
            * `AuthorizeDotNet`
        paymentGatewayAccountId:
          type: string
          description: A GUID that identifies the payment gateway account. For a human-readable
            version use `displayName`.
        paymentGatewayDisplayName:
          type: string
          description: |-
            Display name of the payment gateway used by the connected gateway account.
            This is the human-readable version of `paymentGateway`.

            Possible values are:

            * Stripe
            * Braintree
            * Authorize.Net
      description: Information about a connected payment gateway account.
      x-ds-definition-name: paymentGatewayAccount
      x-ds-category: Payments
      x-ds-order: "210"
      x-ms-summary: Information about a connected payment gateway account.
    NotaryJournals:
      type: object
      properties:
        createdDate:
          type: string
          description: ""
        documentName:
          type: string
          description: ""
        jurisdiction:
          $ref: '#/components/schemas/jurisdiction'
        notaryJournalId:
          type: string
          description: ""
        notaryJournalMetaData:
          $ref: '#/components/schemas/notaryJournalMetaData'
        signerName:
          type: string
          description: |
            The in-person signer's full legal name.

            Required when `inPersonSigningType` is `inPersonSigner`.
            For eNotary flow, use `name` instead.

            Maximum Length: 100 characters.
      description: ""
      x-ds-definition-name: notaryJournal
      x-ds-category: Envelopes
      x-ds-order: "220"
      x-ms-summary: ""
    IdentityVerifications:
      type: object
      properties:
        identityVerification:
          type: array
          description: "Specifies the ID Verification workflow applied on an envelope\
            \ by workflow ID. <br/>See the [list](https://developers.docusign.com/esign-rest-api/reference/Accounts/IdentityVerifications/list)\
            \ method in the [IdentityVerifications](https://developers.docusign.com/esign-rest-api/reference/Accounts/IdentityVerifications)\
            \ resource for more information on how to retrieve workflow IDs available\
            \ for an account. <br/>This can be used in addition to other [recipient\
            \ authentication](https://support.docusign.com/en/guides/ndse-user-guide-recipient-authentication)\
            \ methods. <br/>Note that ID Verification and ID Check are two distinct\
            \ methods. ID Verification checks recipients' identity by verifying their\
            \ ID while ID Check relies on data available on public records (such as\
            \ current and former address)."
          items:
            $ref: '#/components/schemas/accountIdentityVerificationWorkflow'
      description: ""
      x-ds-definition-name: accountIdentityVerificationResponse
      x-ds-category: Accounts
      x-ds-order: "30"
      x-ms-summary: ""
    EnvelopeDocumentHtmlDefinitions:
      type: object
      properties:
        htmlDefinitions:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/documentHtmlDefinitionOriginal'
      description: ""
      x-ds-definition-name: documentHtmlDefinitionOriginals
      x-ds-category: Envelopes
      x-ds-order: "220"
      x-ms-summary: ""
    DocumentResponsiveHtmlPreview:
      type: object
      properties:
        htmlDefinitions:
          type: array
          description: ""
          items:
            type: string
      description: ""
      x-ds-definition-name: documentHtmlDefinitions
      x-ds-category: Envelopes
      x-ds-order: "230"
      x-ms-summary: ""
    EnvelopeHtmlDefinitions:
      type: object
      properties:
        htmlDefinitions:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/documentHtmlDefinitionOriginal'
      description: ""
      x-ds-definition-name: documentHtmlDefinitionOriginals
      x-ds-category: Envelopes
      x-ds-order: "240"
      x-ms-summary: ""
    ResponsiveHtmlPreview:
      type: object
      properties:
        htmlDefinitions:
          type: array
          description: ""
          items:
            type: string
      description: ""
      x-ds-definition-name: documentHtmlDefinitions
      x-ds-category: Envelopes
      x-ds-order: "250"
      x-ms-summary: ""
    TemplateDocumentResponsiveHtmlPreview:
      type: object
      properties:
        htmlDefinitions:
          type: array
          description: ""
          items:
            type: string
      description: ""
      x-ds-definition-name: documentHtmlDefinitions
      x-ds-category: Templates
      x-ds-order: "280"
      x-ms-summary: ""
    TemplateResponsiveHtmlPreview:
      type: object
      properties:
        htmlDefinitions:
          type: array
          description: ""
          items:
            type: string
      description: ""
      x-ds-definition-name: documentHtmlDefinitions
      x-ds-category: Templates
      x-ds-order: "290"
      x-ms-summary: ""
    TemplateDocumentHtmlDefinitions:
      type: object
      properties:
        htmlDefinitions:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/documentHtmlDefinitionOriginal'
      description: ""
      x-ds-definition-name: documentHtmlDefinitionOriginals
      x-ds-category: Templates
      x-ds-order: "300"
      x-ms-summary: ""
    TemplateHtmlDefinitions:
      type: object
      properties:
        htmlDefinitions:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/documentHtmlDefinitionOriginal'
      description: ""
      x-ds-definition-name: documentHtmlDefinitionOriginals
      x-ds-category: Templates
      x-ds-order: "310"
      x-ms-summary: ""
    Comments:
      type: object
      properties:
        contactId:
          type: string
          description: The unique identifier of a person in the contacts address book.
        contactPhoneNumbers:
          type: array
          description: |-
            A list of the contact's phone numbers.

            **Note**: The phone numbers associated with shared contacts do not display to users other than the user who added the contact. Additionally, in the following scenarios, the phone number of a shared contact does not populate automatically for anyone other than the user who added the contact:

            - Sending an envelope by using SMS
            - Using phone authentication

            You must ask the user who added the contact for the phone number and then manually enter it into the authentication box.
          items:
            $ref: '#/components/schemas/contactPhoneNumber'
        contactUri:
          type: string
          description: The URI for retrieving information about the contact.
        emails:
          type: array
          description: ""
          items:
            type: string
        errorDetails:
          $ref: '#/components/schemas/errorDetails'
        name:
          type: string
          description: ""
        organization:
          type: string
          description: ""
        shared:
          type: string
          description: ""
        signingGroup:
          type: string
          description: ""
        signingGroupName:
          type: string
          description: "The display name for the signing group. \n\nMaximum Length:\
            \ 100 characters. "
      description: ""
      x-ds-definition-name: contact
      x-ds-category: Envelopes
      x-ds-order: "160"
      x-ms-summary: ""
    ConnectSecret:
      type: object
      properties:
        failures:
          type: array
          description: An array of containing failure information from the Connect
            failure log.
          items:
            $ref: '#/components/schemas/connectLog'
        logs:
          type: array
          description: "A complex type containing Connect log information. It is divided\
            \ into two sections, one for regular logs and one for Connect failures. "
          items:
            $ref: '#/components/schemas/connectLog'
        totalRecords:
          type: string
          description: Record count.
        type:
          type: string
          description: "Type of the user. Valid values: type_owner, type_participant."
      description: ""
      x-ds-definition-name: connectLogs
      x-ds-category: Connect
      x-ds-order: "50"
      x-ms-summary: ""
    Signature:
      type: object
      properties:
        documents:
          type: array
          description: Complex element contains the details on the documents in the
            envelope.
          items:
            $ref: '#/components/schemas/signHashDocument'
        redirectionUrl:
          type: string
          description: ""
        remainingSignatureRequests:
          type: string
          description: ""
      description: ""
      x-ds-definition-name: completeSignHashResponse
      x-ds-category: Signature
      x-ds-order: "50"
      x-ms-summary: ""
x-ds-allow-editing: false
x-ds-categories:
- name: Authentication
  summary: Logging in and authentication
  description: |-
    Use the Authentication category to manage various account login tasks including:

    * Getting login information for a user.
    * Managing linked social accounts.
    * Getting and revoking OAuth tokens.
- name: Envelopes
  summary: Creating and sending envelopes
  description: |+
    The DocuSign API Envelope category includes the resources and methods for sending and managing envelopes and envelope data.

    Envelopes are the key objects within the DocuSign eSignature system. As a result, they are complex data structures with few required fields. See the [API Recipes](https://www.docusign.com/developer-center/recipes) for use case examples and their solutions.

    To create and send envelopes, see the [Envelopes resource](Envelopes).

- name: Connect
  summary: Connect configuration and logging
  description: "The Connect category enables your application to be called via HTTPS\
    \ when an event of interest occurs.\n\nUse the Connect service to \"end the polling\
    \ madness.\" With Connect, there is no need for your application to poll DocuSign\
    \ every 15 minutes to learn the latest about your envelopes.\n\nInstead, you register\
    \ your interest in one or more types of envelope or recipient events. Then, when\
    \ an interesting event occurs, the DocuSign platform will contact your application\
    \ with the event's details and data. You can register interest in envelopes sent\
    \ by particular users in your account, or for envelopes sent by any user.\n\n\
    ## Incoming Connect Calls\nTo use the Connect service, your application needs\
    \ to provide an https url that can be called from the public internet. If your\
    \ application runs on a server behind your organization's firewall, then you will\
    \ need to create a \"pinhole\" in the firewall to allow the incoming Connect calls\
    \ from DocuSign to reach your application. Other techniques for receiving the\
    \ incoming calls including proxy servers and DMZ networking can also be used.\
    \ \n\n## Per-envelope Connect Configuration\nInstead of registering a general\
    \ Connect configuration and listener, an individual envelope can have its own\
    \ Connect configuration. See the `eventNotification` field for envelopes.\n\n\
    ## Categories\nUse the Connect category for:\n\n* Programmatically creating Connect\
    \ configurations. Connect configurations can be created manually by using the\
    \ DocuSign web service, or programmatically via the API. Configurations created\
    \ via the API can be seen and updated from the web service.\n* Retrieving and\
    \ managing the event log for your Connect configurations. \n* Requesting that\
    \ an event be re-published to the listener."
- name: Templates
  summary: Template creation and management
  description: |-
    Use the Templates category to manage your account's templates.

    You can:

    * Create, list, get, update, and delete templates.
    * Manage templates' notification and group sharing settings.
    * Fetch and rotate pages from a document used by a template.

    Templates can be created programmatically or can be created via the DocuSign web interface and then used by your application.
- name: SigningGroups
  summary: Send a signing request to a group of potential signers
  description: |-
    Use the SigningGroup category to manage signing groups that allow you anyone in the group to sign a document.

    The category allows you create the signing group and manage the users in the group.
- name: Folders
  summary: Folders for completed envelopes
  description: "Use the Folders category to manage envelopes in your folders. \n\n\
    You can list the folder contents and move envelopes between folders."
- name: CustomTabs
  summary: Custom tabs
  description: "Custom Tabs enable accounts to have one or more pre-configured (custom)\
    \ tabs. Custom tabs save time when users are tagging documents since the users\
    \ don't have to manually set the tabs' parameters.\n\nThis category enables custom\
    \ tabs to be managed programmatically, including creation, deletion, etc. \n"
- name: CloudStorage
  summary: Cloud storage providers and user management
  description: |-
    Use the Cloud Storage category to list the user's cloud storage document contents.

    It is also used to manage the user's authentication/accounts with cloud storage service providers.
- name: Users
  summary: User management
  description: |-
    Use the Users category to manage the users in your accounts.

    You can:

    * Set custom user settings.
    * Manage a users profile.
    * Add delete users.
    * Add and delete the intials and signature images for a user.
- name: UserGroups
  summary: Group users for common permissions and branding
  description: |-
    Use the User Groups category to manage your permissions groups.

    You can:

    * Create and delete groups.
    * Add users to, and delete users from, your groups.
    * Manage the brand information associated with a group.
- name: Accounts
  summary: Account management
  description: "Use the Account category for various account management tasks including:\n\
    \n* Programmatically creating and deleting accounts.\n* Getting information about\
    \ an account and its capabilities.\n* Branding the account with custom colors,\
    \ message text, and more.\n* Account charges.\n\nThe Account category also includes\
    \ end points for \n* Listing the recipient names associated with an email address\
    \ that was used by the account. For example, a single email address is often shared\
    \ by mulitple members of a family.\n\n\n"
- name: Billing
  summary: Invoices
  description: |-
    Use the Billing category to manage the following billing related tasks:

    * Retrieve and update billing plan information.
    * Retrieve invoices.
    * Retrieve and update payment information.
- name: Diagnostics
  summary: Diagnostics and request logging
  description: |-
    The Diagnostics category provides miscellaneous end points.

    They include:
    * Requesting and managing the API call-logging feature. (Perfect for debugging your app!)
    * Getting information on the API's resources and versions.
- name: PowerForms
  summary: PowerForm creation and management
  description: The PowerForms category enables PowerForms to be created and managed.
- name: Workspaces
  summary: Workspace creation and management
  description: |+
    Workspaces creation and management.

- name: Payments
  summary: Manage Payments
  description: This category includes resources for managing payment gateways. Payment
    information is added to envelopes via methods in the Envelopes category.
- name: Signature
  summary: ""
  description: ""
x-original-swagger-version: "2.0"
